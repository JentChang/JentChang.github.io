<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Morning Lectures-181229</title>
      <link href="/2018/12/29/morning-lectures/"/>
      <url>/2018/12/29/morning-lectures/</url>
      
        <content type="html"><![CDATA[<h2 id="question-1"><a href="#question-1" class="headerlink" title="question 1"></a>question 1</h2><blockquote><p>什么是Python？使用Python有什么好处？</p></blockquote><blockquote><p>Python是一种编程语言，它有对象、模块、线程、异常处理和自动内存管理。<br>它简洁、简单、方便、容易扩展，有许多自带的数据结构，而且它开源。</p></blockquote><h2 id="question-2"><a href="#question-2" class="headerlink" title="question 2"></a>question 2</h2><blockquote><p>Python都有哪些自带的数据结构？</p></blockquote><blockquote><p>Python自带的数据结构分为可变的和不可变的。可变的有：列表、集合、字典；不可变的有：字符串、元组、数。</p></blockquote><h2 id="question-3"><a href="#question-3" class="headerlink" title="question 3"></a>question 3</h2><blockquote><p>如何将一个数字转换成一个字符串？</p></blockquote><blockquote><p>你可以使用自带函数str()将一个数字转换为字符串。如果你想要八进制或者十六进制数，可以用oct()或hex()。</p></blockquote><h2 id="question-4"><a href="#question-4" class="headerlink" title="question 4"></a>question 4</h2><blockquote><p>代码结果?</p><pre class=" language-python"><code class="language-python">p <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">a</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> p    p <span class="token operator">=</span> s <span class="token operator">-</span> x    <span class="token keyword">return</span> p<span class="token keyword">def</span> <span class="token function">b</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> p    p <span class="token operator">=</span> <span class="token punctuation">(</span>s <span class="token operator">+</span> x<span class="token punctuation">)</span>  <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">.</span>     <span class="token keyword">return</span> p<span class="token keyword">def</span> <span class="token function">c</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">and</span> b<span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span>c<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>p</code></pre></blockquote><blockquote><p>p=0 考察and内容，左边函数返回值为False则不再执行右边函数。</p></blockquote><h2 id="question-5"><a href="#question-5" class="headerlink" title="question 5"></a>question 5</h2><blockquote><p>期权的收益和利润or损失函数<br>看涨期权价格 合约到期价格S,执行价格X,期权价格 C<br>如果S&gt;X 买方收益为S-X-C, 否则收益为0-C<br>代码实现？</p></blockquote><blockquote><p>描述性的思考与模型性的思考</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">profit_fun</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> s <span class="token operator">></span> x<span class="token punctuation">:</span>        <span class="token keyword">return</span> s <span class="token operator">-</span> x <span class="token operator">-</span> c    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">-</span> c</code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">profit_fun</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>abs<span class="token punctuation">(</span>s <span class="token operator">-</span> x<span class="token punctuation">)</span> <span class="token operator">+</span> s <span class="token operator">-</span> x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> c</code></pre></blockquote><h2 id="question-6"><a href="#question-6" class="headerlink" title="question 6"></a>question 6</h2><blockquote><p>| &amp; ^<br>3^3=?</p></blockquote><blockquote><p>3^3 = 0　考察位的运算</p></blockquote><h2 id="question-7"><a href="#question-7" class="headerlink" title="question 7"></a>question 7</h2><blockquote><p>‘01’表示’勇敢’,’10’表示’聪明’,’11’表示？</p></blockquote><blockquote><p>{‘勇敢’, ‘聪明’} 这种方法是常见的编码格式，二进制编码<br>拓展：<br>体重y(数字)  身高x(数字)  性别(不是数字)<br>关系 $$y=\sigma+\theta x+ ?????$$<br>性别 ‘男’=’0’or’1’, ‘女’=’0’or’1’<br>体重y(数字)  常数1   身高x(数字)  男(数字)  女(数字 非男既女，和入常数项)<br>$$y=\theta_0 x_0 + \theta_1 x_1 + \theta_2 x_2$$</p></blockquote><h2 id="question-8"><a href="#question-8" class="headerlink" title="question 8"></a>question 8</h2><blockquote><p>Python是如何被解释的？</p></blockquote><blockquote><p>Python是一种解释性语言，它的源代码可以直接运行。Python解释器会将源代码转换成中间语言，之后再翻译成机器码再执行。</p></blockquote><h2 id="question-9"><a href="#question-9" class="headerlink" title="question 9"></a>question 9</h2><blockquote><p>代码结果</p><pre class=" language-python"><code class="language-python">list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'e'</span><span class="token punctuation">]</span><span class="token keyword">print</span> list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span> list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span></code></pre></blockquote><blockquote><p>切片返回的是空列表，而索引会报错</p></blockquote><h2 id="question-10"><a href="#question-10" class="headerlink" title="question 10"></a>question 10</h2><blockquote><p>这两个参数是什么意思：*args，**kwargs？我们为什么要使用它们？</p></blockquote><blockquote><p>如果我们不确定要往函数中传入多少个参数，或者我们想往函数中以列表和元组的形式传参数时，那就使要用<em>args；<br>如果我们不知道要往函数中传入多少个关键词参数，或者想传入字典的值作为关键词参数时，那就要使用**kwargs。<br>args 和 kwargs这两个标识符是约定俗成的用法，你当然还可以用</em>bob和**billy，但是这样就并不太妥。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> BreadCumbs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> question </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学07：误导人的线形图</title>
      <link href="/2018/12/25/stats-07/"/>
      <url>/2018/12/25/stats-07/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="误导人的线形图"><a href="#误导人的线形图" class="headerlink" title="误导人的线形图"></a>误导人的线形图</h1><h4 id="消费者偏好数据"><a href="#消费者偏好数据" class="headerlink" title="消费者偏好数据"></a>消费者偏好数据</h4><p>表中给出受访者中偏爱美味可乐(激动汽水，没有偏好)的人数百分比</p><table><thead><tr><th style="text-align:right">years</th><th style="text-align:right">Prefer Yummy Cola</th><th style="text-align:right">Prefer Thril Soda</th><th style="text-align:right">No preference</th></tr></thead><tbody><tr><td style="text-align:right">2006</td><td style="text-align:right">80%</td><td style="text-align:right">12%</td><td style="text-align:right">8%</td></tr><tr><td style="text-align:right">2007</td><td style="text-align:right">76%</td><td style="text-align:right">19%</td><td style="text-align:right">5%</td></tr><tr><td style="text-align:right">2008</td><td style="text-align:right">77%</td><td style="text-align:right">19%</td><td style="text-align:right">4%</td></tr><tr><td style="text-align:right">2009</td><td style="text-align:right">73%</td><td style="text-align:right">20%</td><td style="text-align:right">7%</td></tr><tr><td style="text-align:right">2010</td><td style="text-align:right">73%</td><td style="text-align:right">21%</td><td style="text-align:right">6%</td></tr><tr><td style="text-align:right">2011</td><td style="text-align:right">68%</td><td style="text-align:right">25%</td><td style="text-align:right">7%</td></tr></tbody></table><p><img src="/images/stats/s_07.png" alt="图片"></p><blockquote><p>从图中我们看到，里面的数据是正确的(和表中是对应的)<br>喜爱美味可乐的人比例在下降，喜爱激动汽水人数占比在增加<br>但是我们并不能给出变化幅度的结论，而且即使喜爱美味可乐的人占比下降，其实喜爱激动汽水的人数占比还是远远跟不上的，至少按照这样还是一个长远的过程．</p></blockquote><blockquote><p>我觉得我们需要一个正确的绘图来表达两个的对比<br>他们需要相同的坐标中比较</p></blockquote><p><img src="/images/stats/s_07_02.png" alt="图片"></p><h4 id="利用pyhton绘制线性图"><a href="#利用pyhton绘制线性图" class="headerlink" title="利用pyhton绘制线性图"></a>利用<code>pyhton</code>绘制线性图</h4><h5 id="误导人的线形图程序"><a href="#误导人的线形图程序" class="headerlink" title="误导人的线形图程序"></a>误导人的线形图程序</h5><pre><code>import numpy as np import matplotlib.pyplot as plt from mpl_toolkits.axisartist.axislines import SubplotZero# 设置图窗口1fig = plt.figure(figsize=(7, 2), dpi=120, facecolor=&#39;#FFDAB9&#39;, edgecolor=&#39;c&#39;) ax1 = SubplotZero(fig, 1, 2, 1, axisbg=&#39;#FFDAB9&#39;)fig.add_subplot(ax1)ax1.grid(True, color=&#39;w&#39;, linestyle=&#39;-&#39;)ax1.axis[&#39;right&#39;, &#39;top&#39;].set_visible(False) # 设置窗口2ax2 = SubplotZero(fig, 1, 2, 2, axisbg=&#39;#FFDAB9&#39;)fig.add_subplot(ax2)ax2.grid(True, color=&#39;w&#39;, linestyle=&#39;-&#39;)ax2.axis[&#39;right&#39;, &#39;top&#39;].set_visible(False) # 创建数据prefer = [&#39;Prefer Yummy Cola&#39;, &#39;Prefer Thril Soda&#39;, &#39;No preference&#39;]years = [&#39;2006&#39;, &#39;2007&#39;, &#39;2008&#39;, &#39;2009&#39;, &#39;2010&#39;, &#39;2011&#39;]years_x = np.arange(1, len(years)+1)prefer_cola = [80, 76, 77, 73, 73, 68]prefer_soda = [12, 19, 19, 20, 21, 25]y_cola = np.arange(20, 110, 10)y_soda = np.arange(0, 40, 10)# 画图ax1.plot(years_x, prefer_cola, &#39;r-o&#39;)ax1.set_xticks(years_x, years)ax1.set_yticks(y_cola)ax1.set_title(prefer[0])ax2.plot(years_x, prefer_soda, &#39;g-o&#39;)ax2.set_xticks(years_x, years)ax2.set_yticks(y_soda)ax2.set_title(prefer[1])plt.show()</code></pre><h5 id="正确的线形绘图程序"><a href="#正确的线形绘图程序" class="headerlink" title="正确的线形绘图程序"></a>正确的线形绘图程序</h5><pre><code>import numpy as np import matplotlib.pyplot as plt from mpl_toolkits.axisartist.axislines import SubplotZero# 设置图窗口1fig = plt.figure(figsize=(7, 4), dpi=120, facecolor=&#39;#FFDAB9&#39;, edgecolor=&#39;c&#39;) ax1 = SubplotZero(fig, 1, 1, 1, axisbg=&#39;#FFDAB9&#39;)fig.add_subplot(ax1)ax1.grid(True, color=&#39;w&#39;, linestyle=&#39;-&#39;)ax1.axis[&#39;right&#39;, &#39;top&#39;].set_visible(False) # 创建数据prefer = [&#39;Prefer Yummy Cola&#39;, &#39;Prefer Thril Soda&#39;, &#39;No preference&#39;]years = [&#39;2006&#39;, &#39;2007&#39;, &#39;2008&#39;, &#39;2009&#39;, &#39;2010&#39;, &#39;2011&#39;]years_x = np.arange(1, len(years)+1)prefer_cola = [80, 76, 77, 73, 73, 68]prefer_soda = [12, 19, 19, 20, 21, 25]y_cola = np.arange(0, 110, 10)# 画图ax1.plot(years_x, prefer_cola, &#39;r-o&#39;)ax1.plot(years_x, prefer_soda, &#39;g-o&#39;)ax1.set_xticks(years_x, years)ax1.set_yticks(y_cola)ax1.set_title(&#39;Prefer Yummy Cola and Prefer Thril Soda&#39;)plt.show()</code></pre><blockquote><p>由于博文标题在图片上的颜色影响，代码中添加了背景的设置，如果觉得过于繁琐，可以参照前几节的matplotlib命令，或者参考后期的<code>Machine Learning</code>中<a href="/contents/machine_learning/matplotlib.html">matplotlib</a>内容.</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Python </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 误导人的线形图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学06：饼图</title>
      <link href="/2018/12/25/stats-06/"/>
      <url>/2018/12/25/stats-06/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h1><p>饼图也叫圆图，当然你最常听到的应该是饼图．<br>就像它的名字，一个饼被分成多份，每一份的大小代表其所对应的数据类型占据总数据的比列<br>可以通过它直观的发现每个特征占据总量的对比情况</p><h4 id="一家集团的现金流出表部分内容"><a href="#一家集团的现金流出表部分内容" class="headerlink" title="一家集团的现金流出表部分内容"></a>一家集团的现金流出表部分内容</h4><table><thead><tr><th style="text-align:right">项目</th><th style="text-align:right">2011</th><th style="text-align:right">2012</th><th style="text-align:right">2013</th><th style="text-align:right">2014</th><th style="text-align:right">2015</th></tr></thead><tbody><tr><td style="text-align:right">经营活动现金流出(亿元)</td><td style="text-align:right">33.43</td><td style="text-align:right">34.49</td><td style="text-align:right">46.49</td><td style="text-align:right">54.18</td><td style="text-align:right">57.51</td></tr><tr><td style="text-align:right">投资活动现金流出(亿元)</td><td style="text-align:right">3.02</td><td style="text-align:right">5.97</td><td style="text-align:right">1.55</td><td style="text-align:right">2.38</td><td style="text-align:right">52.11</td></tr><tr><td style="text-align:right">筹资活动现金流出(亿元)</td><td style="text-align:right">2.30</td><td style="text-align:right">6.09</td><td style="text-align:right">6.60</td><td style="text-align:right">6.16</td><td style="text-align:right">4.62</td></tr></tbody></table><p><img src="/images/stats/s_06.png" alt="图片"></p><blockquote><p>从饼图中我们可以很直观的看到现金的去向，有70%-90%的现金用于经营活动，而且逐年比例增高，投资活动、筹资活动的现金流比较小。</p></blockquote><blockquote><p>它的每一份的面积和它所代表的数据属性占总属性的百分比是等价的</p></blockquote><h4 id="利用pyhton绘制线性图"><a href="#利用pyhton绘制线性图" class="headerlink" title="利用pyhton绘制线性图"></a>利用<code>pyhton</code>绘制线性图</h4><pre><code>import numpy as np import matplotlib.pyplot as plt from matplotlib import cmlabels = &#39;Business&#39;, &#39;Investment&#39;, &#39;Financing&#39;money = [33.43, 3.02, 2.03]explode = (0.05, 0.1, 0.1) fig, ax = plt.subplots()# 设置颜色，也可以不设置(colors不传值，会采用默认值)colors = cm.rainbow(np.arange(len(labels))/len(labels))ax.pie(money, explode=explode, labels=labels, autopct=&quot;%1.1f%%&quot;,       shadow=True, startangle=180, colors=colors)ax.axis(&#39;equal&#39;)plt.title(&#39;Cash Outflows of 2011&#39;)plt.show()</code></pre><blockquote><p>程序中并没有像图片中的效果，图片是我在校期间的报表分析作业，它是通过<code>excel</code>绘制的，当时我还不认识计算机语言．<br>你也可以通过<code>excel</code>绘制，它可能会通过很快的方法达到你想要的结果．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Python </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 饼图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学05：线形图</title>
      <link href="/2018/12/25/stats-05/"/>
      <url>/2018/12/25/stats-05/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="线形图"><a href="#线形图" class="headerlink" title="线形图"></a>线形图</h1><h4 id="一家投资公司有如下12个月的特定股票业绩数据如下表"><a href="#一家投资公司有如下12个月的特定股票业绩数据如下表" class="headerlink" title="一家投资公司有如下12个月的特定股票业绩数据如下表"></a>一家投资公司有如下12个月的特定股票业绩数据如下表</h4><p>这一年间，股价是上涨？下跌？还是不变？</p><table><thead><tr><th style="text-align:right">July</th><th style="text-align:right">August</th><th style="text-align:right">September</th><th style="text-align:right">October</th><th style="text-align:right">November</th><th style="text-align:right">December</th></tr></thead><tbody><tr><td style="text-align:right">10.1</td><td style="text-align:right">11.1</td><td style="text-align:right">10.2</td><td style="text-align:right">12</td><td style="text-align:right">12.7</td><td style="text-align:right">12.1</td></tr></tbody></table><table><thead><tr><th style="text-align:right">January</th><th style="text-align:right">February</th><th style="text-align:right">March</th><th style="text-align:right">April</th><th style="text-align:right">May</th><th style="text-align:right">June</th></tr></thead><tbody><tr><td style="text-align:right">13.2</td><td style="text-align:right">13.7</td><td style="text-align:right">16.9</td><td style="text-align:right">15.3</td><td style="text-align:right">15.9</td><td style="text-align:right">16.7</td></tr></tbody></table><blockquote><p>线性图可以用于随时间变化的事物</p></blockquote><p><img src="/images/stats/s_05.png" alt="图片"></p><blockquote><p>从图中很容易发现这每个月之间股价有涨有跌，对于问题，这一年整体趋势是涨的</p></blockquote><h4 id="利用pyhton绘制线性图"><a href="#利用pyhton绘制线性图" class="headerlink" title="利用pyhton绘制线性图"></a>利用<code>pyhton</code>绘制线性图</h4><pre><code>import numpy as npimport matplotlib.pyplot as pltfrom scipy import optimizedef line_fun(x, theate, beta):    return theate * x + betastock_name = [&#39;July&#39;, &#39;August&#39;, &#39;September&#39;, &#39;October&#39;, &#39;November&#39;, &#39;December&#39;,         &#39;January&#39;, &#39;February&#39;, &#39;March&#39;, &#39;April&#39;, &#39;May&#39;, &#39;June&#39;]stock_num = np.arange(1, len(stock_name)+1)price = np.array([10.1, 11.1, 10.2, 12, 12.7, 12.1, 13.2, 13.7, 16.9, 15.3, 15.9, 16.7])price_y = np.arange(6, 20, 2)# 线性拟合theate, beta = optimize.curve_fit(line_fun, stock_num, price)[0]y = line_fun(stock_num, theate, beta)plt.style.use(&#39;ggplot&#39;)plt.figure(figsize=(14, 6))plt.plot(stock_num, price, &#39;b-o&#39;)plt.plot(stock_num, y, &#39;r-.&#39;)plt.xticks(stock_num, stock_name, rotation=45)plt.yticks(price_y)plt.title(&#39;price of stock share, July 2010-June 2011&#39;)plt.xlabel(&#39;months&#39;)plt.ylabel(&quot;price($)&quot;)plt.show()</code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Python </tag>
            
            <tag> matplotlib </tag>
            
            <tag> scipy </tag>
            
            <tag> 线形图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学03：象形统计图</title>
      <link href="/2018/12/25/stats-03/"/>
      <url>/2018/12/25/stats-03/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="象形统计图-pictograph"><a href="#象形统计图-pictograph" class="headerlink" title="象形统计图 pictograph"></a>象形统计图 pictograph</h1><blockquote><p>表现统计数字大小和变动的各种图形总称</p></blockquote><blockquote><p>特点：形象，直观，数据比例很清楚</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 象形统计图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学04：条形图</title>
      <link href="/2018/12/25/stats-04/"/>
      <url>/2018/12/25/stats-04/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="条形图-bar"><a href="#条形图-bar" class="headerlink" title="条形图 bar"></a>条形图 bar</h1><h4 id="学生期中成绩和期末成绩如下表"><a href="#学生期中成绩和期末成绩如下表" class="headerlink" title="学生期中成绩和期末成绩如下表"></a>学生期中成绩和期末成绩如下表</h4><table><thead><tr><th>name</th><th style="text-align:right">Jasmine</th><th style="text-align:right">Jeff</th><th style="text-align:right">Nevin</th><th style="text-align:right">Alejandra</th><th style="text-align:right">Marta</th></tr></thead><tbody><tr><td>MidtermExam</td><td style="text-align:right">73</td><td style="text-align:right">87</td><td style="text-align:right">84</td><td style="text-align:right">81</td><td style="text-align:right">95</td></tr><tr><td>FinalExam</td><td style="text-align:right">78</td><td style="text-align:right">85</td><td style="text-align:right">87</td><td style="text-align:right">95</td><td style="text-align:right">90</td></tr></tbody></table><p>从表中，我们并不能直接(数据量大的情况下更为明显)的观察出不同成绩的对比．<br>因此依据表中数据，利用<code>matplotlib</code>绘制了条形图，如下图：<br><img src="/images/stats/s_04.png" alt="图片"></p><blockquote><p>从图中很容易发现Alejandra进步最大;Marta的期末成绩虽然很高,但是相对于期中成绩并没有发挥的很好;Jeff,Nevin的成绩相对比较稳定;Jasmine的成绩稳健增长(当然两个数据很难得出这样的答案，这里只是举例)等等．</p></blockquote><blockquote><p>把数据通过可视化的方法呈现出来，可以让我们更直观的观察一些在数字上没有直接发现的东西．</p></blockquote><p><code>以下代码是绘制条形图的命令</code></p><pre><code>import numpy as npimport matplotlib.pyplot as pltname = [&#39;Jasmine&#39;, &#39;Jeff&#39;, &#39;Nevin&#39;, &#39;Alejandra&#39;, &#39;Marta&#39;]midterm_exam = (73, 87, 84, 81, 95)final_exam = (78, 85, 87, 95, 90)fig, ax = plt.subplots()index = np.arange(len(name))bar_width = 0.35opacity = 0.6error_config = {&#39;ecolor&#39;: &#39;0.3&#39;}rects1 = ax.bar(index + bar_width / 2, midterm_exam, bar_width,                color=&#39;b&#39;, alpha=opacity, yerr=3,                error_kw=error_config,                label=&#39;midterm_exam&#39;)rects2 = ax.bar(index + 3 * bar_width / 2, final_exam, bar_width,                color=&#39;r&#39;, alpha=opacity, yerr=3,                error_kw=error_config,                label=&#39;final_exam&#39;)ax.set_xlabel(&#39;name&#39;)ax.set_ylabel(&#39;Score(%)&#39;)ax.set_title(&#39;Scores on Midterm and Final Exams&#39;)ax.set_xticks(index + 3 * bar_width / 2)ax.set_xticklabels(name)ax.legend(fontsize=&#39;x-small&#39;, loc=&#39;upper left&#39;, scatterpoints=1)plt.show()</code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Python </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 条形图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学02：极差 中程数</title>
      <link href="/2018/12/25/stats-02/"/>
      <url>/2018/12/25/stats-02/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="极差-range"><a href="#极差-range" class="headerlink" title="极差 range"></a>极差 range</h1><p>最小值于最大值之差</p><blockquote><p>数值越小越紧密</p></blockquote><p>一组数：65,81,73,58,94,79,67,93,82<br>range: 94-65 = 29</p><pre><code>L = [65,81,73,58,94,79,67,93,82]range = max(L) - min(L)</code></pre><h1 id="中程数-midrange"><a href="#中程数-midrange" class="headerlink" title="中程数 midrange"></a>中程数 midrange</h1><p>最小值和最大值的算术平均数</p><blockquote><p>考虑集中趋势的又一种方式</p></blockquote><pre><code>midrange = (max(L) + min(L)) / 2</code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Python </tag>
            
            <tag> 极差 </tag>
            
            <tag> 中程数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学01：均值 中位数 众数</title>
      <link href="/2018/12/25/stats-01/"/>
      <url>/2018/12/25/stats-01/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="平均数-mean"><a href="#平均数-mean" class="headerlink" title="平均数 mean"></a>平均数 mean</h1><p>一组数：23　29　20　32　23　21　33　25<br>mean: (23+29+20+32+23+21+33+25)/8 = 25.75</p><pre><code>L = [23, 29, 20, 32, 23, 21, 33, 25]mean = sum(L) / 8</code></pre><h1 id="中位数-median"><a href="#中位数-median" class="headerlink" title="中位数 median"></a>中位数 median</h1><p>比它小和比它大的数的数量同样多，如果总的数量为偶数，取中间两个的平均值<br>首先将上面的数排序：20, 21, 23, 23, 25, 29, 32, 33　<br>median: (23+25)/2 = 24</p><pre><code>def quick(value):    &#39;&#39;&#39;排序函数    &#39;&#39;&#39;    if len(value) &lt; 2:        return value    mark = value[0]    smaller = [x for x in value if x &lt; mark]    equal = [x for x in value if x == mark]    bigger = [x for x in value if x &gt; mark]    return quick(smaller) + equal + quick(bigger)L = quick(L)index = len(L) // 2if not index:    mdeian = L[index]else:    mdeian = (L[index-1] + L[index]) / 2print(mdeian)</code></pre><pre><code>你也可以用下面的函数方法排序def insert(value):    for i in range(1,len(value)):        temp = value[i]        pos = i        for j in range(i-1, -1, -1):            if value[j] &gt; temp:                value[j+1] = value[j]                pos = j            else:                pos = j + 1                break        value[pos] = temp    return value</code></pre><h1 id="众数-mode"><a href="#众数-mode" class="headerlink" title="众数 mode"></a>众数 mode</h1><p>正如它的名字，出现次数最多的数字就是众数</p><blockquote><p>众数可以为多个</p></blockquote><pre><code>def mode_fun(value):    l = []     d = {}     mode = []    for i in range(len(value)):    # 把数字和对应的数学存入字典        if value[i] in d:             d[value[i]] += 1         else:             d[value[i]] = 1    for k, v in d.items():    # item返回元组         l.append(v)     for k, v in d.items():        if v == max(l):            mode.append(k)    return modemode_fun(L)</code></pre><blockquote><p>也可以直接通过<code>import numpy, scipy</code>很快的得出答案</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Python </tag>
            
            <tag> 均值 </tag>
            
            <tag> 中位数 </tag>
            
            <tag> 众数 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
