<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>案例：人脸识别导图　</title>
      <link href="/2019/02/27/case-facerecognition/"/>
      <url>/2019/02/27/case-facerecognition/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/case/人脸检测和人脸识别.png" alt="图片"></p><hr><p>老规矩，如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）</p>]]></content>
      
      
      <categories>
          
          <category> MachineLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MTCNN </tag>
            
            <tag> 神经网络 </tag>
            
            <tag> 卷积 </tag>
            
            <tag> 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习基础：汇总　</title>
      <link href="/2019/02/26/ml-api/"/>
      <url>/2019/02/26/ml-api/</url>
      
        <content type="html"><![CDATA[<p><strong>这里仅仅是编程的基础，和机器学习算法的简单理解和接口调用</strong><br><strong>随后我会慢慢的对每个机器学习算法的原理性内容进行补充</strong><br>精力有限，这里直接分享了我朋友（郭伟|Welian）汇总的整篇笔记．</p><h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><h1 id="数据分析DAY01"><a href="#数据分析DAY01" class="headerlink" title="数据分析DAY01"></a>数据分析DAY01</h1><h2 id="什么是数据分析？"><a href="#什么是数据分析？" class="headerlink" title="什么是数据分析？"></a>什么是数据分析？</h2><p>数据分析是指用适当的统计分析方法对收集来的大量数据进行分析，提取有用的信息形成结论而对结论加以详细研究、概括、总结的过程。</p><p><strong>使用python做数据分析的常用库</strong></p><ol><li>numpy        基础数值算法</li><li>scipy                科学计算</li><li>matplotlib      数据可视化</li><li>pandas           序列高级函数</li></ol><h2 id="numpy概述"><a href="#numpy概述" class="headerlink" title="numpy概述"></a>numpy概述</h2><ol><li>Numerical Python, 数值的python，补充了Python语言所欠缺的数值计算能力。</li><li>Numpy是其他数据分析及机器学习库的底层库。</li><li>Numpy完全标准C语言实现，效率充分优化。</li><li>Numpy开源免费。</li></ol><h3 id="numpy的历史"><a href="#numpy的历史" class="headerlink" title="numpy的历史"></a>numpy的历史</h3><ol><li>1995年， Numeric发布（numpy的前身）。  </li><li><p>2001年，Scipy-&gt;Numarray，提供多维数组运算。</p></li><li><p>2005年，Numeric+Numarray -&gt; Numpy</p></li><li>2006年，Numpy脱离Scipy称为独立项目。</li></ol><h3 id="numpy的核心：多维数组"><a href="#numpy的核心：多维数组" class="headerlink" title="numpy的核心：多维数组"></a>numpy的核心：多维数组</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> nparray <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>a <span class="token operator">=</span> array <span class="token operator">+</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="numpy基础"><a href="#numpy基础" class="headerlink" title="numpy基础"></a>numpy基础</h2><h3 id="ndarray数组"><a href="#ndarray数组" class="headerlink" title="ndarray数组"></a>ndarray数组</h3><h4 id="内存中的ndarray对象"><a href="#内存中的ndarray对象" class="headerlink" title="内存中的ndarray对象"></a>内存中的ndarray对象</h4><p><strong>元数据（metadata）</strong></p><p>存储对目标数组的描述信息，如：dim count, dimensions, dtype, data等等。</p><p><strong>实际数据</strong></p><p>完整的数组内容</p><p>将实际数据与元数据分开存放，一方面提高了内存空间的使用效率， 另一方面减少对实际数据的访问频率， 提高效率。</p><p>Numpy数组是<strong>同质数组</strong>，所有元素的数据类型必须相同。</p><h4 id="ndarray对象的创建"><a href="#ndarray对象的创建" class="headerlink" title="ndarray对象的创建"></a>ndarray对象的创建</h4><p>np.array(任何可以被解释为Numpy数组的逻辑结构)</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> nparray <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>np.arange(起始值(0)， 终止值， 步长(1))    </p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>np.zeros(数组元素个数, dtype=’类型’)</p><p>np.ones(数组元素格式, dtype=’类型’)  </p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'int32'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> a<span class="token punctuation">)</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'float32'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> a<span class="token punctuation">)</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'bool'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ndarray对象属性的基本操作"><a href="#ndarray对象属性的基本操作" class="headerlink" title="ndarray对象属性的基本操作"></a>ndarray对象属性的基本操作</h4><p><strong>数组的维度：</strong>array.shape</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 修改数组对象的维度</span>a<span class="token punctuation">.</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> a<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">'\n'</span><span class="token punctuation">)</span>a<span class="token punctuation">.</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> a<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>元素的类型：</strong>array.dtype</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 测试元素的类型相关操作</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把b中的每个元素当做float来看</span><span class="token comment" spellcheck="true"># 返回新类型的数组</span>c <span class="token operator">=</span> b<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'float32'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数组元素个数：</strong>array.size</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 测试数组元素的个数</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数组元素索引（下标）</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 测试数组索引操作</span>c <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 0页</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 0页 0行</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 0页 0行 0列</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 0页 0行 0列</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>c<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span>c<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span>c<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ndarray对象属性操作详解"><a href="#ndarray对象属性操作详解" class="headerlink" title="ndarray对象属性操作详解"></a>ndarray对象属性操作详解</h4><p><strong>Numpy的内部基本数据类型</strong></p><table><thead><tr><th>类型名</th><th>类型表示符</th></tr></thead><tbody><tr><td>布尔型</td><td>bool_</td></tr><tr><td>有符号整数型</td><td>int8(-128~127)/int16/int32/int64</td></tr><tr><td>无符号整型</td><td>uint8/uint16/uint32/uint64</td></tr><tr><td>浮点型</td><td>float16/float32/float64</td></tr><tr><td>复数型</td><td>complex64/complex128</td></tr><tr><td>字符串型</td><td>str_ (每个字符32位Unicode编码)</td></tr></tbody></table><p><strong>自定义复合类型</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token triple-quoted-string string">"""demo03_cls.py测试ndarray的自定义复合类型"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npdata <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">(</span><span class="token string">'zs'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'ww'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 第一种设置dtype的方式</span><span class="token comment" spellcheck="true"># 3个Unicode字符,3个32位整型组成的列表,整数</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U3, 3int32, int32'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取a数组中第一个元素的第一个字段的值</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'f0'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'f1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 第二种设置dtype的方式</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'names'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'scores'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'formats'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'U3'</span><span class="token punctuation">,</span> <span class="token string">'3int32'</span><span class="token punctuation">,</span> <span class="token string">'int32'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'scores'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 第三种设置dtype的方式</span>c <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token punctuation">[</span>    <span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span> <span class="token string">'str_'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'scores'</span><span class="token punctuation">,</span> <span class="token string">'int32'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token string">'int32'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 第四种设置dtype的方式</span><span class="token comment" spellcheck="true"># 存储数据时，</span><span class="token comment" spellcheck="true"># name字段占用8字节，从0字节的位置开始输出</span><span class="token comment" spellcheck="true"># scores字段占用12字节，从16字节的位置开始输出</span><span class="token comment" spellcheck="true"># 虽然name字段没有把前16个字节充分利用，但是</span><span class="token comment" spellcheck="true"># 在内存中字段的位置偏移量是一致的，访问</span><span class="token comment" spellcheck="true"># 效率将会得到提高。</span>d <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'U2'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'scores'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'3int32'</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'int32'</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 测试日期类型数组</span>e <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'2011'</span><span class="token punctuation">,</span> <span class="token string">'2012-01-01'</span><span class="token punctuation">,</span>              <span class="token string">'2013-01-01 01:01:01'</span><span class="token punctuation">,</span>              <span class="token string">'2012-02-01'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>f <span class="token operator">=</span> e<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'M8[D]'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>dtype<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>类型字符码</p><table><thead><tr><th>类型</th><th>字符码</th></tr></thead><tbody><tr><td>np.bool_</td><td>?</td></tr><tr><td>np.int8/16/32/64</td><td>i1/i2/i4/i8</td></tr><tr><td>np.uint8/16/32/64</td><td>u1/u2/u4/u8</td></tr><tr><td>np.float16/32/64</td><td>f2/f4/f8</td></tr><tr><td>np.complex64/128</td><td>c8/c16</td></tr><tr><td>np.str_</td><td>U&lt;字符数&gt;</td></tr><tr><td>np.datetime64</td><td>M8[Y / M / D / h / m / s]</td></tr></tbody></table><p><strong>ndarray数组对象维度操作</strong></p><p><strong>视图变维(数据共享):</strong> reshape()  ravel()</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a <span class="token operator">=</span> a<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>b <span class="token operator">=</span> a<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">999</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>b <span class="token operator">=</span> b<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>复制变维(数据独立):</strong> flatten()</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 复制变维 数据独立</span>c <span class="token operator">=</span> a<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>就地变维:</strong> 使用shape属性直接改变原数组对象的维度，不返回新数组。 resize(2, 2)</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 就地变维</span>c<span class="token punctuation">.</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>c<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>ndarray数组对象的切片操作</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 数组切片的参数与列表切片基本一致</span><span class="token comment" spellcheck="true"># step+（步长+）：默认从头向后切</span><span class="token comment" spellcheck="true"># step-（步长-）：默认从后向前切</span>array<span class="token punctuation">[</span>start<span class="token punctuation">:</span>end<span class="token punctuation">:</span>step<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>多维数组的切片操作</strong></p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> a<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 所有行的最后一列</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>ndarray数组的掩码操作</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>b <span class="token operator">=</span> a <span class="token operator">>=</span> <span class="token number">60</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>indices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出100以内3与7的倍数</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>mask <span class="token operator">=</span> <span class="token punctuation">(</span>b <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>b <span class="token operator">%</span> <span class="token number">7</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>mask<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>多维数组的组合与拆分</strong></p><p>垂直方向的操作：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在垂直方向a与b摞起来</span>np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把c数组在垂直方向拆成2个</span>np<span class="token punctuation">.</span>vsplit<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>水平方向的操作：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在水平方向a与b并起来</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把c数组在水平方向拆成2个</span>np<span class="token punctuation">.</span>hsplit<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>深度方向的操作：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在深度方向a与b并起来</span>np<span class="token punctuation">.</span>dstack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把c数组在深度方向拆成2个</span>np<span class="token punctuation">.</span>dsplit<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>多维数组组合与拆分的通用方法：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 实现a与b数组的组合操作</span><span class="token comment" spellcheck="true"># axis：轴向</span><span class="token comment" spellcheck="true"># 如果待组合数组都是二维数组</span><span class="token comment" spellcheck="true"># axis：0 垂直方向组合</span><span class="token comment" spellcheck="true"># axis：1 水平方向组合</span><span class="token comment" spellcheck="true"># 如果待组合数组都是三维数组</span><span class="token comment" spellcheck="true"># axis：0 垂直方向组合</span><span class="token comment" spellcheck="true"># axis：1 水平方向组合</span><span class="token comment" spellcheck="true"># axis：2 深度方向组合</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把c数组拆成2分  axis为轴向</span>np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>长度不等的数组的组合：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 长度不等的数组的组合</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把b补成5个元素, 头部补0个，尾部补1个，</span><span class="token comment" spellcheck="true"># 新增元素的默认值为-1</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>pad<span class="token punctuation">(</span>    b<span class="token punctuation">,</span> pad_width<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'constant'</span><span class="token punctuation">,</span>    constant_values<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单的一维数组的组合方案</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 把a与b两个一维数组摞在一起成两行</span>np<span class="token punctuation">.</span>row_stack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把a与b两个一维数组组合在一起成两列</span>np<span class="token punctuation">.</span>column_stack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>ndarray对象的其他常用属性</p><ol><li>ndim        维数（n维数组的n）</li><li>itemsize         元素所占用字节数</li><li>nbytes            数组所占用的总字节数</li><li>real                 复数的实部</li><li>imag               复数的虚部</li><li>T                      二维数组的转置数组</li><li>flat                  多维数组的扁平迭代器</li></ol><h2 id="图片资料"><a href="#图片资料" class="headerlink" title="图片资料"></a>图片资料</h2><p><img src="D:\笔记\数据分析\1809\images\matplotlib_cmap.png" alt=""></p><p><img src="D:\笔记\数据分析\1809\images\matplotlib_colors.png" alt=""></p><p><img src="D:\笔记\数据分析\1809\images\matplotlib_markers.png" alt=""></p><p><img src="D:\笔记\数据分析\1809\images\LaTeX_eg.gif" alt=""></p><p><img src="D:\笔记\数据分析\1809\images\laTex_.png" alt=""></p><h1 id="数据分析DAY02"><a href="#数据分析DAY02" class="headerlink" title="数据分析DAY02"></a>数据分析DAY02</h1><h2 id="matplotlib概述"><a href="#matplotlib概述" class="headerlink" title="matplotlib概述"></a>matplotlib概述</h2><p>matplotlib是python的一个绘图库。使用它可以很方便的绘制出版质量级别的图形。</p><h3 id="matplotlib的基本功能"><a href="#matplotlib的基本功能" class="headerlink" title="matplotlib的基本功能"></a>matplotlib的基本功能</h3><ol><li>基本绘图<ol><li>设置线型、线宽、颜色</li><li>设置坐标轴范围及刻度</li><li>设置坐标轴属性</li><li>图例</li><li>绘制特殊点</li><li>备注</li></ol></li><li>高级图形绘制<ol><li>绘制子图</li><li>刻度定位器、刻度网格线</li><li>半对数坐标</li><li>散点图</li><li>填充图</li><li>条形图、饼状图</li><li>等高线图</li><li>热成像图</li><li>极坐标系</li><li>三维曲面</li><li>简单动画</li></ol></li></ol><h2 id="matplotlib基本功能详解"><a href="#matplotlib基本功能详解" class="headerlink" title="matplotlib基本功能详解"></a>matplotlib基本功能详解</h2><h3 id="基本绘图"><a href="#基本绘图" class="headerlink" title="基本绘图"></a>基本绘图</h3><h4 id="绘图核心API"><a href="#绘图核心API" class="headerlink" title="绘图核心API"></a>绘图核心API</h4><p>绘制一条线：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token comment" spellcheck="true"># xarray: x坐标值数组</span><span class="token comment" spellcheck="true"># yarray: y坐标值数组</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>xarray<span class="token punctuation">,</span> yarray<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示图像</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>绘制水平线与垂直线：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token comment" spellcheck="true"># 绘制垂直线 给出x坐标值，给出y的范围即可</span>mp<span class="token punctuation">.</span>vlines<span class="token punctuation">(</span>val<span class="token punctuation">,</span> ymin<span class="token punctuation">,</span> ymax<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制水平线 给出y坐标值，给出x的范围即可</span>mp<span class="token punctuation">.</span>hlines<span class="token punctuation">(</span>val<span class="token punctuation">,</span> xmin<span class="token punctuation">,</span> xmax<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：绘制一条正弦曲线</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 从-π ~ π拆1000个点</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>sinx <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制[-π, π]的1/2*cos(x)曲线</span>cosx <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> sinx<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> cosx<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="线型、线宽、颜色"><a href="#线型、线宽、颜色" class="headerlink" title="线型、线宽、颜色"></a>线型、线宽、颜色</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># linestyle: 线型  "-"  "--"  ":" </span><span class="token comment" spellcheck="true"># linewidth: 线宽</span><span class="token comment" spellcheck="true"># color: 颜色  </span><span class="token comment" spellcheck="true">#    常见颜色的英文单词  red  blue  green...</span><span class="token comment" spellcheck="true">#    常见英文单词的首字母  r   b ..</span><span class="token comment" spellcheck="true">#    #abcdab </span><span class="token comment" spellcheck="true">#    (1, 1, 1)  或  (0.8, 0.6, 1, 0.5)</span><span class="token comment" spellcheck="true"># alpha: 透明度</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置坐标刻度"><a href="#设置坐标刻度" class="headerlink" title="设置坐标刻度"></a>设置坐标刻度</h4><p>把横坐标的刻度显示为 -π,  -π/2, 0,  π/2,  π</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># x_val_list: x轴刻度值列表</span><span class="token comment" spellcheck="true"># x_text_list: x轴相应值的刻度文本列表</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>x_val_list<span class="token punctuation">,</span> x_text_list<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># y_val_list: y轴刻度值列表</span><span class="token comment" spellcheck="true"># y_text_list: y轴相应值的刻度文本列表</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span>y_val_list<span class="token punctuation">,</span> y_text_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>matplotlib支持的latex排版语法</strong></p><pre><code>r&#39;$a^2 + b^2 = c^2$&#39;  r&#39;$[a_1 + a_2 + ... + a_n]$&#39;  r&#39;$\frac{\pi}{2}$&#39;</code></pre><p>$$<br>a^2 + b^2 = c^2 \quad \quad<br>[a_1 + a_2 + … + a_n] \quad\quad<br>\frac{\pi}{2}<br>$$</p><h4 id="设置坐标轴"><a href="#设置坐标轴" class="headerlink" title="设置坐标轴"></a>设置坐标轴</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取当前坐标轴  'left' 'right' 'top' 'bottom'</span>ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取其中某一个坐标轴</span>ax_left <span class="token operator">=</span> ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'left'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 设置坐标轴的位置</span><span class="token comment" spellcheck="true"># type: 移动坐标轴的参照类型 一般为'data' （以数据坐标轴作参照）</span><span class="token comment" spellcheck="true"># val: 参照值</span>ax_left<span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置坐标轴的颜色</span><span class="token comment" spellcheck="true"># color: 颜色值   若为'none',则隐藏当前坐标轴</span>ax_left<span class="token punctuation">.</span>set_color<span class="token punctuation">(</span>color<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h4><p>显示两条曲线的图例。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在plot绘制曲线时，给出label描述当前曲线的标签。</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  label<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">'best'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="特殊点"><a href="#特殊点" class="headerlink" title="特殊点"></a>特殊点</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># xarray, yarray 散点的坐标</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>xarray<span class="token punctuation">,</span> yarray<span class="token punctuation">,</span>           marker<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 点型</span>          s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 大小</span>          edgecolor<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 边缘色</span>          facecolor<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 填充色</span>          zorder<span class="token operator">=</span><span class="token number">3</span>        <span class="token comment" spellcheck="true"># 绘制图层编号（越大越靠顶层）</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h4><p>为特殊点添加备注。</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    r<span class="token string">'$....$'</span><span class="token punctuation">,</span>                     <span class="token comment" spellcheck="true"># 备注文本</span>    xycoords<span class="token operator">=</span><span class="token string">'data'</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 定位目标点使用的参照坐标系</span>    xy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true"># 目标点的坐标</span>    textcoords<span class="token operator">=</span><span class="token string">'offset points'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 定位文本位置使用的坐标系</span>    xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 备注文本的位置坐标</span>    fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true"># 字体大小</span>    arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 箭头的样式</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>    arrowstyle<span class="token operator">=</span><span class="token string">'->'</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 箭头样式</span>    connectionstyle<span class="token operator">=</span><span class="token string">'angle3'</span>    <span class="token comment" spellcheck="true"># 箭头连接线的样式</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设置坐标轴的范围"><a href="#设置坐标轴的范围" class="headerlink" title="设置坐标轴的范围"></a>设置坐标轴的范围</h4><p>通过设置坐标轴的范围区间，可以显示图像中的一部分内容。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 设置x轴的可视区域</span>mp<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span>x_min<span class="token punctuation">,</span> x_max<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置y轴的可视区域</span>mp<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span>y_min<span class="token punctuation">,</span> y_max<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="matplotlib图像窗口高级操作"><a href="#matplotlib图像窗口高级操作" class="headerlink" title="matplotlib图像窗口高级操作"></a>matplotlib图像窗口高级操作</h3><p>绘制两个窗口：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># title：窗口的标题</span><span class="token comment" spellcheck="true"># figsize： 窗口的大小</span><span class="token comment" spellcheck="true"># dpi：像素密度</span><span class="token comment" spellcheck="true"># facecolor：图表的背景色</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mp.ffigure方法可以创建一个新的窗口，但是如果新窗口的title已经被创建过了，那么就把该title的旧窗口置为当前窗口，以后的绘图操作，都将针对当前窗口生效。</p><p><strong>设置当前窗口的参数</strong></p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 设置图表标题</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># x轴的描述文本</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># y轴的描述文本</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 设置刻度参数</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 绘制网格线</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 紧凑布局</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="窗口子图"><a href="#窗口子图" class="headerlink" title="窗口子图"></a>窗口子图</h4><p><strong>矩阵式布局</strong></p><p>绘制矩阵式布局子图的API：</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'xx'</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># rows: 行数</span><span class="token comment" spellcheck="true"># columns: 列数</span><span class="token comment" spellcheck="true"># num: 子图编号 </span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>rows<span class="token punctuation">,</span> columns<span class="token punctuation">,</span> num<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 把3行3列的5号图设置为当前绘图区域</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 把3行3列的1号图设置为当前绘图区域</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：绘制九宫格</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpmp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Subplot'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 在窗前绘图区域写文字</span>    mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>            ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">)</span>    mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>网格式布局</strong></p><p>网格式布局支持单元格的合并。</p><p>绘制网格式子图相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>gridspec <span class="token keyword">as</span> mgmp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 创建GridSpec对象，（3行3列）</span>gs <span class="token operator">=</span> mg<span class="token punctuation">.</span>GridSpec<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把GridSpec中第一行的前两列合并为一个子图</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>gridspec <span class="token keyword">as</span> mgmp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Grid'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>gs <span class="token operator">=</span> mg<span class="token punctuation">.</span>GridSpec<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>        size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>        size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>        size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>        size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>gs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>        size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>自由布局</strong></p><p>自由布局相关API：</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置图表的位置，需要给出左下角点坐标与宽、高即可</span><span class="token comment" spellcheck="true"># 0.03: 左下角点的横坐标</span><span class="token comment" spellcheck="true"># 0.04: 左下角点的纵坐标</span><span class="token comment" spellcheck="true"># 0.94: 图表的宽度</span><span class="token comment" spellcheck="true"># 0.92: 图表的高度</span>mp<span class="token punctuation">.</span>axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.03</span><span class="token punctuation">,</span> <span class="token number">0.04</span><span class="token punctuation">,</span> <span class="token number">0.94</span><span class="token punctuation">,</span> <span class="token number">0.92</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpmp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'FlowLayou'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>        va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span>        va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="刻度定位器"><a href="#刻度定位器" class="headerlink" title="刻度定位器"></a>刻度定位器</h4><p>设置坐标轴刻度定位器相关的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取当前坐标轴</span>ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置横轴的主刻度定位器为多点定位器，主刻度间隔为1</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_major_locator<span class="token punctuation">(</span>mp<span class="token punctuation">.</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置横轴的次刻度定位器为NullLocator()（将不会显示次刻度）</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_minor_locator<span class="token punctuation">(</span> mp<span class="token punctuation">.</span>NullLocator<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mplocators <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mp.NullLocator()'</span><span class="token punctuation">,</span>            <span class="token string">'mp.MaxNLocator(nbins=6)'</span><span class="token punctuation">,</span>            <span class="token string">'mp.MultipleLocator(1)'</span><span class="token punctuation">,</span>            <span class="token string">'mp.AutoLocator()'</span><span class="token punctuation">,</span>            <span class="token string">'mp.FixedLocator(locs=[0,2.5,7.5,10])'</span><span class="token punctuation">]</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Locator'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>locators<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span>len<span class="token punctuation">(</span>locators<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'left'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>    mp<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    mp<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'bottom'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 设置x轴的主刻度定位器</span>    ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_major_locator<span class="token punctuation">(</span>eval<span class="token punctuation">(</span>locators<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 设置x轴的次刻度定位器</span>    ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_minor_locator<span class="token punctuation">(</span>mp<span class="token punctuation">.</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="刻度网格线"><a href="#刻度网格线" class="headerlink" title="刻度网格线"></a>刻度网格线</h4><pre class="line-numbers language-python"><code class="language-python">ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制刻度网格线</span>ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>    which<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 'major''minor' 绘制主刻度/次刻度网格线</span>    axis<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 'x'/'y'/'both' 绘制x轴/y轴的刻度网格线</span>    linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>     linestyle<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    color<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：[1,10,100,1000,100,10,1]</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpy <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'GridLine'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'GridLine'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置刻度定位器与刻度网格线</span>ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_major_locator<span class="token punctuation">(</span>    mp<span class="token punctuation">.</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_minor_locator<span class="token punctuation">(</span>    mp<span class="token punctuation">.</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_major_locator<span class="token punctuation">(</span>    mp<span class="token punctuation">.</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_minor_locator<span class="token punctuation">(</span>    mp<span class="token punctuation">.</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置x与y轴的主刻度网格线</span>ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>which<span class="token operator">=</span><span class="token string">'major'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token string">'both'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'orange'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置x与y轴的次刻度网格线</span>ax<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>which<span class="token operator">=</span><span class="token string">'minor'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token string">'both'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'orange'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token string">'o-'</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'plot'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="半对数坐标轴"><a href="#半对数坐标轴" class="headerlink" title="半对数坐标轴"></a>半对数坐标轴</h4><p>y轴将会以指数方式递增。</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># mp.plot()改为mp.semilogy()方法绘制曲线即可</span>mp<span class="token punctuation">.</span>semilogy<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h4><p>numpy.random模块提供了normal函数用于产生符合正态分布的随机数。</p><pre class="line-numbers language-python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">100</span><span class="token comment" spellcheck="true"># 产生n个符合正态分布规律的随机数</span><span class="token comment" spellcheck="true"># 172：期望</span><span class="token comment" spellcheck="true"># 20：标准差（标准差越小，越集中；标准差越大，越分散）</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>绘制散点图的相关API：</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> y<span class="token punctuation">,</span>    marker<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span>    edgecolor<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    facecolor<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    zorder<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpn <span class="token operator">=</span> <span class="token number">500</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Students'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Students List'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Height'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Weight'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>           color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>           zorder<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Stduent'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数据分析DAY03"><a href="#数据分析DAY03" class="headerlink" title="数据分析DAY03"></a>数据分析DAY03</h1><h4 id="散点图-1"><a href="#散点图-1" class="headerlink" title="散点图"></a>散点图</h4><p>散点图颜色映射的使用。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># d 为大于0的整数，这样计算越靠近中心的样本</span><span class="token comment" spellcheck="true"># d的值越小，越靠近外周的样本d的值越大</span>d <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">172</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">65</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>d<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">,</span>           zorder<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Stduent'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="填充图"><a href="#填充图" class="headerlink" title="填充图"></a>填充图</h4><p>以某种颜色自动填充两条曲线的闭合区域。</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> sin_x<span class="token punctuation">,</span> cos_x<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 通过这3个参数，给出两条曲线</span>    sin_x <span class="token operator">&lt;</span> cos_x<span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 填充条件，若为True时填充</span>    color<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>绘制两条曲线：sin(x)  cos(x/2)/2  [0, 8π]</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpn <span class="token operator">=</span> <span class="token number">1000</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> n<span class="token punctuation">)</span>sinx <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>cosx <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Fill'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Fill'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> sinx<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span>        label<span class="token operator">=</span>r<span class="token string">'$y=sin(x)$'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> cosx<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        label<span class="token operator">=</span>r<span class="token string">'$y=\frac{1}{2}cos(\frac{x}{2})$'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> sinx<span class="token punctuation">,</span> cosx<span class="token punctuation">,</span> sinx <span class="token operator">&lt;</span> cosx<span class="token punctuation">,</span>    color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> sinx<span class="token punctuation">,</span> cosx<span class="token punctuation">,</span> sinx <span class="token operator">></span> cosx<span class="token punctuation">,</span>    color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="条形图（柱状图）"><a href="#条形图（柱状图）" class="headerlink" title="条形图（柱状图）"></a>条形图（柱状图）</h4><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>    x<span class="token punctuation">,</span>             <span class="token comment" spellcheck="true"># 水平坐标数组</span>    y<span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 每个柱子绘制的高度</span>    width<span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 每个柱子的宽度</span>    color<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 颜色</span>    label<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 标签名（供legend使用）</span>    alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpapples <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">]</span>oranges <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">]</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Bar'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Bar'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Date'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Price'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>len<span class="token punctuation">(</span>apples<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制条形图</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">0.2</span><span class="token punctuation">,</span> apples<span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span>       label<span class="token operator">=</span><span class="token string">'Apple'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">,</span> oranges<span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>       label<span class="token operator">=</span><span class="token string">'Orange'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">[</span>    <span class="token string">'Jan'</span><span class="token punctuation">,</span> <span class="token string">'Feb'</span><span class="token punctuation">,</span> <span class="token string">'Mar'</span><span class="token punctuation">,</span> <span class="token string">'Apr'</span><span class="token punctuation">,</span> <span class="token string">'May'</span><span class="token punctuation">,</span>    <span class="token string">'Jun'</span><span class="token punctuation">,</span> <span class="token string">'Jul'</span><span class="token punctuation">,</span> <span class="token string">'Aug'</span><span class="token punctuation">,</span> <span class="token string">'Sep'</span><span class="token punctuation">,</span> <span class="token string">'Oct'</span><span class="token punctuation">,</span>    <span class="token string">'Nov'</span><span class="token punctuation">,</span> <span class="token string">'Dec'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="饼状图"><a href="#饼状图" class="headerlink" title="饼状图"></a>饼状图</h4><p>绘制饼状图相关API：</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>    values<span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 值列表</span>    spaces<span class="token punctuation">,</span>         <span class="token comment" spellcheck="true"># 扇形之间的间距列表</span>    labels<span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 标签列表</span>    colors<span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 颜色列表</span>    <span class="token string">'%d%%'</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 标签所占比例的格式化字符串</span>    shadow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 是否添加阴影</span>    startangle<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 起始角度</span>    radius<span class="token operator">=</span><span class="token number">1</span>        <span class="token comment" spellcheck="true"># 大饼半径</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token comment" spellcheck="true"># 整理数据</span>values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span>spaces <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">]</span>labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Python'</span><span class="token punctuation">,</span> <span class="token string">'Javascript'</span><span class="token punctuation">,</span>          <span class="token string">'C++'</span><span class="token punctuation">,</span> <span class="token string">'Java'</span><span class="token punctuation">,</span> <span class="token string">'PHP'</span><span class="token punctuation">]</span>colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> <span class="token string">'orangered'</span><span class="token punctuation">,</span>          <span class="token string">'limegreen'</span><span class="token punctuation">,</span> <span class="token string">'violet'</span><span class="token punctuation">,</span> <span class="token string">'gold'</span><span class="token punctuation">]</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Pie'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Pie'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">'equal'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 设置等轴比例绘制</span>mp<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>values<span class="token punctuation">,</span> spaces<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> colors<span class="token punctuation">,</span>       <span class="token string">'%d%%'</span><span class="token punctuation">,</span> shadow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> startangle<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">,</span>       radius<span class="token operator">=</span><span class="token number">1.2</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="等高线图"><a href="#等高线图" class="headerlink" title="等高线图"></a>等高线图</h4><p>整理等高线数据需要网格点坐标矩阵，也需要每个点的高度，所以等高线属于3D数学模型的范畴。</p><p>绘制等高线的相关API：</p><pre class="line-numbers language-python"><code class="language-python">cntr <span class="token operator">=</span> mp<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> y<span class="token punctuation">,</span>         <span class="token comment" spellcheck="true"># 网格点坐标</span>    z<span class="token punctuation">,</span>             <span class="token comment" spellcheck="true"># z提供每个坐标点的高度</span>    <span class="token number">8</span><span class="token punctuation">,</span>             <span class="token comment" spellcheck="true"># 把整体的高度分8份</span>    colors<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 每条等高线的颜色</span>    linewidths<span class="token operator">=</span><span class="token number">0.5</span>    <span class="token comment" spellcheck="true"># 每条等高线的宽度</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为等高线添加标签</span>mp<span class="token punctuation">.</span>clabel<span class="token punctuation">(</span>cntr<span class="token punctuation">,</span> inline_spacing<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">'%.1f'</span><span class="token punctuation">,</span>           fontsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为等高线每一部分设置颜色</span>mp<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpn <span class="token operator">=</span> <span class="token number">1000</span><span class="token comment" spellcheck="true"># 获取网格点坐标矩阵数组</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>                   np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 通过x与y计算每个坐标点的高度（编的）</span>z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> x <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> x<span class="token operator">**</span><span class="token number">5</span> <span class="token operator">+</span> y<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> \    np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制等高线</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Contour'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Contour'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>cntr <span class="token operator">=</span> mp<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> colors<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span>                  linewidths<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为等高线添加标签</span>mp<span class="token punctuation">.</span>clabel<span class="token punctuation">(</span>cntr<span class="token punctuation">,</span> inline_spacing<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>          fmt<span class="token operator">=</span><span class="token string">'%.1f'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为等高线每一部分设置颜色</span>mp<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="热成像图"><a href="#热成像图" class="headerlink" title="热成像图"></a>热成像图</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 把矩阵z图形化，使用cmap的颜色表示矩阵中每个元素的热度值</span><span class="token comment" spellcheck="true"># origin：y轴方向</span><span class="token comment" spellcheck="true">#     'lower'  y轴的0在下方</span><span class="token comment" spellcheck="true">#     'upper'  y轴的0在上方</span>mp<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>z<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">,</span> origin<span class="token operator">=</span><span class="token string">'lower'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpn <span class="token operator">=</span> <span class="token number">1000</span><span class="token comment" spellcheck="true"># 获取网格点坐标矩阵数组</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>                   np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 通过x与y计算每个坐标点的高度（编的）</span>z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> x <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> x<span class="token operator">**</span><span class="token number">5</span> <span class="token operator">+</span> y<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> \    np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Hot'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Hot'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制热成像图</span>mp<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>z<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">,</span> origin<span class="token operator">=</span><span class="token string">'lower'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3D图像的绘制"><a href="#3D图像的绘制" class="headerlink" title="3D图像的绘制"></a>3D图像的绘制</h4><p>使用matplotlib绘制3D图像，需要先获取3D坐标轴，调用ax3d对象的方法绘制3D图形。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> axes3dax3d <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span>projection<span class="token operator">=</span><span class="token string">'3d'</span><span class="token punctuation">)</span>ax3d<span class="token punctuation">.</span>plot_wireframe<span class="token punctuation">(</span><span class="token punctuation">)</span>ax3d<span class="token punctuation">.</span>plot_surface<span class="token punctuation">(</span><span class="token punctuation">)</span>ax3d<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3D线框图</strong></p><pre class="line-numbers language-python"><code class="language-python">ax3d<span class="token punctuation">.</span>plot_wireframe<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>         <span class="token comment" spellcheck="true"># 网格点坐标矩阵，和每个点的z轴值</span>    rstride<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 行跨距</span>    cstride<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 列跨距</span>    linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 线宽</span>    color<span class="token operator">=</span><span class="token string">''</span>        <span class="token comment" spellcheck="true"># 颜色</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> axes3dn <span class="token operator">=</span> <span class="token number">1000</span><span class="token comment" spellcheck="true"># 获取网格点坐标矩阵数组</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>                   np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 通过x与y计算每个坐标点的高度（编的）</span>z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> x <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> x<span class="token operator">**</span><span class="token number">5</span> <span class="token operator">+</span> y<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> \    np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'WireFrame'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span>projection<span class="token operator">=</span><span class="token string">'3d'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_zlabel<span class="token punctuation">(</span><span class="token string">'z'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot_wireframe<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> rstride<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> cstride<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>    color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3D曲面图</strong></p><pre class="line-numbers language-python"><code class="language-python">ax3d<span class="token punctuation">.</span>plot_surface<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>     rstride<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> cstride<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3D散点图</strong></p><pre class="line-numbers language-python"><code class="language-python">ax3d<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 样本点的(x,y,z)坐标数组</span>    marker<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 点型</span>    s<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 点的大小</span>    zorder<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    color<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    edgecolor<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    facecolor<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>    c<span class="token operator">=</span>d<span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 颜色值数组</span>    cmap<span class="token operator">=</span><span class="token string">''</span>        <span class="token comment" spellcheck="true"># 所使用的颜色映射</span><span class="token punctuation">)</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> axes3dn <span class="token operator">=</span> <span class="token number">500</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>z <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>d <span class="token operator">=</span> x<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> y<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> z<span class="token operator">**</span><span class="token number">2</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'3D Scatter'</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span>projection<span class="token operator">=</span><span class="token string">'3d'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>d<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="极坐标系"><a href="#极坐标系" class="headerlink" title="极坐标系"></a>极坐标系</h4><p>某些情况下极坐标系适合显示与角度有关的图像，例如雷达。它可以处理极径&rho;(rho)与极角&theta;(theta)之间的线性关系。</p><pre class="line-numbers language-python"><code class="language-python">mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span>projecction<span class="token operator">=</span><span class="token string">'polar'</span><span class="token punctuation">)</span>r <span class="token operator">=</span> <span class="token number">0.8</span><span class="token operator">*</span>t<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpt <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>r <span class="token operator">=</span> <span class="token number">0.8</span> <span class="token operator">*</span> tx <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>y <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> x<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Polar'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span>projection<span class="token operator">=</span><span class="token string">'polar'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span> r<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="简单动画"><a href="#简单动画" class="headerlink" title="简单动画"></a>简单动画</h4><p>动画即是在一段时间内快速连续重新绘制图像的过程。</p><p>matplotlib提供了方法可以实现简单动画，定义一个update函数用于即时更新图像。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> ma<span class="token comment" spellcheck="true"># update中编写更新图像的代码，每隔一段时间将会自动调用</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token comment" spellcheck="true"># 每隔30毫秒，执行一次update函数，针对当前窗体绘制图像</span>anim <span class="token operator">=</span> ma<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>mp<span class="token punctuation">.</span>gcf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> update<span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> man <span class="token operator">=</span> <span class="token number">100</span><span class="token comment" spellcheck="true"># 初始化100个球，每个属性值都是0.0</span>balls <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>n<span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token punctuation">[</span>                <span class="token punctuation">(</span><span class="token string">'position'</span><span class="token punctuation">,</span> float<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span><span class="token string">'size'</span><span class="token punctuation">,</span> float<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span><span class="token string">'growth'</span><span class="token punctuation">,</span> float<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> float<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 初始化所有球的属性</span><span class="token comment" spellcheck="true"># 为每个球的position属性赋值</span><span class="token comment" spellcheck="true"># 获取n行2列的二维数组，每个元素从0到1平均分布</span>balls<span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">]</span> <span class="token operator">=</span>    \    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>balls<span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span> <span class="token operator">=</span> \    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>balls<span class="token punctuation">[</span><span class="token string">'growth'</span><span class="token punctuation">]</span> <span class="token operator">=</span> \    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>balls<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span> <span class="token operator">=</span> \    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Animation'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把100个球都先画出来</span>sc <span class="token operator">=</span> mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>balls<span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                balls<span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                balls<span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                color<span class="token operator">=</span>balls<span class="token punctuation">[</span><span class="token string">'color'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 让每个球都不断增大</span>    balls<span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span> <span class="token operator">+=</span> balls<span class="token punctuation">[</span><span class="token string">'growth'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 每次让一个气泡破裂， 随机生成一个新的</span>    boom_ind <span class="token operator">=</span> number <span class="token operator">%</span> n    balls<span class="token punctuation">[</span>boom_ind<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span> <span class="token operator">=</span> \        np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    balls<span class="token punctuation">[</span>boom_ind<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">]</span> <span class="token operator">=</span> \        np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 重新设置属性</span>    sc<span class="token punctuation">.</span>set_sizes<span class="token punctuation">(</span>balls<span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    sc<span class="token punctuation">.</span>set_offsets<span class="token punctuation">(</span>balls<span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>anim <span class="token operator">=</span> ma<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>    mp<span class="token punctuation">.</span>gcf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> update<span class="token punctuation">,</span>  interval<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用生成器函数提供数据，实现动画绘制</p><p>很多情况下，绘制动画的参数是动态获取的，matplotlib支持定义生成生成器函数，用于生成数据，然后自动把数据交给update函数更新图像：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span>·<span class="token keyword">def</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">yield</span> data<span class="token comment" spellcheck="true"># 每10毫秒，调用生成器，把生成器yield出的数据交给update函数执行</span>anim <span class="token operator">=</span> ma<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>mp<span class="token punctuation">.</span>gcf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> update<span class="token punctuation">,</span> generator<span class="token punctuation">,</span>                           interval<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>animation <span class="token keyword">as</span> mamp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">"Signal"</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Signal"</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>pl <span class="token operator">=</span> mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span>             label<span class="token operator">=</span><span class="token string">'Signal'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">,</span> v <span class="token operator">=</span> data    x<span class="token punctuation">,</span> y <span class="token operator">=</span> pl<span class="token punctuation">.</span>get_data<span class="token punctuation">(</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">,</span> t<span class="token punctuation">)</span>    y <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">,</span> v<span class="token punctuation">)</span>    pl<span class="token punctuation">.</span>set_data<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 动态的移动可视区域</span>    <span class="token keyword">if</span> x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>        mp<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> x    y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">*</span> x<span class="token punctuation">)</span> <span class="token operator">*</span> \        np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">0.2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">yield</span> x<span class="token punctuation">,</span> y    x <span class="token operator">+=</span> <span class="token number">0.05</span><span class="token comment" spellcheck="true"># 使用动画向plot绘制的曲线中添加x，y坐标</span>anim <span class="token operator">=</span> ma<span class="token punctuation">.</span>FuncAnimation<span class="token punctuation">(</span>    mp<span class="token punctuation">.</span>gcf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> update<span class="token punctuation">,</span> generator<span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="案例应用"><a href="#案例应用" class="headerlink" title="案例应用"></a>案例应用</h2><h3 id="加载文件"><a href="#加载文件" class="headerlink" title="加载文件"></a>加载文件</h3><p>numpy提供了加载逻辑上可以被解释为二维数组的文本文件：</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>    <span class="token string">'../data/aapl.csv'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 文本路径</span>    delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 列之间的分隔符</span>    usecols<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 读取哪些列</span>    unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true"># 是否拆包 False将会返回二维数组</span>    dtype<span class="token operator">=</span><span class="token string">"U10, U10, f8"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 元素的类型</span>    converters<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> func<span class="token punctuation">}</span>    <span class="token comment" spellcheck="true"># 转换器函数字典</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：绘制收盘价折线图</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""loadtxt.py 加载文件"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> datetime <span class="token keyword">as</span> dt<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>dates <span class="token keyword">as</span> md<span class="token keyword">def</span> <span class="token function">dmy2ymd</span><span class="token punctuation">(</span>dmy<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 28-10-2011  -> 2011-10-28</span>    <span class="token comment" spellcheck="true"># 把字符串转成日期对象，在按照需要的</span>    <span class="token comment" spellcheck="true"># 格式把日期对象转成字符串</span>    dmy <span class="token operator">=</span> str<span class="token punctuation">(</span>dmy<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    time <span class="token operator">=</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>        dmy<span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token keyword">return</span> tdates<span class="token punctuation">,</span> opening_prices<span class="token punctuation">,</span> highest_prices<span class="token punctuation">,</span> \    lowest_prices<span class="token punctuation">,</span> closing_prices <span class="token operator">=</span> \    np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../da_data/aapl.csv'</span><span class="token punctuation">,</span>               delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span>               usecols<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>               unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>               dtype<span class="token operator">=</span><span class="token string">'M8[D], f8, f8, f8, f8'</span><span class="token punctuation">,</span>               converters<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span> dmy2ymd<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把收盘价绘制为折线图</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'APPL'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'APPL'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Dates'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Prices'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为了x轴显示日期，设置刻度定位器</span>ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_major_locator<span class="token punctuation">(</span>    md<span class="token punctuation">.</span>WeekdayLocator<span class="token punctuation">(</span>byweekday<span class="token operator">=</span>md<span class="token punctuation">.</span>MO<span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_major_formatter<span class="token punctuation">(</span>    md<span class="token punctuation">.</span>DateFormatter<span class="token punctuation">(</span><span class="token string">'%d %b %Y'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_minor_locator<span class="token punctuation">(</span>md<span class="token punctuation">.</span>DayLocator<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 修改dates的数据类型 从M8[D] -></span>dates <span class="token operator">=</span> dates<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>md<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> closing_prices<span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Closing Prices'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>gcf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>autofmt_xdate<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数据分析DAY04"><a href="#数据分析DAY04" class="headerlink" title="数据分析DAY04"></a>数据分析DAY04</h1><h3 id="加载文件-1"><a href="#加载文件-1" class="headerlink" title="加载文件"></a>加载文件</h3><p>案例：绘制AAPL的K线图.</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 绘制每一天的蜡烛图：</span>rise <span class="token operator">=</span> closing_prices <span class="token operator">>=</span> opening_prices<span class="token comment" spellcheck="true"># 整理所有的填充色</span>color <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'white'</span> <span class="token keyword">if</span> x <span class="token keyword">else</span> <span class="token string">'limegreen'</span><span class="token punctuation">)</span>     <span class="token keyword">for</span> x <span class="token keyword">in</span> rise<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 整理所有的边缘色</span>edgecolor <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'red'</span> <span class="token keyword">if</span> x <span class="token keyword">else</span> <span class="token string">'limegreen'</span><span class="token punctuation">)</span>     <span class="token keyword">for</span> x <span class="token keyword">in</span> rise<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制影线</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> highest_prices <span class="token operator">-</span> lowest_prices<span class="token punctuation">,</span>       <span class="token number">0.1</span><span class="token punctuation">,</span> lowest_prices<span class="token punctuation">,</span> color<span class="token operator">=</span>edgecolor<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制实体</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> closing_prices <span class="token operator">-</span> opening_prices<span class="token punctuation">,</span>       <span class="token number">0.8</span><span class="token punctuation">,</span> opening_prices<span class="token punctuation">,</span> color<span class="token operator">=</span>color<span class="token punctuation">,</span>       edgecolor<span class="token operator">=</span>edgecolor<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="算数平均数"><a href="#算数平均数" class="headerlink" title="算数平均数"></a>算数平均数</h3><p>算数平均数表示对真值的无偏估计。</p><pre><code>A = [a1, a2, a3, ... an]mean = (a1 + a2 + a3 + ... + an) / n</code></pre><p>numpy提供了方法求一组数据的均值：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1.</span>m <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 2.</span>m <span class="token operator">=</span> array<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 绘制收盘价的均值水平线</span>mean <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>closing_prices<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>hlines<span class="token punctuation">(</span>mean<span class="token punctuation">,</span> dates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dates<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>          label<span class="token operator">=</span><span class="token string">'average(closing_prices)'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="加权平均值"><a href="#加权平均值" class="headerlink" title="加权平均值"></a>加权平均值</h3><pre><code>S = [s1, s2, s3, .. sn]W = [w1, w2, w3, .. wn]# 加权均值：aw = (s1w1 + s2w2 + ... sn*wn)/(w1+w2+...wn)</code></pre><p>相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># a: 原始样本数组</span><span class="token comment" spellcheck="true"># b: 与原始样本数组相对应的权重数组</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>a<span class="token punctuation">,</span> weights<span class="token operator">=</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>VWAP - 交易量加权平均价格（成交量体现了市场对于当前交易价格的认可度， 成交量加权平均价格将会更接近这只股票的价值）</p><p>案例：</p><pre class="line-numbers language-pythoon"><code class="language-pythoon"># VWAP 交易量加权平均价格vwap = np.average(closing_prices,                  weights=volumns)mp.hlines(vwap, dates[0], dates[-1],          color='limegreen', linewidth=2,          label='VWAP')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>TWAP-时间加权平均价格</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># TWAP 时间加权平均价格</span>times <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span>times <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>twap <span class="token operator">=</span> np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>closing_prices<span class="token punctuation">,</span>weights<span class="token operator">=</span>times<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>hlines<span class="token punctuation">(</span>twap<span class="token punctuation">,</span> dates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dates<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          color<span class="token operator">=</span><span class="token string">'gold'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>          label<span class="token operator">=</span><span class="token string">'TWAP'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最值"><a href="#最值" class="headerlink" title="最值"></a>最值</h3><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 返回一组数据的最大值</span>np<span class="token punctuation">.</span>min<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 返回一组数据的最小值</span>np<span class="token punctuation">.</span>ptp<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 返回一组数据的极差 (max-min)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 返回一组数据最大值的下标</span>np<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span>a<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 返回一组数据最小值的下标</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 求最值</span>max_highest <span class="token operator">=</span> np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>highest_prices<span class="token punctuation">)</span>min_lowest <span class="token operator">=</span> np<span class="token punctuation">.</span>min<span class="token punctuation">(</span>lowest_prices<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>max_highest <span class="token operator">-</span> min_lowest<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 求最高点、最低点的日期</span><span class="token keyword">print</span><span class="token punctuation">(</span>dates<span class="token punctuation">[</span>np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>highest_prices<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dates<span class="token punctuation">[</span>np<span class="token punctuation">.</span>argmin<span class="token punctuation">(</span>lowest_prices<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 将两个同维数组中对应位置的元素进行比较，把最大的保留。返回新数组</span>np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 将两个同维数组中对应位置的元素进行比较，把最小的保留。返回新数组</span>np<span class="token punctuation">.</span>minimum<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>minimum<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="中位数"><a href="#中位数" class="headerlink" title="中位数"></a>中位数</h3><p>将多个样本按照大小排序，取中间位置的元素。</p><p>如果样本个数为奇数，则为中间的数字。如果样本个数为偶数，则求两个中间数字的均值即可。</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span>排序过的数组<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>median <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>size<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>a<span class="token punctuation">.</span>size<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token comment" spellcheck="true"># 对数组排序</span>sc <span class="token operator">=</span> np<span class="token punctuation">.</span>msort<span class="token punctuation">(</span>closing_prices<span class="token punctuation">)</span>m2 <span class="token operator">=</span> <span class="token punctuation">(</span>sc<span class="token punctuation">[</span>int<span class="token punctuation">(</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span>      sc<span class="token punctuation">[</span>int<span class="token punctuation">(</span>sc<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span>median<span class="token punctuation">,</span> m2<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 求a数组的中位数</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标准差"><a href="#标准差" class="headerlink" title="标准差"></a>标准差</h3><p>一组数据的标准差可以衡量这组数据的离散程度。标准差越大代表这组样本越散。反之，则代表这组样本越集中。</p><p>样本：S = [s1, s2, s3 …,  sn]</p><p>均值：m = (s1 + s2 + … + sn) / n</p><p>离差：D = [s1-m, s2-m, s3-m …. , sn-m]</p><p>离差方： D<sup>2</sup>  -&gt; [q1, q2, q3 …. qn]    每个元素求平方</p><p>总体方差：(q1+q2+…qn) / <strong>n</strong>  离差方数组的均值</p><p>总体标准差：np.sqrt(总体方差)   </p><p>样本方差： (q1+q2+…qn) / <strong>n-1</strong>  离差方数组的均值</p><p>样本标准差：np.sqrt(样本方差)   </p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 求array数组的总体标准差</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 求array数组的样本标准差，分母的修正值：n-1</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>array<span class="token punctuation">,</span> ddof<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npclosing_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>    <span class="token string">'../da_data/aapl.csv'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span>    usecols<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 求这组数据的标准差</span>m <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>closing_prices<span class="token punctuation">)</span>s <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">(</span>closing_prices <span class="token operator">-</span> m<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span>std <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std<span class="token punctuation">)</span>std <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>closing_prices<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std<span class="token punctuation">)</span>std <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>closing_prices<span class="token punctuation">,</span> ddof<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="案例应用-1"><a href="#案例应用-1" class="headerlink" title="案例应用"></a>案例应用</h3><h4 id="案例：轴向统计"><a href="#案例：轴向统计" class="headerlink" title="案例：轴向统计"></a>案例：轴向统计</h4><p>统一每个周一、周二、.. 周五的收盘价的平均值，并放入一个数组。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> datetime <span class="token keyword">as</span> dt<span class="token keyword">def</span> <span class="token function">dmy2day</span><span class="token punctuation">(</span>dmy<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 日月年字符串转成星期</span>    dmy <span class="token operator">=</span> str<span class="token punctuation">(</span>dmy<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    date <span class="token operator">=</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>        dmy<span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>    wday <span class="token operator">=</span> date<span class="token punctuation">.</span>weekday<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> wdaywdays<span class="token punctuation">,</span> closing_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>    <span class="token string">'../da_data/aapl.csv'</span><span class="token punctuation">,</span>    delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> converters<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span> dmy2day<span class="token punctuation">}</span><span class="token punctuation">)</span>ave_closing_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">for</span> wday <span class="token keyword">in</span> range<span class="token punctuation">(</span>ave_closing_prices<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>    ave_closing_prices<span class="token punctuation">[</span>wday<span class="token punctuation">]</span> <span class="token operator">=</span> \        np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>closing_prices<span class="token punctuation">[</span>wdays <span class="token operator">==</span> wday<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ave_closing_prices<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：统一每个周一、周二、.. 周五的收盘价的平均值，最大值，最小值，并放入一个数组。</p><p>numpy提供了一个方法可以方便的实现<strong>二维数据的轴向汇总</strong>。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token comment" spellcheck="true"># 根据轴向的设定，把每一行（列）依次传递给func函数实现统计业务</span><span class="token comment" spellcheck="true"># func： 处理函数</span><span class="token comment" spellcheck="true"># axis： 轴向  0  1</span><span class="token comment" spellcheck="true"># array： 原二维数组</span>np<span class="token punctuation">.</span>apply_along_axis<span class="token punctuation">(</span>func<span class="token punctuation">,</span> axis<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo08_axis.py  轴向统计"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> datetime <span class="token keyword">as</span> dt<span class="token keyword">def</span> <span class="token function">dmy2day</span><span class="token punctuation">(</span>dmy<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 日月年字符串转成星期</span>    dmy <span class="token operator">=</span> str<span class="token punctuation">(</span>dmy<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    date <span class="token operator">=</span> dt<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>        dmy<span class="token punctuation">,</span> <span class="token string">'%d-%m-%Y'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token punctuation">)</span>    wday <span class="token operator">=</span> date<span class="token punctuation">.</span>weekday<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> wdaywdays<span class="token punctuation">,</span> closing_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>    <span class="token string">'../da_data/aapl.csv'</span><span class="token punctuation">,</span>    delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> usecols<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> converters<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span> dmy2day<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 第一个周一的下标， 最后一个周五的下标</span><span class="token comment" spellcheck="true"># np.where方法返回一个元组，数据存储在[0]中</span>first_mon <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>wdays <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>last_fri <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>wdays <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>wdays <span class="token operator">=</span> wdays<span class="token punctuation">[</span>first_mon<span class="token punctuation">:</span> last_fri <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>indices <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>first_mon<span class="token punctuation">,</span> last_fri <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 整理这些数据为一个二维数组</span>mon_inds <span class="token operator">=</span> indices<span class="token punctuation">[</span>wdays <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span>tue_inds <span class="token operator">=</span> indices<span class="token punctuation">[</span>wdays <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">]</span>wen_inds <span class="token operator">=</span> indices<span class="token punctuation">[</span>wdays <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">]</span>thu_inds <span class="token operator">=</span> indices<span class="token punctuation">[</span>wdays <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">]</span>fri_inds <span class="token operator">=</span> indices<span class="token punctuation">[</span>wdays <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 把不足6个元素的数组补齐</span>mon_inds <span class="token operator">=</span> np<span class="token punctuation">.</span>pad<span class="token punctuation">(</span>    mon_inds<span class="token punctuation">,</span> pad_width<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    mode<span class="token operator">=</span><span class="token string">'constant'</span><span class="token punctuation">,</span> constant_values<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把这些数据在垂直方向摞在一起，执行轴向汇总</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span>    <span class="token punctuation">(</span>mon_inds<span class="token punctuation">,</span> tue_inds<span class="token punctuation">,</span> wen_inds<span class="token punctuation">,</span>     thu_inds<span class="token punctuation">,</span> fri_inds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">:</span>    row <span class="token operator">=</span> row<span class="token punctuation">[</span>row <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> np<span class="token punctuation">.</span>max<span class="token punctuation">(</span>closing_prices<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \        np<span class="token punctuation">.</span>min<span class="token punctuation">(</span>closing_prices<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    \        np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>closing_prices<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span>r <span class="token operator">=</span> np<span class="token punctuation">.</span>apply_along_axis<span class="token punctuation">(</span>func<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="案例：移动平均线"><a href="#案例：移动平均线" class="headerlink" title="案例：移动平均线"></a>案例：移动平均线</h4><p>收盘价5日平均线：从第五天开始，每天计算最近5天的收盘价的平均值所构成的一条线。</p><p>移动均线的算法：</p><pre><code>(a + b + c + d + e) / 5     均线的第1个点(b + c + d + e + f) / 5     均线的第2个点....</code></pre><p>案例：绘制5日均线图</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 求5日均线</span>sma5 <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>closing_prices<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>sma5<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>    sma5<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> closing_prices<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sma5<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>        linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'SMA-5'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="卷积运算"><a href="#卷积运算" class="headerlink" title="卷积运算"></a>卷积运算</h4><p>a = [1, 2, 3, 4, 5]     原数组</p><p>b = [8, 7, 6]        卷积核数组</p><p>使用b数组作为卷积核对a数组执行卷积运算的过程如下：</p><pre><code>                44    65    86            - 有效卷积(valid)            23    44    65    86    59        - 同维卷积(same)        8    23    44    65    86    59    30    - 完全卷积(full)0    0    1    2    3    4    5    0    06    7    8    6    7    8        6    7    8            6    7    8                6    7    8                    6    7    8                        6    7    8</code></pre><p>卷积运算相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># a: 原数组</span><span class="token comment" spellcheck="true"># b: 卷积核数组</span><span class="token comment" spellcheck="true"># 卷积类型： </span><span class="token comment" spellcheck="true">#     'valid'    有效卷积</span><span class="token comment" spellcheck="true">#     'same'    同维卷积</span><span class="token comment" spellcheck="true">#     'full'    完全卷积</span>np<span class="token punctuation">.</span>convole<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> 卷积类型<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code>a b c d e f g h i j k l ....b = [1/5, 1/5, 1/5, 1/5, 1/5] </code></pre><p>案例： 使用卷积实现5日均线</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用卷积 实现5日均线</span>core <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">5</span>sma52 <span class="token operator">=</span> np<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>closing_prices<span class="token punctuation">,</span> core<span class="token punctuation">,</span>                    <span class="token string">'valid'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sma52<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span>        linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'SMA-52'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用卷积 实现10日均线</span>core <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span>sma510 <span class="token operator">=</span> np<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>closing_prices<span class="token punctuation">,</span> core<span class="token punctuation">,</span>                     <span class="token string">'valid'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sma510<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'limegreen'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>        linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'SMA-10'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>加权卷积</strong></p><p>5日均线中计算的平均值为算数平均值，但是每个样本应该有不同的权重。按照时间加权均值的算法，时间越晚权重越高。所以可以选出一组卷积核，使得在卷积运算中实现加权卷积。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 实现加权5日均线</span>weights <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>weights <span class="token operator">=</span> weights<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 处理卷积核数组，使得卷积核中元素之和为1</span>weights <span class="token operator">/=</span> weights<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>sma53 <span class="token operator">=</span> np<span class="token punctuation">.</span>convolve<span class="token punctuation">(</span>closing_prices<span class="token punctuation">,</span>                    weights<span class="token punctuation">,</span> <span class="token string">'valid'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sma53<span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>        linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'SMA-53'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="布林带"><a href="#布林带" class="headerlink" title="布林带"></a>布林带</h4><p>布林带由三条线组成：</p><p>中轨：移动均线</p><p>上轨：中轨 + 2*5日标准差</p><p>下轨：中轨 -  2*5日标准差</p><p>布林带收窄代表股价趋于稳定，布林带张开代表有较大的波动空间。</p><h1 id="数据分析DAY05"><a href="#数据分析DAY05" class="headerlink" title="数据分析DAY05"></a>数据分析DAY05</h1><h3 id="案例应用-2"><a href="#案例应用-2" class="headerlink" title="案例应用"></a>案例应用</h3><h4 id="布林带-1"><a href="#布林带-1" class="headerlink" title="布林带"></a>布林带</h4><p>布林带由三条线组成：</p><p>中轨：移动均线</p><p>上轨：中轨 + 2*5日标准差</p><p>下轨：中轨 -  2*5日标准差</p><p>布林带收窄代表股价趋于稳定，布林带张开代表有较大的波动空间。</p><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 绘制5日均线的布林带</span>stds <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>sma53<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>stds<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>    stds<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> closing_prices<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 计算上轨和下轨</span>lowers <span class="token operator">=</span> sma53 <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> stdsuppers <span class="token operator">=</span> sma53 <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> stdsmp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lowers<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'gold'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Lower Line'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> uppers<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'gold'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Upper Line'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="线性预测"><a href="#线性预测" class="headerlink" title="线性预测"></a>线性预测</h3><p>若想使用线性方程预测业务结果，则必须首先假设数据样本符合线性规律。这样预测的结果才会相对准确。</p><pre><code>假设这组数据符合线性规律：a    b    c    d    e    f    ?ax + by + cz = dbx + cy + dz = ecx + dy + ez = f...dx + ey + fz = ?</code></pre><p>基于矩阵运算解方程组：<br>$$<br>\left[<br>\begin{matrix}<br>a &amp; b &amp; c \<br>b &amp; c &amp; d \<br>c &amp; d &amp; e \<br>\end{matrix}<br>\right]<br>\times<br>\left[<br>\begin{matrix}<br>x \<br>y \<br>z \<br>\end{matrix}<br>\right]<br>=<br>\left[<br>\begin{matrix}<br>d \<br>e \<br>f \<br>\end{matrix}<br>\right]  \ \<br>\quad \quad a \quad \quad \quad \quad x \quad \quad \quad b<br>$$<br>numpy提供了方法可以求取上述矩阵运算中的x,y,z.</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># a、b矩阵参数同上图所示</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>lstsq<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：基于线性预测，预测下一天的收盘价。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 整理三元一次方程组， 实现线性预测</span>N <span class="token operator">=</span> <span class="token number">5</span>pred_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>    closing_prices<span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把每一个预测值都求出来</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>pred_prices<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 整理矩阵a与矩阵b，使用lstsq方法求出x</span>    a <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>        a<span class="token punctuation">[</span>j<span class="token punctuation">,</span> <span class="token punctuation">]</span> <span class="token operator">=</span> closing_prices<span class="token punctuation">[</span>i <span class="token operator">+</span> j<span class="token punctuation">:</span>i <span class="token operator">+</span> j <span class="token operator">+</span> N<span class="token punctuation">]</span>    b <span class="token operator">=</span> closing_prices<span class="token punctuation">[</span>i <span class="token operator">+</span> N<span class="token punctuation">:</span>i <span class="token operator">+</span> N <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span>    x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>lstsq<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># b与x执行点积运算</span>    pred_prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 画出预测股价曲线</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> N<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pred_prices<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'o-'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Predict Line'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pred_prices<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="线性拟合"><a href="#线性拟合" class="headerlink" title="线性拟合"></a>线性拟合</h3><p>线性拟合可以寻求与一组散点走向趋势规律相适应的线性表达式方程。</p><pre><code>[x1, y1][x2, y2][x3, y3]..[xn, yn]</code></pre><p>若这组点符合线性规律，那么就可以使用二元线性方程拟合这组数据。</p><pre><code>kx + b = ykx1 + b = y1kx2 + b = y2kx3 + b = y3...kxn + b = yn</code></pre><p>如何求k与b：<br>$$<br>\left[<br>\begin{matrix}<br>x1 &amp; 1 \<br>x2 &amp; 1 \<br>x3 &amp; 1 \<br>xn &amp; 1 \<br>\end{matrix}<br>\right]<br>\times<br>\left[<br>\begin{matrix}<br>k \<br>b \<br>\end{matrix}<br>\right]<br>=<br>\left[<br>\begin{matrix}<br>y1 \<br>y2 \<br>y3 \<br>yn \<br>\end{matrix}<br>\right]<br>$$<br>案例：利用线性拟合画出股价的趋势线。</p><p>股价的趋势线 = (最高价+最低价+收盘价) / 3</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 计算所有的趋势点</span>trend_points <span class="token operator">=</span> <span class="token punctuation">(</span>    highest_prices <span class="token operator">+</span> lowest_prices <span class="token operator">+</span>    closing_prices<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> trend_points<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'Trend Points'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 一组x坐标</span>days <span class="token operator">=</span> dates<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'M8[D]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>int<span class="token punctuation">)</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>column_stack<span class="token punctuation">(</span><span class="token punctuation">(</span>days<span class="token punctuation">,</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>days<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b <span class="token operator">=</span> trend_points<span class="token comment" spellcheck="true"># 通过a与b求x</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>lstsq<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 求该直线的所有x对应的函数值</span>y <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> days <span class="token operator">+</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> y<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'Trend Line'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制顶部压力线  底部支撑线</span>spreads <span class="token operator">=</span> highest_prices <span class="token operator">-</span> lowest_pricesresistance_points <span class="token operator">=</span> y <span class="token operator">+</span> spreadssupport_points <span class="token operator">=</span> y <span class="token operator">-</span> spreadsmp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> resistance_points<span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'Resistance Line'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> support_points<span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'limegreen'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'Support Line'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数组的裁剪、压缩、累乘"><a href="#数组的裁剪、压缩、累乘" class="headerlink" title="数组的裁剪、压缩、累乘"></a>数组的裁剪、压缩、累乘</h3><p><strong>数组的裁剪</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># clip方法将会把数组中所有小于下限的元素改为下限值。把所有大于上限</span><span class="token comment" spellcheck="true"># 的元素改为上限值。</span>ndarray<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>min<span class="token operator">=</span>下限<span class="token punctuation">,</span> max<span class="token operator">=</span>上限<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>数组的压缩</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 返回由调用数组中满足条件的元素组成的新数组</span>ndarray<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>条件<span class="token punctuation">)</span>a<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>a<span class="token operator">></span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>b <span class="token operator">=</span> a<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>min<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> max<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>a <span class="token operator">=</span> a<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token punctuation">)</span>c <span class="token operator">=</span> a<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>all<span class="token punctuation">(</span><span class="token punctuation">[</span>a <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">,</span> a <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="协方差、相关性系数"><a href="#协方差、相关性系数" class="headerlink" title="协方差、相关性系数"></a>协方差、相关性系数</h3><p>通过两组统计数据计算而得的协方差可以评估这两组统计数据的相似程度。</p><p><strong>样本：</strong></p><pre><code>A = [a1, a2, a3 ... an]B = [b1, b2, b3 ... bn]</code></pre><p><strong>平均值：</strong></p><pre><code>ave_A = (a1 + a2 + a3 + ... an) / nave_B = (b1 + b2 + b3 + ... bn) / n</code></pre><p><strong>离差：</strong></p><pre><code>dev_A = [a1, a2 .. an] - ave_Adev_B = [b1, b2 .. bn] - ave_B</code></pre><p><strong>协方差：</strong></p><pre><code>cov_ab = np.mean(dev_A * dev_B)</code></pre><p>协方差可以简单反映两组统计样本的相关性：值为正，则为正相关；值为负则为负相关。绝对值越大相关性越强。</p><p>案例：计算bhp与vale两只股票的协方差。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 计算两组样本的协方差</span><span class="token comment" spellcheck="true"># 两组样本的均值</span>ave_bhp <span class="token operator">=</span> bhp_closing_prices<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>    \    <span class="token operator">/</span> bhp_closing_prices<span class="token punctuation">.</span>sizeave_vale <span class="token operator">=</span> vale_closing_prices<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>    \    <span class="token operator">/</span> vale_closing_prices<span class="token punctuation">.</span>size<span class="token comment" spellcheck="true"># 两组样本的离差</span>dev_bhp <span class="token operator">=</span> bhp_closing_prices <span class="token operator">-</span> ave_bhpdev_vale <span class="token operator">=</span> vale_closing_prices <span class="token operator">-</span> ave_vale<span class="token comment" spellcheck="true"># 两组样本的协方差</span>cov_array <span class="token operator">=</span> dev_bhp <span class="token operator">*</span> dev_valecov <span class="token operator">=</span> cov_array<span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> cov_array<span class="token punctuation">.</span>size<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'COV:'</span><span class="token punctuation">,</span> cov<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>相关性系数</strong></p><p>协方差除以两组统计样本的标准差的乘积是一个[-1, 1]之间的数字。该结果成为两组统计样本的相关性系数。</p><p>通过相关性系数可以分析两组数据的相关程度：</p><pre><code>若相关系数越接近于1， 则表示两组样本正相关程度越强。若相关系数越接近于-1， 则表示两组样本负相关程度越强。若相关系数越接近于0， 则表示两组样本没啥关系。</code></pre><p>numpy提供了求相关性系数的API：</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>corrcoef<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该方法将会返回<strong>相关性矩阵</strong>:<br>$$<br>\left[ \begin{matrix}<br>a与a的相关性系数 &amp; a与b的相关性系数 \<br>b与a的相关性系数 &amp; b与b的相关性系数  \<br>\end{matrix}\right]<br>$$<br>该矩阵的算法：<br>$$<br>\left[ \begin{matrix}<br>\frac{a与a的协方差}{std(a) <em> std(a)} &amp;<br>\frac{a与b的协方差}{std(a) </em> std(b)} \<br>\frac{b与a的协方差}{std(b) <em> std(a)} &amp;<br>\frac{b与b的协方差}{std(b) </em> std(b)} \<br>\end{matrix}\right]<br>$$<br>求a与b的协方差矩阵：</p><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 返回的协方差矩阵即是相关性矩阵的分子矩阵</span><span class="token comment" spellcheck="true"># 输出两组数据的协方差矩阵</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>bhp_closing_prices<span class="token punctuation">,</span> vale_closing_prices<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多项式拟合"><a href="#多项式拟合" class="headerlink" title="多项式拟合"></a>多项式拟合</h3><p>多项式的一般形式：<br>$$<br>y = p_0x^n + p_1x^{n-1} + p_2x^{n-2} + … + p_n<br>$$<br>多项式拟合的目的是为了找到一组p<sub>0</sub>~p<sub>n</sub> , 使得拟合方程尽可能的域实际样本数据相符合（误差最小）。</p><p>在numpy中，一组p<sub>0</sub>~p<sub>n</sub>即可以表示一个多项式。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 根据一组离散样本，给出最高次幂，求出拟合多项式结果的系数数组。</span><span class="token comment" spellcheck="true"># P = [p0, p1 ... pn]</span>P <span class="token operator">=</span> np<span class="token punctuation">.</span>polyfit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> 最高次幂<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 给出自变量x，该方法将把x代入多项式，求出函数值。</span>Y <span class="token operator">=</span> np<span class="token punctuation">.</span>polyval<span class="token punctuation">(</span>P<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 求多项式函数的导函数  （Q = [q1, q2 ... qm]）</span>Q <span class="token operator">=</span> np<span class="token punctuation">.</span>polyder<span class="token punctuation">(</span>P<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 求多项式的根（y等于0是x的取值）</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>roots<span class="token punctuation">(</span>P<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：使用多项式函数拟合两只股票bhp、vale收盘价的差价函数。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 修改dates的数据类型 从M8[D] -></span>dates <span class="token operator">=</span> dates<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>md<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 求出两支股票的差价</span>diff_prices <span class="token operator">=</span> bhp_closing_prices <span class="token operator">-</span> vale_closing_pricesmp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> diff_prices<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'DIFF LINE'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 多项式拟合</span>days <span class="token operator">=</span> dates<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'M8[D]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>int<span class="token punctuation">)</span>P <span class="token operator">=</span> np<span class="token punctuation">.</span>polyfit<span class="token punctuation">(</span>days<span class="token punctuation">,</span> diff_prices<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>polyval<span class="token punctuation">(</span>P<span class="token punctuation">,</span> days<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>dates<span class="token punctuation">,</span> y<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'Polyfit Line'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 多项式求导，求导函数的根从而获取驻点坐标</span>Q <span class="token operator">=</span> np<span class="token punctuation">.</span>polyder<span class="token punctuation">(</span>P<span class="token punctuation">)</span>xs <span class="token operator">=</span> np<span class="token punctuation">.</span>roots<span class="token punctuation">(</span>Q<span class="token punctuation">)</span>         <span class="token comment" spellcheck="true"># 驻点的x坐标</span><span class="token keyword">print</span><span class="token punctuation">(</span>xs<span class="token punctuation">)</span>ys <span class="token operator">=</span> np<span class="token punctuation">.</span>polyval<span class="token punctuation">(</span>P<span class="token punctuation">,</span> xs<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 驻点的y坐标</span>xs_date <span class="token operator">=</span> np<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>xs<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>    <span class="token string">'M8[D]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>md<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>xs_date<span class="token punctuation">,</span> ys<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'limegreen'</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'D'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Points'</span><span class="token punctuation">,</span>           zorder<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>gcf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>autofmt_xdate<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数据分析DAY06"><a href="#数据分析DAY06" class="headerlink" title="数据分析DAY06"></a>数据分析DAY06</h1><h3 id="数据平滑"><a href="#数据平滑" class="headerlink" title="数据平滑"></a>数据平滑</h3><p>数据平滑处理通常包含有降噪、拟合等操作。降噪的功能在于去除额外的影响因素， 拟合的目的在于数据数学模型化，可以通过更多数学工具识别曲线的特征。</p><h3 id="符号数组"><a href="#符号数组" class="headerlink" title="符号数组"></a>符号数组</h3><p>np.sign()函数可以把样本数组编程对应的符号数组，正数变为1，负数变为-1，0还是0。</p><pre class="line-numbers language-python"><code class="language-python">array <span class="token operator">=</span> np<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>原数组<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>OBV能量潮</strong></p><p>成交量可以反映市场对某只股票的人气，成交量是一支股票上涨的能量。一支股票上涨往往需要较大的成交量，而下跌时则不然。</p><p>若相比上一天的收盘价上涨，则为正成交量；若相比上一天的收盘价下跌，则为负成交量。 正成交量为红色柱状图，负成交量为绿色柱状图。</p><p>案例：绘制OBV柱状图</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 绘制OBV能量潮</span><span class="token comment" spellcheck="true"># 从第二天开始，减去前一天的收盘价得到新数组</span>diff_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>closing_prices<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 对diff_prices符号化</span>sign_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>sign<span class="token punctuation">(</span>diff_prices<span class="token punctuation">)</span>obvs <span class="token operator">=</span> volumns<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">*</span> sign_prices<span class="token comment" spellcheck="true"># 正成交量为红色  负成交量为红色</span>dates <span class="token operator">=</span> dates<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>dates<span class="token punctuation">[</span>obvs <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> obvs<span class="token punctuation">[</span>obvs <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">,</span>       color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'OBV+'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>dates<span class="token punctuation">[</span>obvs <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span>obvs<span class="token punctuation">[</span>obvs <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">,</span>       color<span class="token operator">=</span><span class="token string">'green'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'OBV-'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据处理函数</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 针对原数组的每个元素做条件判断，取相应的值</span><span class="token comment" spellcheck="true"># 条件序列：[array&lt;60, array>=60]</span><span class="token comment" spellcheck="true"># 取值序列：[-1, 1]</span>ary <span class="token operator">=</span> np<span class="token punctuation">.</span>piecewise<span class="token punctuation">(</span>原数组，条件序列，取值序列<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python">sign_prices <span class="token operator">=</span> np<span class="token punctuation">.</span>piecewise<span class="token punctuation">(</span>    diff_prices<span class="token punctuation">,</span>    <span class="token punctuation">[</span>diff_prices <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">,</span> diff_prices <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span>     diff_prices <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="函数矢量化"><a href="#函数矢量化" class="headerlink" title="函数矢量化"></a>函数矢量化</h3><p>把一个只能处理标量的函数矢量化后，将可以直接处理数组参数。</p><p>numpy提供了vectorize函数，可以把处理标量的函数矢量化，返回一个新的函数（矢量函数），该矢量函数可以直接处理ndarray数组。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> math <span class="token keyword">as</span> m<span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> m<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>a<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> b<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>foo<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用vectorize方法把foo函数矢量化</span>vec_foo <span class="token operator">=</span> np<span class="token punctuation">.</span>vectorize<span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>vec_foo<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>numpy还提供了frompyfunc函数，也可以完成与vectorize相同的功能。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 调用frompyfunc函数把foo函数矢量化</span><span class="token comment" spellcheck="true"># 矢量化foo函数，接收2个参数，返回1个结果</span>fpf_foo <span class="token operator">=</span> np<span class="token punctuation">.</span>frompyfunc<span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fpf_foo<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="矩阵对象"><a href="#矩阵对象" class="headerlink" title="矩阵对象"></a>矩阵对象</h3><p>numpy中的matrix类型的对象即是矩阵对象。该类继承自numpy.ndarray所以任何针对多维数组的操作，对矩阵对象同样有效。作为子类，矩阵也结合了自身的特点，做了必要的扩充，比如：乘法计算、求逆等。</p><p><strong>矩阵对象的创建</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 创建矩阵对象</span><span class="token comment" spellcheck="true"># ary：任何可以被解释为矩阵的二维容器</span><span class="token comment" spellcheck="true"># copy：是否复制数据（默认为True）</span>numpy<span class="token punctuation">.</span>matrix<span class="token punctuation">(</span>ary<span class="token punctuation">,</span> copy<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 等价于 numpy.matrix(ary, copy=False)</span><span class="token comment" spellcheck="true"># 创建出的矩阵对象与原数组数据共享</span>numpy<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>任何可以被解释为矩阵的二维容器<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 矩阵字符串拼块规则：'1 2 3; 4 5 4; 6 4 3'</span>numpy<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>矩阵字符串拼块规则<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>矩阵的乘法(点积)</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">45</span><span class="token punctuation">)</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'1 2 3; 5 6 4; 3 4 5'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'1 2 3; 5 6 4; 3 4 5'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>矩阵的逆</strong></p><p>一个矩阵乘以该矩阵的逆矩阵得到的结果为一个单位矩阵(E)。一个单位矩阵对角线上的元素都是1，其他元素都为0。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#A矩阵的逆矩阵：</span>A<span class="token punctuation">.</span>Inp<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">45</span><span class="token punctuation">)</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">*</span> a<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：假设一帮人去旅游， 去程做的是大巴，小孩票价3元，大人3.2元。共花了118.4； 回来时坐火车，小孩票价3.5元，大人3.6元。共花了135.2. 求大人和小孩的人数。<br>$$<br>\left[<br>\begin{matrix}<br>3 &amp; 3.2 \<br>3.5 &amp; 3.6 \<br>\end{matrix}<br>\right]<br>\times<br>\left[<br>\begin{matrix}<br>x\<br>y \<br>\end{matrix}<br>\right]<br>=<br>\left[<br>\begin{matrix}<br>118.4 \<br>135.2 \<br>\end{matrix}<br>\right]<br>$$</p><pre class="line-numbers language-python"><code class="language-python">prices <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'3 3.2; 3.5 3.6'</span><span class="token punctuation">)</span>totals <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'118.4; 135.2'</span><span class="token punctuation">)</span>persons <span class="token operator">=</span> prices<span class="token punctuation">.</span>I <span class="token operator">*</span> totals<span class="token keyword">print</span><span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>斐波那契数列</strong></p><p>1    1    2    3    5    8    13    21    ….</p><pre><code>     1 1    1 1        1 1        1 1     1 0    1 0        1 0        1 0----------------------------------------------1 1     2 1    3 2        5 3        8 51 0     1 1    2 1        3 2        5 3</code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python">A <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'1 1; 1 0'</span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token number">35</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>A<span class="token operator">**</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="numpy通用函数"><a href="#numpy通用函数" class="headerlink" title="numpy通用函数"></a>numpy通用函数</h3><h4 id="加法通用函数"><a href="#加法通用函数" class="headerlink" title="加法通用函数"></a>加法通用函数</h4><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span>np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># a与b两数组对应位置元素相加</span>np<span class="token punctuation">.</span>add<span class="token punctuation">.</span>reduce<span class="token punctuation">(</span>a<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># a所有元素的累加和</span>np<span class="token punctuation">.</span>add<span class="token punctuation">.</span>accumulate<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 返回累加和的过程数组</span>np<span class="token punctuation">.</span>add<span class="token punctuation">.</span>outer<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 列表与a数组的外和</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>add<span class="token punctuation">.</span>reduce<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>add<span class="token punctuation">.</span>accumulate<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>add<span class="token punctuation">.</span>outer<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="乘法通用函数"><a href="#乘法通用函数" class="headerlink" title="乘法通用函数"></a>乘法通用函数</h4><pre class="line-numbers language-python"><code class="language-python">ndarray<span class="token punctuation">.</span>prod<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 返回a数组中所有元素累乘的结果</span>np<span class="token punctuation">.</span>prod<span class="token punctuation">(</span>a<span class="token punctuation">)</span>ndarray<span class="token punctuation">.</span>cumprod<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 返回a数组中所有元素累乘的过程</span>np<span class="token punctuation">.</span>cumprod<span class="token punctuation">(</span>a<span class="token punctuation">)</span>np<span class="token punctuation">.</span>outer<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 外积</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="除法通用函数"><a href="#除法通用函数" class="headerlink" title="除法通用函数"></a>除法通用函数</h4><pre class="line-numbers language-python"><code class="language-python">np<span class="token punctuation">.</span>true_divide<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#  a除以b</span>np<span class="token punctuation">.</span>divide<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#  等价于上一个API</span>np<span class="token punctuation">.</span>floor_divide<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#  地板除</span>np<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#  取天花板整数</span>np<span class="token punctuation">.</span>trunc<span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#  取截断整数</span>np<span class="token punctuation">.</span>round<span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>divide<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>floor_divide<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>trunc<span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>round<span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="位运算通用函数"><a href="#位运算通用函数" class="headerlink" title="位运算通用函数"></a>位运算通用函数</h4><p><strong>位异或</strong></p><pre class="line-numbers language-python"><code class="language-python">c <span class="token operator">=</span> a <span class="token operator">^</span> bc <span class="token operator">=</span> np<span class="token punctuation">.</span>bitwise_xor<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>按位异或操作可以方便的判断两个数据是否同号。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">^</span> b<span class="token punctuation">)</span>c <span class="token operator">=</span> np<span class="token punctuation">.</span>bitwise_xor<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>c <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>位与</strong></p><pre><code>e = a &amp; be = np.bitwise_and(a, b)</code></pre><p>利用位与运算计算某个数字是否是2的幂</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 1  2^0  00001        0    00000</span><span class="token comment" spellcheck="true"># 2  2^1  00010        1    00001</span><span class="token comment" spellcheck="true"># 4  2^2  00100        3    00011</span><span class="token comment" spellcheck="true"># 8  2^3  01000        7    00111</span><span class="token comment" spellcheck="true"># 16 2^4  10000        15    01111</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token operator">&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>位或</strong></p><pre class="line-numbers language-python"><code class="language-python">f <span class="token operator">=</span> a <span class="token operator">|</span> bf <span class="token operator">=</span> np<span class="token punctuation">.</span>bitwise_or<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>位反</strong></p><pre><code>g = ~a g = np.bitwise_not(a)</code></pre><p><strong>移位</strong></p><pre><code>&lt;&lt;    np.left_shift() &gt;&gt;    np.right_shift()</code></pre><h4 id="三角函数通用函数"><a href="#三角函数通用函数" class="headerlink" title="三角函数通用函数"></a>三角函数通用函数</h4><p>np.sin() 、np.cos()等三角函数都属于矢量函数，都可以处理数组数据。<br>$$<br>y = Asin(wx + \phi) + C<br>$$<br><strong>傅里叶定理</strong></p><p>法国科学家傅里叶说过：所有周期性的函数都是有n多个不同振幅、不同频率、不同初相位的正弦函数叠加而成。<br>$$<br>y = 4\pi \times sin(x) \<br>y = \frac{4}{3}\pi \times sin(3x) \<br>y = \frac{4}{5}\pi \times sin(5x) \<br>y = \frac{4}{7}\pi \times sin(7x) \<br>… \<br>y = \frac{4}{2n-1}\pi \times sin((2n-1)x) \<br>$$<br>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpx <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>y1 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>y2 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> x<span class="token punctuation">)</span>y3 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> x<span class="token punctuation">)</span>y4 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">7</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 叠加1000个波形</span>n <span class="token operator">=</span> <span class="token number">1000</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    y <span class="token operator">+=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> \        np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> x<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Sin'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Sin'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'sin(x)'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'sin(3x)'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'sin(5x)'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y4<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'sin(7x)'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'total'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="矩阵的广义逆矩阵"><a href="#矩阵的广义逆矩阵" class="headerlink" title="矩阵的广义逆矩阵"></a>矩阵的广义逆矩阵</h3><p>如果一个方阵A与另一个方阵B的乘积是一个单位矩阵，A与B互为逆矩阵。</p><pre><code>np.linalg.inv(A) -&gt; BA.I</code></pre><p>将以上有关逆矩阵的定义推广到非方阵，则成为广义逆矩阵。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'11 12 11 14;20 21 21 23;19 18 11 16'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>b <span class="token operator">=</span> a<span class="token punctuation">.</span>I<span class="token comment" spellcheck="true">#b = np.linalg.inv(a)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>解线性方程组</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用最小二乘法求取结果</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>lstsq<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 解线性方程组</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{cases}<br>x-2y+z=0 \<br>2y-8z-8=0 \<br>-4x+5y+9z+9=0<br>\end{cases}<br>$$</p><p>整理矩阵：<br>$$<br>\left[\begin{matrix}<br>1 &amp; -2 &amp; 1\<br>0 &amp; 2 &amp; -8\<br>-4 &amp; 5 &amp; 9\<br>\end{matrix}\right]<br>\times<br>\left[\begin{matrix}<br>x\<br>y\<br>z\<br>\end{matrix}\right]<br>=<br>\left[\begin{matrix}<br>0\<br>8\<br>-9\<br>\end{matrix}\right]<br>$$</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'1 -2 1; 0 2 -8; -4 5 9'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'0; 8; -9'</span><span class="token punctuation">)</span>c <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="特征值与特征向量"><a href="#特征值与特征向量" class="headerlink" title="特征值与特征向量"></a>特征值与特征向量</h4><p>对于n阶方阵A，如果存在数a与非零n维列向量x，使得Ax=ax， 则称a是矩阵A的一个特征值，x是矩阵A属于特征值a的特征向量。</p><p>提取特征值与特征向量的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 已知n阶方阵A， 求特征值与特征向量</span><span class="token comment" spellcheck="true"># eigvals：特征值数组</span><span class="token comment" spellcheck="true"># eigvecs：对应的特征向量数组</span>eigvals<span class="token punctuation">,</span> eigvecs <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 已知特征值与特征向量，求方阵</span>S <span class="token operator">=</span> eigvecs <span class="token operator">*</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>eigvals<span class="token punctuation">)</span> <span class="token operator">*</span> eigvecs<span class="token punctuation">.</span>I<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数据分析DAY07"><a href="#数据分析DAY07" class="headerlink" title="数据分析DAY07"></a>数据分析DAY07</h1><h4 id="特征值与特征向量-1"><a href="#特征值与特征向量-1" class="headerlink" title="特征值与特征向量"></a>特征值与特征向量</h4><p>对于n阶方阵A，如果存在数a与非零n维列向量x，使得Ax=ax， 则称a是矩阵A的一个特征值，x是矩阵A属于特征值a的特征向量。</p><p>提取特征值与特征向量的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 已知n阶方阵A， 求特征值与特征向量</span><span class="token comment" spellcheck="true"># eigvals：特征值数组</span><span class="token comment" spellcheck="true"># eigvecs：对应的特征向量数组</span>eigvals<span class="token punctuation">,</span> eigvecs <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 已知特征值与特征向量，求方阵</span>S <span class="token operator">=</span> eigvecs <span class="token operator">*</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>eigvals<span class="token punctuation">)</span> <span class="token operator">*</span> eigvecs<span class="token punctuation">.</span>I<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npA <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span><span class="token string">'1 6 5; 9 7 3; 1 5 6'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 特征值提取</span>eigvals<span class="token punctuation">,</span> eigvecs <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>eigvals<span class="token punctuation">,</span> eigvecs<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 通过特征值与特征向量， 求方阵</span>S <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>eigvecs<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>eigvals<span class="token punctuation">)</span><span class="token punctuation">)</span>\    <span class="token operator">*</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>eigvecs<span class="token punctuation">)</span><span class="token punctuation">.</span>I<span class="token keyword">print</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：读取图片的亮度矩阵，提取特征值与特征向量，保留部分特征值，重新生成新的亮度矩阵，绘制图片。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>misc <span class="token keyword">as</span> sm<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpimg <span class="token operator">=</span> sm<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'../da_data/lily.jpg'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 特征值提取</span>eigvals<span class="token punctuation">,</span> eigvecs <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把靠后的特征值与特征向量置为0（抹掉特征）</span>eigvals<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true"># 重新生成新的图片</span>img2 <span class="token operator">=</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>eigvecs<span class="token punctuation">)</span> <span class="token operator">*</span> \    np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>eigvals<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span>    \    np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>eigvecs<span class="token punctuation">)</span><span class="token punctuation">.</span>Iimg2 <span class="token operator">=</span> img2<span class="token punctuation">.</span>realmp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Image Features'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img2<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="奇异值分解"><a href="#奇异值分解" class="headerlink" title="奇异值分解"></a>奇异值分解</h4><p>有一个矩阵M，可以分解为3个矩阵U、S、V，使得U x S x V等于m。U与V都是正交矩阵（乘以自身的转置矩阵结果为单位矩阵）。那么S矩阵主对角线上的元素则成为矩阵M的奇异值，其他元素均为0。</p><p>奇异值分解相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 奇异值分解</span><span class="token comment" spellcheck="true"># 得到3个矩阵： U S V。 U与V都是正交矩阵，S矩阵保存着奇异值</span>U<span class="token punctuation">,</span> S<span class="token punctuation">,</span> V <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>svd<span class="token punctuation">(</span>M<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 奇异值分解</span>U<span class="token punctuation">,</span> sv<span class="token punctuation">,</span> V <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>svd<span class="token punctuation">(</span>img<span class="token punctuation">)</span>sv<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>img3 <span class="token operator">=</span> U <span class="token operator">*</span> np<span class="token punctuation">.</span>mat<span class="token punctuation">(</span>np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>sv<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="傅里叶变换"><a href="#傅里叶变换" class="headerlink" title="傅里叶变换"></a>傅里叶变换</h3><p>什么傅里叶变换？</p><p>傅里叶定理支出任何一条周期曲线，无论多么跳跃与不规则，都能表示成一组光滑的正弦曲线叠加之和。</p><p>傅里叶变换即是从一条周期曲线中分解出这一组光滑的正弦曲线的过程。傅里叶变换最终的结果将会得到这一组光滑正弦曲线的振幅、频率、初相位等数据。</p><p>傅里叶变换的目的是可以将时域（时间域）上的信号，转变为频域上的信号，随着域的不同，对一个事物的了解角度也就发生改变。因此某些在时域中不好处理的地方，放在频域中就可以较为简单的处理。（数据存储、数据降噪）<br>$$<br>y= A_1sin(\omega_1 x+\phi_1) +<br>A_2sin(\omega_2 x+\phi_2) +<br>A_3sin(\omega_3 x+\phi_3)+<br>C<br>$$</p><h4 id="傅里叶变换相关函数"><a href="#傅里叶变换相关函数" class="headerlink" title="傅里叶变换相关函数"></a>傅里叶变换相关函数</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 导入快速傅里叶变换模块</span><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>fft <span class="token keyword">as</span> nf<span class="token comment" spellcheck="true"># 通过采样数量、采样周期，求得傅里叶变换分解出的所有曲线的频率</span>freqs <span class="token operator">=</span> nf<span class="token punctuation">.</span>fft<span class="token punctuation">.</span>fftfreq<span class="token punctuation">(</span>采样数量， 采样周期<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于原函数值序列求出傅里叶变换分解出的所有曲线的振幅和初相位</span><span class="token comment" spellcheck="true"># complex_array: 复数数组</span><span class="token comment" spellcheck="true">#     复数的 辅角  即是相位角</span><span class="token comment" spellcheck="true">#    复数的 模    即是振幅.</span>complex_array <span class="token operator">=</span> nf<span class="token punctuation">.</span>fft<span class="token punctuation">.</span>fft<span class="token punctuation">(</span>原函数值序列<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 逆向傅里叶变换 通过复数数组，逆向生成原函数</span>y2 <span class="token operator">=</span> nf<span class="token punctuation">.</span>fft<span class="token punctuation">.</span>ifft<span class="token punctuation">(</span>complex_array<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo05_fft.py  傅里叶变换"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> numpy<span class="token punctuation">.</span>fft <span class="token keyword">as</span> nfx <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>y1 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>y2 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">3</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> x<span class="token punctuation">)</span>y3 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">5</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> x<span class="token punctuation">)</span>y4 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">7</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">*</span> x<span class="token punctuation">)</span>y <span class="token operator">=</span> y1 <span class="token operator">+</span> y2 <span class="token operator">+</span> y3 <span class="token operator">+</span> y4mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'FFT'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Time Domain'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># mp.plot(x, y1, label='sin(x)')</span><span class="token comment" spellcheck="true"># mp.plot(x, y2, label='sin(3x)')</span><span class="token comment" spellcheck="true"># mp.plot(x, y3, label='sin(5x)')</span><span class="token comment" spellcheck="true"># mp.plot(x, y4, label='sin(7x)')</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'total'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 对该合成波执行FFT操作，得到分解波的信息。</span><span class="token comment" spellcheck="true"># 绘制频域图像。</span><span class="token comment" spellcheck="true"># 通过采样数量，采样周期返回频率数组</span>freqs <span class="token operator">=</span> nf<span class="token punctuation">.</span>fftfreq<span class="token punctuation">(</span>x<span class="token punctuation">.</span>size<span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 通过原函数图形，得到分解结果的复数数组</span><span class="token comment" spellcheck="true"># 复数的模就是振幅，复数的辅角为相位角</span>ffts <span class="token operator">=</span> nf<span class="token punctuation">.</span>fft<span class="token punctuation">(</span>y<span class="token punctuation">)</span>pows <span class="token operator">=</span> np<span class="token punctuation">.</span>abs<span class="token punctuation">(</span>ffts<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 逆向傅里叶变换</span>y2 <span class="token operator">=</span> nf<span class="token punctuation">.</span>ifft<span class="token punctuation">(</span>ffts<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制频域图像</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Frequency Domain'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Frequency'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Pow'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>freqs<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pows<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'Frequency Line'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>        alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>  label<span class="token operator">=</span><span class="token string">'IFFT LINE'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>基于傅里叶变换的频域滤波</strong></p><p>含噪信号是高能信号与低能噪声叠加的信号，可以通过傅里叶变换的频域滤波实现降噪。</p><p>通过FFT使含噪信号转换为含噪频谱，取出低能噪声，留下高能频谱后再通过IFFT合成高能信号。</p><p>案例：基于傅里叶变换为音频文件去除噪声。</p><ol><li>读取音频文件，获取音频文件的基本信息：采样个数、采样周期，每个采样声音的信号值。绘制音频时域：时间、位移图像。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> numpy<span class="token punctuation">.</span>fft <span class="token keyword">as</span> nf<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token comment" spellcheck="true"># 读取音频文件 获取采样率，与每个采样点的信号值</span>sample_rate<span class="token punctuation">,</span> noised_sigs <span class="token operator">=</span> \    wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'../da_data/noised.wav'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># print(sample_rate, type(sample_rate))</span><span class="token comment" spellcheck="true"># print(noised_sigs, noised_sigs.shape)</span><span class="token comment" spellcheck="true"># 整理图像的y</span>noised_sigs <span class="token operator">=</span> noised_sigs <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">15</span><span class="token comment" spellcheck="true"># 整理图像的x</span>times <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>len<span class="token punctuation">(</span>noised_sigs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> sample_ratemp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Filter'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Time Domain'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Time'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Sigs'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>times<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">]</span><span class="token punctuation">,</span> noised_sigs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Noised'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>基于傅里叶变换，获取音频频域信息，绘制频域：频率、能量图像。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 绘制频率图像</span>freqs <span class="token operator">=</span> nf<span class="token punctuation">.</span>fftfreq<span class="token punctuation">(</span>times<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> sample_rate<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取每个频率波的能量</span>noised_fft <span class="token operator">=</span> nf<span class="token punctuation">.</span>fft<span class="token punctuation">(</span>noised_sigs<span class="token punctuation">)</span>noised_pow <span class="token operator">=</span> np<span class="token punctuation">.</span>abs<span class="token punctuation">(</span>noised_fft<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Frequecy Domain'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Freqs'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Pows'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>semilogy<span class="token punctuation">(</span>freqs<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            noised_pow<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Noised'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>将低频噪声去除后绘制音频频域：频率、能量图像。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 请去除低频噪声  找到需要保留的高能频率</span>fund_freq <span class="token operator">=</span> freqs<span class="token punctuation">[</span>noised_pow<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 所有噪声频率的下标</span>noised_indices <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>freqs <span class="token operator">!=</span> fund_freq<span class="token punctuation">)</span>filter_ffts <span class="token operator">=</span> noised_fft<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>filter_ffts<span class="token punctuation">[</span>noised_indices<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>filter_pows <span class="token operator">=</span> np<span class="token punctuation">.</span>abs<span class="token punctuation">(</span>filter_ffts<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">224</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Frequency'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Pows'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>freqs<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        filter_pows<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Filter'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>基于逆向傅里叶变换，生成新的音频信号，绘制音频时域的：时间、位移图像。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 生成新的音频图像</span>filter_sigs <span class="token operator">=</span> nf<span class="token punctuation">.</span>ifft<span class="token punctuation">(</span>filter_ffts<span class="token punctuation">)</span><span class="token punctuation">.</span>realmp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">223</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Time'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Sigs'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>times<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">]</span><span class="token punctuation">,</span> filter_sigs<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Filter'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>生成文件</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 重新生成音频文件</span>wf<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'../da_data/out.wav'</span><span class="token punctuation">,</span> sample_rate<span class="token punctuation">,</span>    <span class="token punctuation">(</span>filter_sigs <span class="token operator">*</span> <span class="token number">2</span><span class="token operator">**</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="随机数模块"><a href="#随机数模块" class="headerlink" title="随机数模块"></a>随机数模块</h3><p>np.random可以生成服从特定统计规律的随机数序列。</p><h4 id="二项分布（binomial）"><a href="#二项分布（binomial）" class="headerlink" title="二项分布（binomial）"></a>二项分布（binomial）</h4><p>二项分布就是重复n次独立事件的伯努利实验。在每次实验中只有两种可能的结果，而且两种结果发生与否相互对立，相互独立，事件发生与否的概率在每一次独立实验中都保持不变。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 产生size个随机数， 每个随机数来自n次尝试中成功的次数</span><span class="token comment" spellcheck="true"># 其中每次尝试成功的概率为p。</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>binomial<span class="token punctuation">(</span>n<span class="token punctuation">,</span> p<span class="token punctuation">,</span> size<span class="token punctuation">)</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>binomial<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例： 某人投篮命中率为0.3， 投10次进5个球的概率。</p><pre class="line-numbers language-python"><code class="language-python">r <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>binomial<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">)</span>r <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100000</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 客服接通率0.6， 打三次电话都没人接的概率</span>r <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>binomial<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">)</span>r <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100000</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="超几何分布-hypergeometric"><a href="#超几何分布-hypergeometric" class="headerlink" title="超几何分布(hypergeometric)"></a>超几何分布(hypergeometric)</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 产生size个随机数</span><span class="token comment" spellcheck="true"># 每个随机数为在总样本中随机抽取nsample个样本后，好样本的个数</span><span class="token comment" spellcheck="true"># 总样本由ngood个好样本和nbad个坏样本组成</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>hypergeometric<span class="token punctuation">(</span>ngood<span class="token punctuation">,</span> nobad<span class="token punctuation">,</span> nsample<span class="token punctuation">,</span> size<span class="token punctuation">)</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>hypergeometric<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 超几何分布</span><span class="token comment" spellcheck="true"># 7个好苹果、3个坏苹果中随机选个</span><span class="token comment" spellcheck="true"># 抽中好苹果的数量</span>r <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>hypergeometric<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>正态分布（normal）</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 产生size个随机数，服从标准正态分布(期望=0，标准差=1)</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 产生size个随机数，服从正态分布(期望=1，标准差=10)</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="杂项功能"><a href="#杂项功能" class="headerlink" title="杂项功能"></a>杂项功能</h3><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><p><strong>联合间接排序</strong></p><p>联合间接排序支持为待排序列排序，若待排序列值相同，则利用参考序列作为参考继续排序。最终返回排序过后的有序索引。</p><pre class="line-numbers language-python"><code class="language-python">indices <span class="token operator">=</span> np<span class="token punctuation">.</span>lexsort<span class="token punctuation">(</span><span class="token punctuation">(</span>参考序列， 待排序列<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npproducts <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token string">'Apple'</span><span class="token punctuation">,</span> <span class="token string">'Huawei'</span><span class="token punctuation">,</span> <span class="token string">'Mi'</span><span class="token punctuation">,</span> <span class="token string">'Samsung'</span><span class="token punctuation">,</span> <span class="token string">'OPPO'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>prices <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token number">8000</span><span class="token punctuation">,</span> <span class="token number">4500</span><span class="token punctuation">,</span> <span class="token number">2999</span><span class="token punctuation">,</span> <span class="token number">4999</span><span class="token punctuation">,</span> <span class="token number">2999</span><span class="token punctuation">]</span><span class="token punctuation">)</span>volumns <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>indices <span class="token operator">=</span> np<span class="token punctuation">.</span>lexsort<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span>volumns<span class="token punctuation">,</span> prices<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>indices<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>复数数组排序</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 按照实部升序排列, 对于实部相同的元素，参考虚部的升序，返回排序后</span><span class="token comment" spellcheck="true"># 的结果数组。</span>np<span class="token punctuation">.</span>sort_complex<span class="token punctuation">(</span>复数数组<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>插入排序</strong></p><p>如果有需求向有序数组中插入元素，使数组依然有序，numpy提供了方法：searchsorted方法查询并返回可插入位置数组，然后调用insert插入元素。</p><pre class="line-numbers language-python"><code class="language-python">indices <span class="token operator">=</span> np<span class="token punctuation">.</span>searchsorted<span class="token punctuation">(</span>有序序列，待插入序列<span class="token punctuation">)</span>np<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>有序序列，位置序列，待插入序列<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 插入排序</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>indices <span class="token operator">=</span> np<span class="token punctuation">.</span>searchsorted<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>indices<span class="token punctuation">)</span>r <span class="token operator">=</span> np<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>a<span class="token punctuation">,</span> indices<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h4><p>scipy提供了常见的插值算法，可以通过一系列的离散点设计出符合一定规律的插值器函数。 若我们给插值器函数更多的x，该函数将返回对应的函数值。</p><p>（插值常用于数据的补充）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>interpolate <span class="token keyword">as</span> si<span class="token comment" spellcheck="true"># 返回插值器函数</span>func <span class="token operator">=</span> si<span class="token punctuation">.</span>interp1d<span class="token punctuation">(</span>    离散点x坐标，    离散点y坐标，    kind <span class="token operator">=</span> 插值算法<span class="token punctuation">(</span>默认<span class="token string">'linear'</span><span class="token punctuation">:</span> 线性插值<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>interpolate <span class="token keyword">as</span> si<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token comment" spellcheck="true"># 搞出15个散点</span>min_x<span class="token punctuation">,</span> max_x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span>dis_x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>min_x<span class="token punctuation">,</span> max_x<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>dis_y <span class="token operator">=</span> np<span class="token punctuation">.</span>sinc<span class="token punctuation">(</span>dis_x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把散点交给插值器，生成插值器函数，绘制图像</span>linear <span class="token operator">=</span> si<span class="token punctuation">.</span>interp1d<span class="token punctuation">(</span>dis_x<span class="token punctuation">,</span> dis_y<span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>min_x<span class="token punctuation">,</span> max_x<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>y <span class="token operator">=</span> linear<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 三次样条插值器(Cubic Spline Interpolation)</span>cu <span class="token operator">=</span> si<span class="token punctuation">.</span>interp1d<span class="token punctuation">(</span>dis_x<span class="token punctuation">,</span> dis_y<span class="token punctuation">,</span> kind<span class="token operator">=</span><span class="token string">'cubic'</span><span class="token punctuation">)</span>y2 <span class="token operator">=</span> cu<span class="token punctuation">(</span>x<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Interpolate'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>dis_x<span class="token punctuation">,</span> dis_y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">##mp.plot(x, y, color='dodgerblue')</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>插值器会在游戏领域使用，在机器学习领域我们收集到的数据有很多是不完整的数据，这样就需要根据已有数据对空白数据进行预测，对样本数据进行补充完善，这时可以利用机器学习相关算法与插值器对空白数据进行预测与补充，完善训练样本。</p><h4 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h4><p>直观的说，对于一个给定的正实值函数，在一个实数区间上的定积分可以理解为坐标平面上由曲线、直线、轴围城的曲边梯形的面积。（一个确定值）</p><p>案例：利用微元法求定积分: y=2x<sup>2</sup>+3x+4曲线在[-5,5]区间的定积分。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo10_int.py  积分案例"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>patches <span class="token keyword">as</span> mc<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> x<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> x <span class="token operator">+</span> <span class="token number">4</span>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span>x1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>y1 <span class="token operator">=</span> f<span class="token punctuation">(</span>x1<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Integral'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Integral'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'f(x)'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 微元法画梯形</span>n <span class="token operator">=</span> <span class="token number">50</span>x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>y2 <span class="token operator">=</span> f<span class="token punctuation">(</span>x2<span class="token punctuation">)</span>area <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment" spellcheck="true"># 保存积分值</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    area <span class="token operator">+=</span> <span class="token punctuation">(</span>y2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> y2<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> \        <span class="token punctuation">(</span>x2<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> x2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制图像</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>add_patch<span class="token punctuation">(</span>        mc<span class="token punctuation">.</span>Polygon<span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">[</span>x2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span>x2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> y2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>x2<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y2<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>x2<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            fc<span class="token operator">=</span><span class="token string">'deepskyblue'</span><span class="token punctuation">,</span>            ec<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span>            alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>scipy.integrate模块提供了quad方法计算定积分：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>integrate <span class="token keyword">as</span> si<span class="token comment" spellcheck="true"># 求定积分：给出函数f，积分下限a，积分上限b</span><span class="token comment" spellcheck="true"># 返回：(积分值， 最大误差)</span>area <span class="token operator">=</span> si<span class="token punctuation">.</span>quad<span class="token punctuation">(</span>f<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>基于scipy的图像处理</strong></p><p>scipy.ndimage中提供了一些简单的图像处理API，高斯模糊、图像旋转、边缘识别等功能。</p><pre class="line-numbers language-python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a><a href="https://blog.csdn.net/qq_27297393/article/details/82284384" target="_blank" rel="noopener">机器学习</a></h1><h1 id="机器学习DAY01"><a href="#机器学习DAY01" class="headerlink" title="机器学习DAY01"></a>机器学习DAY01</h1><h3 id="机器学习概述"><a href="#机器学习概述" class="headerlink" title="机器学习概述"></a>机器学习概述</h3><h4 id="什么是机器学习"><a href="#什么是机器学习" class="headerlink" title="什么是机器学习"></a>什么是机器学习</h4><p>机器学习是一门能够让编程计算机从数据中学习的计算机科学。</p><p>一个计算机程序在完成任务T之后，获得经验E，其表现效果为P，如果任务T的性能表现（P），随着E增加而增加，那么这样的计算机程序就被称为机器学习系统。拥有自我完善，自我增进，自我适应的特点。</p><h4 id="为什么需要机器学习"><a href="#为什么需要机器学习" class="headerlink" title="为什么需要机器学习"></a>为什么需要机器学习</h4><ul><li>自动化的升级和维护</li><li>解决那些算法过于复杂，甚至根本就没有算法的问题</li><li>在机器学习的过程中协助人类对事物进行深刻理解</li></ul><h4 id="机器学习的问题"><a href="#机器学习的问题" class="headerlink" title="机器学习的问题"></a>机器学习的问题</h4><ol><li><p>建模问题</p><p>所谓机器学习，形式上可以这么理解：在数据中通过统计或推理的方法，寻找一个接收特定输入x，并给出预期输出y的功能函数f(x).</p></li><li><p>评估问题</p><p>针对已知输入，函数给出的输出（预测值）与实际输出（目标值）之间存在一定的误差，因此需要构建一个评估体系，根据误差的大小判定函数的优劣。</p></li><li><p>优化问题</p><p>学习的核心在于改善自身的性能，通过数据对算法的反复锤炼，不断提升函数预测的准确性，直到获得能够满足实际需求的最优解决方案。</p></li></ol><h4 id="机器学习的种类"><a href="#机器学习的种类" class="headerlink" title="机器学习的种类"></a>机器学习的种类</h4><p><strong>监督学习、无监督学习、半监督学习、强化学习</strong></p><ol><li>监督学习：用已知的输出评估模型的性能，引导模型优化。</li><li>无监督学习：在没有已知输出的情况下，仅仅根据输入信息的相关性，进行类别的划分。</li><li>半监督学习：先通过无监督学习划分类别，再根据人工标记，通过有监督学习预测输出。</li><li>强化学习：通过对不同决策结果的奖励和惩罚，使机器学习系统经过长时间训练以后，越来越倾向于给出接近期望结果的输出。</li></ol><p><strong>批量学习和增量学习</strong></p><ol><li>批量学习：将学习的过程和应用的过程分开，用全部的训练数据训练模型，然后在应用场景中实现预测，当预测结果不够理想时，重新回到学习过程，如此循环。</li><li>增量学习：将学习的过程和应用的而过程统一起来，在应用的同时以增量的方式不断学习新的内容，边训练变预测，边预测边训练。</li></ol><p><strong>基于实例的学习和基于模型的学习</strong></p><ol><li>基于实例的学习：以历史数据作为经验，寻找与待预测输入最接近的样本，以其输出作为预测结果。</li><li>基于模型的学习：以历史数据作为经验，建立联系输入与输出的某种数学模型，将待预测输入代入该模型，预测结果。</li></ol><h4 id="机器学习的一般过程"><a href="#机器学习的一般过程" class="headerlink" title="机器学习的一般过程"></a>机器学习的一般过程</h4><p><strong>数据清理</strong></p><ol><li>数据收集（数据检索、数据挖掘、爬虫）</li><li>数据清洗</li></ol><p><strong>机器学习</strong></p><ol><li>选择模型（算法）</li><li>训练模型（算法）</li><li>评估模型（工具、框架、算法）</li><li>测试模型</li></ol><p><strong>业务运维</strong></p><ol><li>应用模型</li><li>维护模型</li></ol><h4 id="机器学习的典型应用"><a href="#机器学习的典型应用" class="headerlink" title="机器学习的典型应用"></a>机器学习的典型应用</h4><p>股价预测、推荐引擎、自然语言识别（NLP）、语音、图像、人脸识别等。</p><h4 id="机器学习的基本问题"><a href="#机器学习的基本问题" class="headerlink" title="机器学习的基本问题"></a>机器学习的基本问题</h4><ol><li>回归问题：根据已知的输入和输出寻找某种性能最佳的模型，将未知输出的输入代入模型，得到<strong>连续的输出</strong>。</li><li>分类问题：根据已知的输入和输出寻找某种性能最佳的模型，将未知输出的输入代入模型，得到<strong>离散的输出</strong>。</li><li>聚类问题：根据已知输入的相似程度，将其划分成不同的群落。</li><li>升维、降维问题：在性能损失尽可能小的情况下，实现模型业务。</li></ol><h3 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h3><p><strong>数据样本矩阵格式</strong></p><table><thead><tr><th>年龄</th><th>学历</th><th>经验</th><th>性别</th><th>月薪</th></tr></thead><tbody><tr><td>27</td><td>硕士</td><td>2</td><td>女</td><td>12000</td></tr><tr><td>24</td><td>本科</td><td>1</td><td>男</td><td>8000</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>一行一样本，一列一特征。</p><p><strong>数据预处理相关库</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># sklearn是解决机器学习问题的科学计算工具包</span><span class="token comment" spellcheck="true"># preprocessing用于数据预处理操作</span><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="均值移除-标准化"><a href="#均值移除-标准化" class="headerlink" title="均值移除(标准化)"></a>均值移除(标准化)</h4><p>由于一个样本的不同特征值差异较大，不利于使用现有机器学习算法进行样本处理。所以可以使用<strong>均值移除</strong>让样本矩阵中每组特征值的平均值为0，标准差为1。</p><p>如何使样本矩阵中每组特征平均值为0？</p><pre><code>年龄： 17  20  23mean(年龄) = 20a = -3b = 0 c = 3</code></pre><p>如何使样本矩阵中每组特征标准差为1？</p><pre><code>a = -3b = 0 c = 3s = std(a, b, c)结果：[a/s, b/s, c/s]</code></pre><p>sklearn提供了均值移除的相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spA <span class="token operator">=</span> sp<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>std_samples <span class="token operator">=</span> sp<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出每一列的均值与标准差</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">.</span>std<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="范围缩放"><a href="#范围缩放" class="headerlink" title="范围缩放"></a>范围缩放</h4><p>将样本矩阵中的每一列的最小值与最大值设定为相同的区间，统一各列特征值的范围。一般情况下会把特征值缩放至[0,1]区间。</p><p>如何使一组特征值的最小值为0呢？</p><pre><code>原特征： [17, 20, 23]每个元素减去特征值的最小值： [0, 3, 6]</code></pre><p>如何使一组特征值的最大值为1呢？</p><pre><code>[0, 3, 6]把特征值数组每个元素除以最大值： [0, 0.5, 1]</code></pre><p>sklearn提供的范围缩放相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取MinMax范围缩放器， 定义缩放范围[0, 1]</span>mms <span class="token operator">=</span> sp<span class="token punctuation">.</span>MinMaxScaler<span class="token punctuation">(</span>feature_range<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 返回缩放结果</span>result <span class="token operator">=</span> mms<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行范围缩放</span>mms <span class="token operator">=</span> sp<span class="token punctuation">.</span>MinMaxScaler<span class="token punctuation">(</span>feature_range<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>result <span class="token operator">=</span> mms<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该范围缩放过程也可以这么理解：</p><p>当x=17时，y=0； 当x=23时，y=1；问：当x=20时，y=几？<br>$$<br>\left[\begin{matrix}<br>17 &amp; 1 \<br>23 &amp; 1 \<br>\end{matrix}\right]<br>\times<br>\left[\begin{matrix}<br>k \<br>b \<br>\end{matrix}\right]<br>=<br>\left[\begin{matrix}<br>0 \<br>1 \<br>\end{matrix}\right]<br>$$</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用解方程的方式求解k与b，实现线性范围缩放</span>mms_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> col <span class="token keyword">in</span> mms_samples<span class="token punctuation">.</span>T<span class="token punctuation">:</span>    col_min <span class="token operator">=</span> col<span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span>    col_max <span class="token operator">=</span> col<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>col_min<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                  <span class="token punctuation">[</span>col_max<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 计算 kx + b</span>    col <span class="token operator">=</span> col <span class="token operator">*</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    col <span class="token operator">+=</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>mms_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="归一化"><a href="#归一化" class="headerlink" title="归一化"></a>归一化</h4><p>有些情况每个样本的每个特征值具体是多少并不重要，但是每个样本特征值的占比更加重要。</p><table><thead><tr><th></th><th>Python</th><th>Java</th><th>PHP</th></tr></thead><tbody><tr><td>2017</td><td>10</td><td>20</td><td>5</td></tr><tr><td>2018</td><td>8</td><td>5</td><td>0</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>归一化即是用每个样本的每个特征值除以该样本各个特征值绝对值的总和。变换后样本矩阵，每个样本的特征值绝对值之和为1。</p><p>sklearn提供的归一化相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># array：原始样本矩阵</span><span class="token comment" spellcheck="true"># norm：范数</span><span class="token comment" spellcheck="true">#    l1：l1范数，这组数据每个元素绝对值之和为1</span><span class="token comment" spellcheck="true">#   l2：l2范数，这组数据每个元素平方之和为1</span>sp<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>array<span class="token punctuation">,</span> norm<span class="token operator">=</span><span class="token string">'l1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 归一化处理</span>nor_samps <span class="token operator">=</span> sp<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>raw_samples<span class="token punctuation">,</span> norm<span class="token operator">=</span><span class="token string">'l1'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>nor_samps<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>abs<span class="token punctuation">(</span>nor_samps<span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 自己算：</span>nor_samps <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> row <span class="token keyword">in</span> nor_samps<span class="token punctuation">:</span>    row <span class="token operator">/=</span> abs<span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>nor_samps<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>abs<span class="token punctuation">(</span>nor_samps<span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二值化"><a href="#二值化" class="headerlink" title="二值化"></a>二值化</h4><p>有些业务并不需要分析矩阵的详细完整数据（比如图像边缘识别只需要分析图像边缘即可），可以根据一个事先给定的阈值，用0和1对特征值进行转换，分别表示不高于或高于阈值。二值化后的数组中每个元素非0即1，达到简化数学模型的目的。</p><p>sklearn提供二值化相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 给出阈值，获取二值化器</span>bin <span class="token operator">=</span> sp<span class="token punctuation">.</span>Binarizer<span class="token punctuation">(</span>threshold<span class="token operator">=</span>阈值<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 对原始样本矩阵执行二值化预处理操作</span>result <span class="token operator">=</span> bin<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 二值化处理</span>bin <span class="token operator">=</span> sp<span class="token punctuation">.</span>Binarizer<span class="token punctuation">(</span>threshold<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>bin_samples <span class="token operator">=</span> bin<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 自己做：</span>bin_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>bin_samples<span class="token punctuation">[</span>bin_samples <span class="token operator">&lt;=</span> <span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>bin_samples<span class="token punctuation">[</span>bin_samples <span class="token operator">></span> <span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="独热编码"><a href="#独热编码" class="headerlink" title="独热编码"></a>独热编码</h4><p>为样本特征的每个值建立一个由一个1与若干个0组成的序列，用该序列对所有的特征值进行编码。</p><pre><code>2个数      3个数    4个数1        3        27        5        41        8        67        3        9为每一个数组进行编码：1-10    3-100    2-10007-01    5-010    4-0100        8-001    6-0010                9-0001编码完毕后得到的最终样本矩阵：101001000010100100100010010011000001</code></pre><p>独热编码相关的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 创建独热编码器对象</span><span class="token comment" spellcheck="true"># sparse：是否采用紧缩格式</span><span class="token comment" spellcheck="true"># dtype:数据类型</span>ohe<span class="token operator">=</span>sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span>是否采用紧缩格式，dtype<span class="token operator">=</span>数据类型<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 对原始样本矩阵进行处理，返回度热编码后的样本矩阵</span>result<span class="token operator">=</span>ohe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取ohe的编码字典</span>ohe_dict <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>ohe_samples <span class="token operator">=</span> ohe_dict<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ohe_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 独热编码</span>ohe <span class="token operator">=</span> sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>int<span class="token punctuation">)</span>ohe_samples <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ohe_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取ohe的编码字典</span>ohe_dict <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>ohe_samples <span class="token operator">=</span> ohe_dict<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ohe_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="标签编码"><a href="#标签编码" class="headerlink" title="标签编码"></a>标签编码</h4><p>根据字符串形式的特征值在特征序列中的位置，为其制定一个数字标签，用于提供给基于数值算法的学习模型。</p><p>标签编码相关的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取标签编码器</span>lbe <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 对原始样本矩阵执行标签编码，返回编码完毕后的结果</span>result <span class="token operator">=</span> lbe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 给出编码矩阵，反向逆推出原始样本矩阵</span>samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token string">'audi'</span><span class="token punctuation">,</span> <span class="token string">'ford'</span><span class="token punctuation">,</span> <span class="token string">'audi'</span><span class="token punctuation">,</span> <span class="token string">'toyota'</span><span class="token punctuation">,</span>    <span class="token string">'ford'</span><span class="token punctuation">,</span> <span class="token string">'bmw'</span><span class="token punctuation">,</span> <span class="token string">'toyota'</span><span class="token punctuation">,</span> <span class="token string">'byd'</span><span class="token punctuation">,</span>    <span class="token string">'audi'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行标签编码</span>lbe <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>lbe_samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lbe_samples<span class="token punctuation">)</span>inv_sampls <span class="token operator">=</span> lbe<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>lbe_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>inv_sampls<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h3><p>线性回归的本质为针对符合线性数学模型的一组数据，可以找到一个线性方程拟合样本数据。从而当给出自变量后，通过线性方程实现预测输出的目的。</p><pre><code>输入       输出0.5        5.00.6        5.50.8        6.01.1        6.81.4        7.0....y = kx + b</code></pre><p>预测函数： y = w<sub>0</sub> + w<sub>1</sub>x</p><p>x： 输入   </p><p>y： 输出</p><p> w<sub>0</sub>  w<sub>1</sub>: 模型参数</p><p><strong>所谓模型的训练，就是根据已知的x与y，找到最佳的模型参数 w<sub>0</sub>  w<sub>1</sub>，使得尽可能的精确描述所有输出和输出的关系（误差最小）。</strong></p><p><strong>单样本误差：</strong></p><p>根据预测函数求出输入为x时的预测值： y’ = w<sub>0</sub> + w<sub>1</sub>x。</p><p>单样本误差则为：1/2  (y’ - y)<sup>2</sup></p><p><strong>总样本误差：</strong> </p><p>把所有单样本误差相加即是总样本误差： 1/2 &Sigma; (y’ - y)<sup>2</sup></p><p><strong>损失函数：</strong></p><p>loss =  1/2 &Sigma; (w<sub>0</sub> + w<sub>1</sub>x - y)<sup>2</sup></p><p>所以最终的结果即是需要找到一组w<sub>0</sub>  w<sub>1</sub>使得loss函数值最小。</p><h1 id="机器学习DAY02"><a href="#机器学习DAY02" class="headerlink" title="机器学习DAY02"></a>机器学习DAY02</h1><h3 id="线性回归-1"><a href="#线性回归-1" class="headerlink" title="线性回归"></a>线性回归</h3><p>线性回归的本质为针对符合线性数学模型的一组数据，可以找到一个线性方程拟合样本数据。从而当给出自变量后，通过线性方程实现预测输出的目的。</p><pre><code>输入       输出0.5        5.00.6        5.50.8        6.01.1        6.81.4        7.0....y = kx + b</code></pre><p>预测函数： y = w<sub>0</sub> + w<sub>1</sub>x</p><p>x： 输入   </p><p>y： 输出</p><p> w<sub>0</sub>  w<sub>1</sub>: 模型参数</p><p><strong>所谓模型的训练，就是根据已知的x与y，找到最佳的模型参数 w<sub>0</sub>  w<sub>1</sub>，使得尽可能的精确描述所有输入和输出的关系（误差最小）。</strong></p><p><strong>单样本误差：</strong></p><p>根据预测函数求出输入为x时的预测值： y’ = w<sub>0</sub> + w<sub>1</sub>x。</p><p>单样本误差则为：1/2  (y’ - y)<sup>2</sup></p><p><strong>总样本误差：</strong> </p><p>把所有单样本误差相加即是总样本误差： 1/2 &Sigma; (y’ - y)<sup>2</sup></p><p><strong>损失函数：</strong></p><p>loss =  1/2 &Sigma; (w<sub>0</sub> + w<sub>1</sub>x - y)<sup>2</sup></p><p>所以最终的结果即是需要找到一组w<sub>0</sub>  w<sub>1</sub>使得loss函数值最小。</p><p>案例：基于梯度下降理论实现线性回归，求出w<sub>0</sub>  w<sub>1</sub>。</p><ol><li>整理训练集数据，自定义梯度下降算法，求出w<sub>0</sub>  w<sub>1</sub>，绘制回归线。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mptrain_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">1.4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>train_y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token number">6.8</span><span class="token punctuation">,</span> <span class="token number">7.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>test_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.45</span><span class="token punctuation">,</span> <span class="token number">0.55</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.3</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>test_y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4.8</span><span class="token punctuation">,</span> <span class="token number">5.3</span><span class="token punctuation">,</span> <span class="token number">6.4</span><span class="token punctuation">,</span> <span class="token number">6.9</span><span class="token punctuation">,</span> <span class="token number">7.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于梯度下降理论，完成线性回归，求w0与w1</span>times <span class="token operator">=</span> <span class="token number">1000</span>  <span class="token comment" spellcheck="true"># 梯度下降次数</span>lrate <span class="token operator">=</span> <span class="token number">0.01</span>  <span class="token comment" spellcheck="true"># 每次梯度下降参数的变化率</span>epoches <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 记录每次梯度下降的索引</span>w0<span class="token punctuation">,</span> w1<span class="token punctuation">,</span> losses <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 参数</span><span class="token comment" spellcheck="true"># 做1000次梯度下降</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> times <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    epoches<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    loss <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>w0<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> w1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> train_x             <span class="token operator">-</span> train_y<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>    losses<span class="token punctuation">.</span>append<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 使用偏导数取出w0与w1梯度下降值</span>    d0 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>w0<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> w1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> train_x<span class="token punctuation">)</span>          <span class="token operator">-</span> train_y<span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>    d1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>w0<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> w1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> train_x <span class="token operator">-</span> train_y<span class="token punctuation">)</span>          <span class="token operator">*</span> train_x<span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>'<span class="token punctuation">{</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span> <span class="token operator">></span> w0<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token number">8f</span><span class="token punctuation">}</span><span class="token punctuation">,</span> w1<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token number">8f</span><span class="token punctuation">}</span><span class="token punctuation">,</span> \          loss<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token number">8f</span><span class="token punctuation">}</span>'<span class="token punctuation">.</span>format<span class="token punctuation">(</span>        epoches<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> w0<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> w1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        losses<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># w0, w1梯度下降：</span>    w0<span class="token punctuation">.</span>append<span class="token punctuation">(</span>w0<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> lrate <span class="token operator">*</span> d0<span class="token punctuation">)</span>    w1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>w1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> lrate <span class="token operator">*</span> d1<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Linear Regression'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Linear Regression'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'s'</span><span class="token punctuation">,</span>           c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>           label<span class="token operator">=</span><span class="token string">'Training Points'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 通过w0与w1，绘制回归线</span>pred_train_y <span class="token operator">=</span> w1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> train_x <span class="token operator">+</span> w0<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> pred_train_y<span class="token punctuation">,</span>        color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'Regression Line'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>绘制每次梯度下降过程中w<sub>0</sub>  w<sub>1</sub> loss值的变化。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 绘制每次梯度下降过程中w0 w1 loss值的变化。</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Training Progress'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">311</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Training Progress'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'w0'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>epoches<span class="token punctuation">,</span> w0<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'w0'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">312</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Training Progress'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'w1'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>epoches<span class="token punctuation">,</span> w1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'w1'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">313</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Training Progress'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'loss'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>epoches<span class="token punctuation">,</span> losses<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'loss'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>基于三维曲面绘制梯度下降过程中的每一个空间点。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">as</span> axes3d<span class="token comment" spellcheck="true"># 绘制空间曲面，观察梯度下降过程</span>grid_w0<span class="token punctuation">,</span> grid_w1 <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.5</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 构建一个数组，结构与grid_w0一致，元素全是0</span>grid_loss <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>grid_w0<span class="token punctuation">)</span><span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> zip<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token punctuation">:</span>    grid_loss <span class="token operator">+=</span> \        <span class="token punctuation">(</span>grid_w0 <span class="token operator">+</span> x <span class="token operator">*</span> grid_w1 <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token comment" spellcheck="true"># 绘制曲面</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">"Loss Function"</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> mp<span class="token punctuation">.</span>gca<span class="token punctuation">(</span>projection<span class="token operator">=</span><span class="token string">'3d'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Loss Function'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'w0'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'w1'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_zlabel<span class="token punctuation">(</span><span class="token string">'loss'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot_surface<span class="token punctuation">(</span>    grid_w0<span class="token punctuation">,</span> grid_w1<span class="token punctuation">,</span> grid_loss<span class="token punctuation">,</span>    rstride<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> cstride<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>w0<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> w1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> losses<span class="token punctuation">,</span>        <span class="token string">'o-'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>以等高线的方式绘制梯度下降的过程。</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 以等高线的方式绘制梯度下降的过程。</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Contour'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'w0'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'w1'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>contourf<span class="token punctuation">(</span>grid_w0<span class="token punctuation">,</span> grid_w1<span class="token punctuation">,</span> grid_loss<span class="token punctuation">,</span>            <span class="token number">10</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span>cntr <span class="token operator">=</span> mp<span class="token punctuation">.</span>contour<span class="token punctuation">(</span>grid_w0<span class="token punctuation">,</span> grid_w1<span class="token punctuation">,</span> grid_loss<span class="token punctuation">,</span>                  <span class="token number">10</span><span class="token punctuation">,</span> colors<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span>                  linewidths<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>clabel<span class="token punctuation">(</span>cntr<span class="token punctuation">,</span> inline_spacing<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>          fmt<span class="token operator">=</span><span class="token string">'%.2f'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>w0<span class="token punctuation">,</span> w1<span class="token punctuation">,</span> <span class="token string">'o-'</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        label<span class="token operator">=</span><span class="token string">'BGD'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="线性回归模型"><a href="#线性回归模型" class="headerlink" title="线性回归模型"></a>线性回归模型</h4><p>sklearn提供了线性回归相关的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lm<span class="token comment" spellcheck="true"># 创建线性回归模型</span>model <span class="token operator">=</span> lm<span class="token punctuation">.</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 模型训练</span><span class="token comment" spellcheck="true"># 输入：一个二维数组表示的样本矩阵</span><span class="token comment" spellcheck="true"># 输出：每个样本最终的结果</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>输入，输出<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 模型预测  给出与训练时格式相同的输入， 返回预测输出</span>result <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>测试输入<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：基于线性回归训练single.txt中的样本，使用模型预测样本。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lm<span class="token comment" spellcheck="true"># 读取数据</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>    <span class="token string">'../ml_data/single.txt'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span>    usecols<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>x <span class="token operator">=</span> x<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># x变为n行1列</span><span class="token comment" spellcheck="true"># 创建模型->训练模型->使用模型</span>model <span class="token operator">=</span> lm<span class="token punctuation">.</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>pred_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把这些点画出来</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Linear Regression'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Linear Regression'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Sample Points'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> pred_y<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Regression Line'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="评估训练结果的误差"><a href="#评估训练结果的误差" class="headerlink" title="评估训练结果的误差"></a>评估训练结果的误差</h4><p>线性回归模型训练完毕后，可以利用测试集评估训练结果误差。sklearn.metrics 提供了计算模型误差的几个常用算法：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token comment" spellcheck="true"># 平均绝对值误差:  1/m*∑|实际输出-预测输出|</span>sm<span class="token punctuation">.</span>mean_absolute_error<span class="token punctuation">(</span>y， pred_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 平均平方误差:  sqrt(1/m*∑(实际输出-预测输出)^2)</span>sm<span class="token punctuation">.</span>mean_squared_error<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 中位数绝对值误差: median(|实际输出-预测输出|)</span>sm<span class="token punctuation">.</span>median_absolute_error<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># R2得分 (0, 1]区间上的分值，分数越高，模型越好, 误差越小</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 输出误差指标</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>mean_absolute_error<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>mean_squared_error<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>median_absolute_error<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="模型的保存与加载"><a href="#模型的保存与加载" class="headerlink" title="模型的保存与加载"></a>模型的保存与加载</h4><p>模型训练是一个耗时的过程，一个优秀的机器学习模型是很宝贵的。可以把模型保存到磁盘中，也可以在需要的时候从磁盘中重新加载模型。不需要重新训练。</p><p>模型保存和加载相关的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> picklepickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>内存对象<span class="token punctuation">,</span> 磁盘文件<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 保存模型</span>model <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span>磁盘文件<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 加载模型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：把训练好的模型保存到磁盘中，在合适的时间读取模型对象。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 保存模型</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'../ml_data/linear.pkl'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    pickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>model<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 加载模型</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'../ml_data/linear.pkl'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    model <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>pred_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="岭回归"><a href="#岭回归" class="headerlink" title="岭回归"></a>岭回归</h3><p>普通线性回归模型使用基于梯度下降的最小二乘法，在损失函数最小化的前提下，寻找最优的模型参数。在此过程中，包括<strong>少数异常样本</strong>在内的全部训练数据会对模型参数造成相当程度的一些影响，而异常样本无法在训练过程中被识别出来。为此，岭回归在模型迭代过程中增加了<strong>正则项</strong>，以限制模型参数对异常样本的匹配程度。进而提高模型对多数正常样本的拟合精度。</p><p>岭回归相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lm<span class="token comment" spellcheck="true"># 正则强度: 该数字越大，越忽略异常样本</span><span class="token comment" spellcheck="true"># fit_intercept: 是否训练截距 </span><span class="token comment" spellcheck="true"># max_iter: 最大迭代次数</span>m <span class="token operator">=</span> lm<span class="token punctuation">.</span>Ridge<span class="token punctuation">(</span>正则强度<span class="token punctuation">,</span> fit_intercept<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> max_iter<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 训练模型</span>m<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>输入， 输出<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用模型</span>pred_y <span class="token operator">=</span> m<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：加载abnormal.txt </p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用岭回归</span>model <span class="token operator">=</span> lm<span class="token punctuation">.</span>Ridge<span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> fit_intercept<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                 max_iter<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>pred_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> pred_y<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'limegreen'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Ridge Regression'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多项式回归"><a href="#多项式回归" class="headerlink" title="多项式回归"></a>多项式回归</h3><p>若希望回归模型更好的拟合训练样本的数据，可以用多项式回归器。</p><p><strong>一元多项式回归</strong><br>$$<br>y = w_0  + w_1x + w_2x^2 + w_3x^3 + … + w_dx^d<br>$$<br>将高次项看做对1次项的扩展:<br>$$<br>y = w_0  + w_1x_1 + w_2x_2 + w_3x_3 + … + w_dx_d<br>$$<br>那么一元多项式回归即可以看做为多元线性回归。可以直接使用LinearRegression模型对样本数据进行模型训练。</p><p>所以一元多项式回归的实现需要两个步骤：</p><ol><li>将一元多项式回归问题转换为多元线性回归问题（只需给出高次数）</li><li>将1步骤得到的多项式结果中w<sub>1</sub> w<sub>2</sub> .. 当做样本特征，交给线性回归器训练多元线性模型。</li></ol><p>使用sklearn提供的<strong>数据管线</strong>实现两个步骤的顺序执行：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>pipeline <span class="token keyword">as</span> pl<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lm<span class="token comment" spellcheck="true"># 该管线将会组织两个步骤，首先使用多项式特征扩展器扩展出多项式，</span><span class="token comment" spellcheck="true"># 而后把数据交给线性回归器训练多元线性模型。</span>model <span class="token operator">=</span> pl<span class="token punctuation">.</span>make_pipeline<span class="token punctuation">(</span>    sp<span class="token punctuation">.</span>PolynomialFeatures<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 多项式特征扩展器</span>    lm<span class="token punctuation">.</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># 线性回归器    </span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo06_poly.py 多项式回归 single.txt"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lm<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>pipeline <span class="token keyword">as</span> pl<span class="token comment" spellcheck="true"># 读取数据</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span>    <span class="token string">'../ml_data/single.txt'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span>    usecols<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  unpack<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>x <span class="token operator">=</span> x<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># x变为n行1列</span><span class="token comment" spellcheck="true"># 创建管线</span>model <span class="token operator">=</span> pl<span class="token punctuation">.</span>make_pipeline<span class="token punctuation">(</span>    sp<span class="token punctuation">.</span>PolynomialFeatures<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 多项式特征扩展</span>    lm<span class="token punctuation">.</span>LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 线性回归器</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>pred_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>y<span class="token punctuation">,</span> pred_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把这些点画出来</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Linear Regression'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Linear Regression'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Sample Points'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制多项式曲线</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>x<span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>x <span class="token operator">=</span> x<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span>        linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'PolyFit Line'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>过于简单的模型，无论对于训练数据还是测试数据都无法给出足够高的预测精度，这种现象叫做欠拟合。</p><p>过于复杂的模型，对于训练数据可以得到较高的预测精度，但是对于预测数据通常精度较低。这种现象叫做过拟合。</p><p>一个性能可以接收的学习模型，应该对训练数据和测试数据都有接近的预测精度，而且精度不能太低。</p><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><p><strong>基本算法原理</strong></p><p>核心思想：相似的输入必会产生相似的输出。比如预测薪资：</p><p>年龄：1-青年， 2-中年， 3 -老年</p><p>学历：1-本科， 2-硕士，3-博士</p><p>经验：1-出道，2-一般，3-老手， 4-骨灰</p><p>性别：1-男性，2-女性</p><table><thead><tr><th>年龄</th><th>学历</th><th>工作经验</th><th>性别</th><th>==&gt;</th><th>薪资</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>==&gt;</td><td>6000</td></tr><tr><td>2</td><td>1</td><td>3</td><td>1</td><td>==&gt;</td><td>10000</td></tr><tr><td>3</td><td>3</td><td>4</td><td>1</td><td>==&gt;</td><td>50000</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr><tr><td>1</td><td>2</td><td>2</td><td>1</td><td>==&gt;</td><td>?</td></tr></tbody></table><p>为了提高搜索效率，使用树形数据结构处理样本数据：<br>$$<br>年龄1\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>\quad\quad<br>年龄2\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>\quad\quad<br>年龄3\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>$$<br>首先从训练样本矩阵中选择第一个特征正进行子表划分，使每个子表中该特征的值全部相同。然后在每个子表中选择下一个特征按照同样的规则继续划分更小的子表，不断重复，直到所有的特征全部使用完为止。</p><p>此时便得到了叶级子表，其中所有样本的特征值全部相同。对于待预测样本，根据其每一个特征的值，选择对应的子表，逐一匹配，直到找到域值完全匹配的叶级子表，利用该子表中样本的输出，通过平均（回归问题）或投票（分类问题）为待预测样本提供预测输出。</p><p>随着子表的划分，信息熵（信息的混乱度）将会越来越小，信息越来越纯，数据越来越精准。</p><p>决策树回归器模型相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token comment" spellcheck="true"># 创建决策树回归器模型</span><span class="token comment" spellcheck="true"># max_depth: 树的最大深度</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 训练模型</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用模型</span>pred_y<span class="token operator">=</span>model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：预测波士顿地区房屋价格。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo07_dt.py 决策树预测房屋价格"""</span><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">as</span> sd<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>utils <span class="token keyword">as</span> su<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> smboston <span class="token operator">=</span> sd<span class="token punctuation">.</span>load_boston<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>data<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 数据量</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>target<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>feature_names<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 13个特征名</span><span class="token comment" spellcheck="true"># 打乱原始输入、输出数据集</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>    boston<span class="token punctuation">.</span>data<span class="token punctuation">,</span> boston<span class="token punctuation">.</span>target<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 划分测试集、训练集</span>train_size <span class="token operator">=</span> int<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> \    x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 创建模型， 使用训练集数据进行训练</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 测试集数据预测</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出R2得分</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="集合算法"><a href="#集合算法" class="headerlink" title="集合算法"></a>集合算法</h4><p>根据多个不同模型给出的预测结果，利用平均（回归问题）或者投票（分类问题）的方法，得出最终预测的结果。</p><p>基于决策树的集合算法，就是按照某种规则构建多颗彼此不同的决策树模型，分别给出针对未知样本的预测结果，最后通过平均或投票的方式得到相对综合的结论。</p><p><strong>正向激励</strong></p><p>首先为样本矩阵中的每行样本随机分配初始权重，由此构建一棵带有权重的决策树。在使用该决策树提供预测输出时，通过加权平均或加权投票的方式产生预测值。将训练样本代入模型，预测输出，对那些预测失败的样本，提高其权重，由此形成第二棵树。重复以上过程，构建出不同权重的n棵树。</p><p>正向激励相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token comment" spellcheck="true"># 普通决策树模型</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用正向激励集合算法构建400棵树</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>    model<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 基础模型</span>    n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 决策树的数量</span>    random_state<span class="token operator">=</span><span class="token number">7</span>    <span class="token comment" spellcheck="true"># 随机种子</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><h1 id="机器学习DAY03"><a href="#机器学习DAY03" class="headerlink" title="机器学习DAY03"></a>机器学习DAY03</h1><h2 id="机器学习-1"><a href="#机器学习-1" class="headerlink" title="机器学习"></a>机器学习</h2><h4 id="集合算法-1"><a href="#集合算法-1" class="headerlink" title="集合算法"></a>集合算法</h4><p>根据多个不同模型给出的预测结果，利用平均（回归问题）或者投票（分类问题）的方法，得出最终预测的结果。</p><p>基于决策树的集合算法，就是按照某种规则构建多颗彼此不同的决策树模型，分别给出针对未知样本的预测结果，最后通过平均或投票的方式得到相对综合的结论。</p><h5 id="正向激励"><a href="#正向激励" class="headerlink" title="正向激励"></a>正向激励</h5><p>首先为样本矩阵中的每行样本随机分配初始权重，由此构建一棵带有权重的决策树。在使用该决策树提供预测输出时，通过加权平均或加权投票的方式产生预测值。将训练样本代入模型，预测输出，对那些预测失败的样本，提高其权重，由此形成第二棵树。重复以上过程，构建出不同权重的n棵树。</p><p>正向激励相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token comment" spellcheck="true"># 普通决策树模型</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用正向激励集合算法构建400棵树</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>    model<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 基础模型</span>    n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 决策树的数量</span>    random_state<span class="token operator">=</span><span class="token number">7</span>    <span class="token comment" spellcheck="true"># 随机种子</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>特征重要性</strong></p><p>作为决策树模型训练过程的副产品，根据每个特征划分子表前后的信息熵减少量就标志了该特征的重要程度，此即为该特征的特征重要性指标。通过模型训练得到的model对象提供了属性：feature_importances_来存储每个特征的特征重要性指标值。</p><p>获取特征重要性相关API:</p><pre class="line-numbers language-python"><code class="language-python">model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>fi <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo01_fi.py 特征重要性"""</span><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">as</span> sd<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>utils <span class="token keyword">as</span> su<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lm<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npboston <span class="token operator">=</span> sd<span class="token punctuation">.</span>load_boston<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>data<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 数据量</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>target<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>feature_names<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 13个特征名</span><span class="token comment" spellcheck="true"># 打乱原始输入、输出数据集</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>    boston<span class="token punctuation">.</span>data<span class="token punctuation">,</span> boston<span class="token punctuation">.</span>target<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 划分测试集、训练集</span>train_size <span class="token operator">=</span> int<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> \    x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 创建模型， 使用训练集数据进行训练</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 测试集数据预测</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出R2得分</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 单颗决策树模型，输出特征重要性</span>fi <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_<span class="token comment" spellcheck="true"># 把特征重要性绘制成柱状图</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Feature Importance'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Decision Tree'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>indices <span class="token operator">=</span> fi<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'DT'</span><span class="token punctuation">,</span>       facecolor<span class="token operator">=</span><span class="token string">'deepskyblue'</span><span class="token punctuation">,</span>       edgecolor<span class="token operator">=</span><span class="token string">'steelblue'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> boston<span class="token punctuation">.</span>feature_names<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 正向激励</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>    model<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 基础模型</span>    n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 决策树的数量</span>    random_state<span class="token operator">=</span><span class="token number">7</span>  <span class="token comment" spellcheck="true"># 随机种子</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出R2得分</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于决策树的正向激励，输出特征重要性</span>fi2 <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_<span class="token comment" spellcheck="true"># 把特征重要性绘制成柱状图</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'AdaBoostRegressor'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">)</span>indices <span class="token operator">=</span> fi2<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi2<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'AB'</span><span class="token punctuation">,</span>       facecolor<span class="token operator">=</span><span class="token string">'deepskyblue'</span><span class="token punctuation">,</span>       edgecolor<span class="token operator">=</span><span class="token string">'steelblue'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> boston<span class="token punctuation">.</span>feature_names<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="自助聚合"><a href="#自助聚合" class="headerlink" title="自助聚合"></a>自助聚合</h5><p>每次从总样本矩阵中以有放回抽样的方式随机抽取部分样本构建决策树，这样形成多颗包含不同训练样本的决策树。以削弱某些强势样本对模型预测结果的影响，提高模型的普适性。</p><h5 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h5><p>在自主聚合的基础上，每次构建决策树模型时，不仅随机选择部分样本，而且还随机选择部分特征，这样的集合算法，不仅规避了强势样本对预测结果的影响，而且也削弱了强制特征的影响，使模型的预测能力更加泛化。</p><p>随机森林相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token comment" spellcheck="true"># 随机森林回归器</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">#  数的最大深度</span>    n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">#  决策树的数量</span>    min_samples_split<span class="token operator">=</span><span class="token number">2</span>    <span class="token comment" spellcheck="true">#  子表中最小样本数，小于该值，不再拆分</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：分析共享单车的需求，从而判断如何进行共享单车的投放。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo02_bike.py 共享单车分析"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>utils <span class="token keyword">as</span> su<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpdata <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/bike_day.csv'</span><span class="token punctuation">,</span>                  unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取表头字符序列</span>day_headers <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 整理输入输出集</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float<span class="token punctuation">)</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>train_size <span class="token operator">=</span> int<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span>  \    x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 随机森林回归器</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>    min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span>fi <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_indices <span class="token operator">=</span> fi<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>day_headers<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 以小时为单位</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/bike_hour.csv'</span><span class="token punctuation">,</span>                  unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取表头字符序列</span>hour_headers <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 整理输入输出集</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float<span class="token punctuation">)</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>train_size <span class="token operator">=</span> int<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span>  \    x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 随机森林回归器</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>    min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span>fi <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_indices <span class="token operator">=</span> fi<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>hour_headers<span class="token punctuation">[</span>indices<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="人工分类-简单分类"><a href="#人工分类-简单分类" class="headerlink" title="人工分类(简单分类)"></a>人工分类(简单分类)</h3><table><thead><tr><th style="text-align:center">特征1</th><th style="text-align:center">特征2</th><th style="text-align:center">输出</th></tr></thead><tbody><tr><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">5</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">8</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">4</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">2</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">5</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">7</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">-1</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td><td style="text-align:center">…</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">8</td><td style="text-align:center">?</td></tr></tbody></table><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpx <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制类别边界线</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>b<span class="token punctuation">,</span> t <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>n <span class="token operator">=</span> <span class="token number">500</span>grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>b<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>grid_z <span class="token operator">=</span> np<span class="token punctuation">.</span>piecewise<span class="token punctuation">(</span>    grid_x<span class="token punctuation">,</span>    <span class="token punctuation">[</span>grid_x <span class="token operator">&lt;</span> grid_y<span class="token punctuation">,</span> grid_x <span class="token operator">>=</span> grid_y<span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用matplotlib绘制这些点，以及点的类别</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Simple Classification'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Simple Classification'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Feture1'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Feture2'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为网格点坐标矩阵填充颜色</span>mp<span class="token punctuation">.</span>pcolormesh<span class="token punctuation">(</span>grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">,</span> grid_z<span class="token punctuation">,</span>              cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>y<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="逻辑分类"><a href="#逻辑分类" class="headerlink" title="逻辑分类"></a>逻辑分类</h3><p>通过输入的样本数据，基于多元线性回归模型求出线性预测方程。</p><p>y = w<sub>0</sub> + w<sub>1</sub>x<sub>1</sub> + w<sub>2</sub>x<sub>2</sub></p><pre><code>x1    x2     y7     13     0.82342342312    4      0.224234234  ......</code></pre><p>但通过线性回归方程返回的是连续值，不可以直接用于分类业务模型，所以急需一种方式使得把连续的预测值-&gt;离散的预测值。[-∞, +∞] -&gt; (0, 1)<br>$$<br>逻辑函数：y=\frac{1}{1+e^{-x}}<br>$$<br>该逻辑函数当x&gt;0，y&gt;0.5; 当x&lt;0, y&lt;0.5； 可以把样本数据经过线性预测模型求得的值代入逻辑函数的x，即将预测函数的输出看做被划分成为1类别的概率，则概率大的类别作为预测结果，就可以根据函数值确定两个分类。这也是线性函数非线性化的一种方式。</p><p>逻辑分类相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lm<span class="token comment" spellcheck="true"># 创建逻辑分类模型</span><span class="token comment" spellcheck="true"># solver：liblinear指的是逻辑分类底层使用线性回归模型</span>m <span class="token operator">=</span> lm<span class="token punctuation">.</span>LogisticRegression<span class="token punctuation">(</span>solver<span class="token operator">=</span><span class="token string">'liblinear'</span><span class="token punctuation">,</span> C<span class="token operator">=</span>正则强度<span class="token punctuation">)</span>m<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>训练输入，训练输出<span class="token punctuation">)</span>m<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>测试输入<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lmx <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制类别边界线</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>b<span class="token punctuation">,</span> t <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>n <span class="token operator">=</span> <span class="token number">500</span>grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>b<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 构建逻辑分类器</span>model <span class="token operator">=</span> lm<span class="token punctuation">.</span>LogisticRegression<span class="token punctuation">(</span>    solver<span class="token operator">=</span><span class="token string">'liblinear'</span><span class="token punctuation">,</span> C<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>samples <span class="token operator">=</span> np<span class="token punctuation">.</span>column_stack<span class="token punctuation">(</span><span class="token punctuation">(</span>    grid_x<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> grid_y<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>grid_z <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>samples<span class="token punctuation">)</span>grid_z <span class="token operator">=</span> grid_z<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用matplotlib绘制这些点，以及点的类别</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Simple Classification'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Simple Classification'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Feture1'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Feture2'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为网格点坐标矩阵填充颜色</span>mp<span class="token punctuation">.</span>pcolormesh<span class="token punctuation">(</span>grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">,</span> grid_z<span class="token punctuation">,</span>              cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>y<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>多元分类</strong></p><p>通过多个二元分类器解决多元分类的问题。</p><p>若拿到一组新的样本，可以基于二元逻辑分类器，训练出一个模型，判断属于A类别的概率。在使用同样的方法训练出两个模型，分别判断属于B、C类别的概率，最终选择概率最高的类别作为这组样本的分类结果。</p><p>案例：基于逻辑分类模型的多元分类。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">as</span> lmx <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">3.5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">3.1</span><span class="token punctuation">,</span> <span class="token number">6.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">1.9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">5.7</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">5.4</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制类别边界线</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>b<span class="token punctuation">,</span> t <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>n <span class="token operator">=</span> <span class="token number">500</span>grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>b<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 构建逻辑分类器</span>model <span class="token operator">=</span> lm<span class="token punctuation">.</span>LogisticRegression<span class="token punctuation">(</span>    solver<span class="token operator">=</span><span class="token string">'liblinear'</span><span class="token punctuation">,</span> C<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>samples <span class="token operator">=</span> np<span class="token punctuation">.</span>column_stack<span class="token punctuation">(</span><span class="token punctuation">(</span>    grid_x<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> grid_y<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>grid_z <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>samples<span class="token punctuation">)</span>grid_z <span class="token operator">=</span> grid_z<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用matplotlib绘制这些点，以及点的类别</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Logistic Classification'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Logistic Classification'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Feture1'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Feture2'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为网格点坐标矩阵填充颜色</span>mp<span class="token punctuation">.</span>pcolormesh<span class="token punctuation">(</span>grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">,</span> grid_z<span class="token punctuation">,</span>              cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>y<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="朴素贝叶斯分类"><a href="#朴素贝叶斯分类" class="headerlink" title="朴素贝叶斯分类"></a>朴素贝叶斯分类</h3><p>朴素贝叶斯分类是一种依据统计概率理论而实现的一种分类方式。</p><table><thead><tr><th style="text-align:center">天气情况</th><th style="text-align:center">穿衣风格</th><th style="text-align:center">约女朋友</th><th style="text-align:center">==&gt;</th><th style="text-align:center">心情</th></tr></thead><tbody><tr><td style="text-align:center">0（晴天）</td><td style="text-align:center">0（休闲）</td><td style="text-align:center">0（约了）</td><td style="text-align:center">==&gt;</td><td style="text-align:center">0（高兴）</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">1（风骚）</td><td style="text-align:center">1（没约）</td><td style="text-align:center">==&gt;</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">1（多云）</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">==&gt;</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">2（破旧）</td><td style="text-align:center">1</td><td style="text-align:center">==&gt;</td><td style="text-align:center">1（郁闷）</td></tr><tr><td style="text-align:center">2（下雨）</td><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">==&gt;</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td><td style="text-align:center">…</td><td style="text-align:center">==&gt;</td><td style="text-align:center">…</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">==&gt;</td><td style="text-align:center">？</td></tr></tbody></table><p><strong>贝叶斯定理：</strong> </p><p><strong>P(A|B) = P(A) P(B|A) / P(B)</strong>   &lt;=  <strong>P(A, B) = P(A)P(B|A) = P(B) P(A|B)</strong></p><p>例如：假设一个学校里有60%男生和40%女生，女生穿裤子的人数和穿裙子的人数相等，所有男生都穿裤子，一个人在远处随机看到了一个穿裤子的学生，那么这个学生是女生的概率是多少？</p><pre><code>P(女) = 0.4P(裤子|女) = 0.5P(裤子) = 0.6+0.2 = 0.8P(女生|裤子)= 0.4*0.5/0.8 = 0.25</code></pre><p>由此可得，统计总样本空间中晴天、休闲、没约并且高兴的概率，然后在求总样本空间中晴天、休闲、没约并且郁闷的概率，取其大者作为分类结果。</p><pre><code>P(晴天，休闲，没约，高兴)=P(晴天|休闲，没约，高兴) P(休闲，没约，高兴)=P(晴天|休闲，没约，高兴) P(休闲|没约，高兴) P(没约，高兴)=P(晴天|休闲，没约，高兴) P(休闲|没约，高兴) P(没约|高兴)P(高兴)（朴素:条件独立，特征值中间没有因果关系）=P(晴天|高兴) P(休闲|高兴) P(没约|高兴)P(高兴)</code></pre><p>朴素贝叶斯分类器相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>naive_bayes <span class="token keyword">as</span> nb<span class="token comment" spellcheck="true"># 创建符合高斯分布的朴素贝叶斯分类器</span>model <span class="token operator">=</span> nb<span class="token punctuation">.</span>GaussianNB<span class="token punctuation">(</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>result <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：multiple1.txt</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>naive_bayes <span class="token keyword">as</span> nb<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpdata <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/multiple1.txt'</span><span class="token punctuation">,</span>                  unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>float<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 构建高斯朴素贝叶斯分类器</span>model <span class="token operator">=</span> nb<span class="token punctuation">.</span>GaussianNB<span class="token punctuation">(</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>b<span class="token punctuation">,</span> t <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>n <span class="token operator">=</span> <span class="token number">500</span>grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>b<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>samples <span class="token operator">=</span> np<span class="token punctuation">.</span>column_stack<span class="token punctuation">(</span>    <span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> grid_y<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>grid_z <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>samples<span class="token punctuation">)</span>grid_z <span class="token operator">=</span> grid_z<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Naive Bayes Classification'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Naive Bayes Classification'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>pcolormesh<span class="token punctuation">(</span>grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">,</span> grid_z<span class="token punctuation">,</span>              cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>y<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="数据集的划分"><a href="#数据集的划分" class="headerlink" title="数据集的划分"></a>数据集的划分</h4><p>对于分类问题，训练集和测试集的划分不应该用整个样本空间的特定百分比作为训练数据，而应该在其每一个类别的样本中抽取特定百分比作为训练数据。</p><p>sklearn提供了数据集划分相关方法，可以方便的划分训练集与测试数据，相关API如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token comment" spellcheck="true"># train_test_split自动划分测试集与训练街</span>训练输入，测试输入，训练输出，测试输出 <span class="token operator">=</span> ms<span class="token punctuation">.</span>train_test_split<span class="token punctuation">(</span>    输入集，输出集，    test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 测试集占比</span>    random_state<span class="token operator">=</span><span class="token number">7</span>    <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 划分训练集与测试集</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    ms<span class="token punctuation">.</span>train_test_split<span class="token punctuation">(</span>        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 让模型预测测试集结果</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 输出精准度：预测正确的个数/总预测个数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>test_y <span class="token operator">==</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> pred_test_y<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制测试集图形</span>mp<span class="token punctuation">.</span>pcolormesh<span class="token punctuation">(</span>grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">,</span> grid_z<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>test_x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> test_x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>test_y<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="交叉验证"><a href="#交叉验证" class="headerlink" title="交叉验证"></a>交叉验证</h4><p>由于数据集的划分有不确定性，若随机划分的样本正好处于某类特殊样本，那么得到的训练模型所预测的结果可信度将会受到质疑。所以需要进行多次交叉验证。把样本空间中所有的样本均分成n分，使用不同的训练集训练模型，对不同的测试集进行测试，输出指标得分。</p><p>sklearn提供了交叉验证相关API:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token comment" spellcheck="true"># 交叉验证</span>指标值数组 <span class="token operator">=</span> ms<span class="token punctuation">.</span>cross_val_score<span class="token punctuation">(</span>    模型，            <span class="token comment" spellcheck="true"># 原始模型</span>    输入集，输出集，     cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>           <span class="token comment" spellcheck="true"># 折叠数 （做5次交叉验证）</span>    scoring<span class="token operator">=</span>指标名 <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>交叉验证指标</strong></p><ol><li>精确度（accuracy）： 分类正确的样本数/总样本数</li><li>查准率（precision_weighted）：针对每一个类别，预测正确的样本数/预测出来的样本数。</li><li>召回率（recall_weighted）：针对每一个类别，预测正确的样本数/实际存在的样本数。</li><li>f1得分（f1_weighted）: 2 x 查准率 x 召回率/(查准率+召回率)</li></ol><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 构建高斯朴素贝叶斯分类器</span>model <span class="token operator">=</span> nb<span class="token punctuation">.</span>GaussianNB<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 先做交叉验证，看一下f1得分</span>ac <span class="token operator">=</span> ms<span class="token punctuation">.</span>cross_val_score<span class="token punctuation">(</span>    model<span class="token punctuation">,</span> train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>    scoring<span class="token operator">=</span><span class="token string">'accuracy'</span><span class="token punctuation">)</span>pw <span class="token operator">=</span> ms<span class="token punctuation">.</span>cross_val_score<span class="token punctuation">(</span>    model<span class="token punctuation">,</span> train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>    scoring<span class="token operator">=</span><span class="token string">'precision_weighted'</span><span class="token punctuation">)</span>rw <span class="token operator">=</span> ms<span class="token punctuation">.</span>cross_val_score<span class="token punctuation">(</span>    model<span class="token punctuation">,</span> train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>    scoring<span class="token operator">=</span><span class="token string">'recall_weighted'</span><span class="token punctuation">)</span>f1 <span class="token operator">=</span> ms<span class="token punctuation">.</span>cross_val_score<span class="token punctuation">(</span>    model<span class="token punctuation">,</span> train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>    scoring<span class="token operator">=</span><span class="token string">'f1_weighted'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ac<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pw<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rw<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> f1<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a>混淆矩阵</h4><p>sklearn提供了混淆矩阵清晰的显示出每一类别的查准率、召回率等验证结果。每一行和每一列分别对应样本输出中的每一个类别，行表示实际类别，列表示预测类别。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A类别</th><th style="text-align:center">B类别</th><th style="text-align:center">C类别</th></tr></thead><tbody><tr><td style="text-align:center">A类别</td><td style="text-align:center">5</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">B类别</td><td style="text-align:center">0</td><td style="text-align:center">6</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">C类别</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">7</td></tr></tbody></table><p>上述矩阵为理想的混淆矩阵。不理想的如下：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A类别</th><th style="text-align:center">B类别</th><th style="text-align:center">C类别</th></tr></thead><tbody><tr><td style="text-align:center">A类别</td><td style="text-align:center">3</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">B类别</td><td style="text-align:center">0</td><td style="text-align:center">4</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">C类别</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">7</td></tr></tbody></table><p>获取模型分类结果的混淆矩阵相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> smm <span class="token operator">=</span> sm<span class="token punctuation">.</span>confusion_matrix<span class="token punctuation">(</span>实际输出<span class="token punctuation">,</span> 预测输出<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 输出预测结果的混淆矩阵</span>m <span class="token operator">=</span> sm<span class="token punctuation">.</span>confusion_matrix<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>m<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="机器学习DAY04"><a href="#机器学习DAY04" class="headerlink" title="机器学习DAY04"></a>机器学习DAY04</h1><h3 id="朴素贝叶斯分类-1"><a href="#朴素贝叶斯分类-1" class="headerlink" title="朴素贝叶斯分类"></a>朴素贝叶斯分类</h3><h4 id="分类报告"><a href="#分类报告" class="headerlink" title="分类报告"></a>分类报告</h4><p>sklearn.metrics提供了分类报告相关API，不仅可以得到混淆矩阵，还可以得到交叉验证的查准率、召回率、f1得分的结果。这样可以方便的分析出哪些样本是异常样本。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token comment" spellcheck="true"># 获取分类报告</span>cr <span class="token operator">=</span> sm<span class="token punctuation">.</span>classification_report<span class="token punctuation">(</span>实际输出<span class="token punctuation">,</span> 预测输出<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="决策树分类"><a href="#决策树分类" class="headerlink" title="决策树分类"></a>决策树分类</h3><p>决策树分类模型会找到与样本特征匹配的叶子节点，然后以投票的方式进行分类。</p><p>案例：基于决策树分类算法，训练模型，预测小汽车（car.txt）等级。需要注意的是每一个特征都需要使用标签编码做预处理。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""汽车评估 案例"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token comment" spellcheck="true"># 读取文本数据，对特征进行标签编码，</span><span class="token comment" spellcheck="true"># 基于随机森林进行模型训练，完成交叉验证。</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/car.txt'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U10'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>Tencoders <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>train_x<span class="token punctuation">,</span> train_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    encoder <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> row <span class="token operator">&lt;</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        train_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>            encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        train_y <span class="token operator">=</span> encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span>    encoders<span class="token punctuation">.</span>append<span class="token punctuation">(</span>encoder<span class="token punctuation">)</span>train_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>train_x<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token comment" spellcheck="true"># 基于随机森林分类器完成模型训练</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestClassifier<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span>    random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ms<span class="token punctuation">.</span>cross_val_score<span class="token punctuation">(</span>    model<span class="token punctuation">,</span> train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    scoring<span class="token operator">=</span><span class="token string">'f1_weighted'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 造一些测试数据，进行测试。</span>data <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'5more'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'big'</span><span class="token punctuation">,</span> <span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'unacc'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'acc'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'small'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'good'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'vgood'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 对测试数据进行相同的标签编码，</span><span class="token comment" spellcheck="true"># 才可以使用训练好的模型</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>Ttest_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    encoder <span class="token operator">=</span> encoders<span class="token punctuation">[</span>row<span class="token punctuation">]</span>    <span class="token keyword">if</span> row <span class="token operator">&lt;</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        test_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>            encoder<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        test_y <span class="token operator">=</span> encoder<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>            data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span>test_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token comment" spellcheck="true"># 使用模型开始预测</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span>e <span class="token operator">=</span> encoders<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 针对最后一列的标签编码器</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="验证曲线"><a href="#验证曲线" class="headerlink" title="验证曲线"></a>验证曲线</h4><p>验证曲线 :  模型性能 = f(超参数)</p><p>验证曲线是超参数优选的一种解决方案，通过验证曲线相关API，可以得到相同模型在不同超参数下的模型性能得分，从而得知最优超参数。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> mstrain_scores<span class="token punctuation">,</span> test_scores <span class="token operator">=</span> ms<span class="token punctuation">.</span>validation_curve<span class="token punctuation">(</span>    model<span class="token punctuation">,</span>             <span class="token comment" spellcheck="true"># 初始模型</span>    输入集<span class="token punctuation">,</span> 输出集<span class="token punctuation">,</span>    <span class="token string">'n_estimators'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 超参数名</span>    np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 超参数取值列表</span>    cv<span class="token operator">=</span><span class="token number">5</span>    <span class="token comment" spellcheck="true"># 折叠数</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>train_scores的结构：</p><table><thead><tr><th>超参数</th><th>CV1</th><th>CV2</th><th>CV3</th><th>CV4</th><th>CV5</th></tr></thead><tbody><tr><td>50</td><td>0.973</td><td>0.894</td><td>0.944</td><td>0.924</td><td>0.914</td></tr><tr><td>100</td><td>0.914</td><td>0.924</td><td>0.934</td><td>0.954</td><td>0.934</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>test_scores的结构与上述结构一致。</p><p>案例：小汽车案例中使用验证曲线选择超参数。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""汽车评估 案例  验证曲线选择超参数"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token comment" spellcheck="true"># 读取文本数据，对特征进行标签编码，</span><span class="token comment" spellcheck="true"># 基于随机森林进行模型训练，完成交叉验证。</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/car.txt'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U10'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>Tencoders <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>train_x<span class="token punctuation">,</span> train_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    encoder <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> row <span class="token operator">&lt;</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        train_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>            encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        train_y <span class="token operator">=</span> encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span>    encoders<span class="token punctuation">.</span>append<span class="token punctuation">(</span>encoder<span class="token punctuation">)</span>train_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>train_x<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token triple-quoted-string string">'''# 基于随机森林分类器完成模型训练model = se.RandomForestClassifier(    max_depth=6, random_state=7)# 获取关于n_estimators的验证曲线n_estimators = np.arange(50, 550, 50)train_scores, test_scores = \    ms.validation_curve(        model, train_x, train_y,        'n_estimators', n_estimators, cv=5)# 每个超参数取值对应的得分train_means = train_scores.mean(axis=1)for p, s in zip(n_estimators, train_means):    print(p, '->', s)mp.figure('N_estimators', facecolor='lightgray')mp.title('N_estimators', fontsize=16)mp.xlabel('Estimators', fontsize=14)mp.ylabel('Scores', fontsize=14)mp.tick_params(labelsize=12)mp.grid(linestyle=":")mp.plot(n_estimators, train_means,        c='dodgerblue', label='Valid Curve')mp.legend()mp.show()# 基于随机森林分类器完成模型训练model = se.RandomForestClassifier(    n_estimators=200, random_state=7)# 获取关于max_depth的验证曲线max_depths = np.arange(1, 11)train_scores, test_scores = \    ms.validation_curve(        model, train_x, train_y,        'max_depth', max_depths, cv=5)# 每个超参数取值对应的得分train_means = train_scores.mean(axis=1)for p, s in zip(max_depths, train_means):    print(p, '->', s)mp.figure('Max_depth', facecolor='lightgray')mp.title('Max_depth', fontsize=16)mp.xlabel('Max_depths', fontsize=14)mp.ylabel('Scores', fontsize=14)mp.tick_params(labelsize=12)mp.grid(linestyle=":")mp.plot(max_depths, train_means,        c='dodgerblue', label='Valid Curve')mp.legend()mp.show()'''</span><span class="token comment" spellcheck="true"># 基于随机森林分类器完成模型训练</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestClassifier<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>    n_estimators<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ms<span class="token punctuation">.</span>cross_val_score<span class="token punctuation">(</span>    model<span class="token punctuation">,</span> train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    scoring<span class="token operator">=</span><span class="token string">'f1_weighted'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 造一些测试数据，进行测试。</span>data <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'5more'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'big'</span><span class="token punctuation">,</span> <span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'unacc'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'acc'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'small'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'good'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">,</span> <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span>     <span class="token string">'med'</span><span class="token punctuation">,</span> <span class="token string">'high'</span><span class="token punctuation">,</span> <span class="token string">'vgood'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 对测试数据进行相同的标签编码，</span><span class="token comment" spellcheck="true"># 才可以使用训练好的模型</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>Ttest_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    encoder <span class="token operator">=</span> encoders<span class="token punctuation">[</span>row<span class="token punctuation">]</span>    <span class="token keyword">if</span> row <span class="token operator">&lt;</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        test_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>            encoder<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        test_y <span class="token operator">=</span> encoder<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>            data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span>test_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token comment" spellcheck="true"># 使用模型开始预测</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span>e <span class="token operator">=</span> encoders<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># 针对最后一列的标签编码器</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="学习曲线"><a href="#学习曲线" class="headerlink" title="学习曲线"></a>学习曲线</h4><p>学习曲线： 模型性能=f(训练集大小)</p><p>学习曲线相关API:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token comment" spellcheck="true"># 获取学习曲线</span>_<span class="token punctuation">,</span> train_scores<span class="token punctuation">,</span> test_scores <span class="token operator">=</span> ms<span class="token punctuation">.</span>learning_curve<span class="token punctuation">(</span>    model<span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 初始模型</span>    输入集<span class="token punctuation">,</span> 输出集<span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 训练集的大小</span>    cv<span class="token operator">=</span><span class="token number">5</span>    <span class="token comment" spellcheck="true"># 折叠数</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""汽车评估 案例  学习曲线选择最优训练集大小"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token comment" spellcheck="true"># 读取文本数据，对特征进行标签编码，</span><span class="token comment" spellcheck="true"># 基于随机森林进行模型训练，完成交叉验证。</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/car.txt'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U10'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>Tencoders <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>train_x<span class="token punctuation">,</span> train_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    encoder <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> row <span class="token operator">&lt;</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        train_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>            encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        train_y <span class="token operator">=</span> encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span>    encoders<span class="token punctuation">.</span>append<span class="token punctuation">(</span>encoder<span class="token punctuation">)</span>train_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>train_x<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token comment" spellcheck="true"># 基于随机森林分类器完成模型训练</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestClassifier<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span>    n_estimators<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用学习曲线获取最优训练集大小</span>train_sizes <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>_<span class="token punctuation">,</span> train_scores<span class="token punctuation">,</span> test_scores <span class="token operator">=</span> \    ms<span class="token punctuation">.</span>learning_curve<span class="token punctuation">(</span>model<span class="token punctuation">,</span> train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span>        train_sizes<span class="token operator">=</span>train_sizes<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>train_means <span class="token operator">=</span> train_scores<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">for</span> size<span class="token punctuation">,</span> score <span class="token keyword">in</span> zip<span class="token punctuation">(</span>train_sizes<span class="token punctuation">,</span> train_means<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> <span class="token string">'->'</span><span class="token punctuation">,</span> score<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Learning Curve'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Learning Curve'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Train Size'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Curve Score'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>train_sizes<span class="token punctuation">,</span> train_means<span class="token punctuation">,</span> <span class="token string">'o-'</span><span class="token punctuation">,</span>        c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'Curve'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="支持向量机-SVM"><a href="#支持向量机-SVM" class="headerlink" title="支持向量机(SVM)"></a>支持向量机(SVM)</h3><h4 id="支持向量机原理"><a href="#支持向量机原理" class="headerlink" title="支持向量机原理"></a>支持向量机原理</h4><p><strong>核心理念：寻求最优分类边界</strong></p><p>正确：对大部分样本可以正确的划分类别。</p><p>泛化：最大化支持向量间距。</p><p>公平：类别与支持向量等距。</p><p>简单：线性，直线、平面做类别分割。</p><p><strong>基于核函数的升维变换</strong></p><p>对于难以分类的一些样本，执行基于核函数的升维变换。增加新的特征，使得低维度空间中的线性不可分问题，变成高维度空间中的线性可分问题。</p><p><strong>SVM提供的常用核函数</strong></p><ol><li>线性核函数        linear</li><li>多项式核函数         poly</li><li>径向基核函数         rbf</li></ol><p><strong>线性核函数</strong></p><p>不通过核函数进行维度提升，仅在原始维度空间中寻求线性分类边界。</p><p>基于线性核函数的SVM分类器：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">as</span> svmmodel <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">)</span>mpdel<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：使用线性核函数的SVM训练simple2.txt。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo05_svm_linear.py 线性核函数的SVM"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">as</span> svm<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpx<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/multiple2.txt'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'f8'</span><span class="token punctuation">)</span>x <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>y <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    ms<span class="token punctuation">.</span>train_test_split<span class="token punctuation">(</span>        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于线性核函数的支持向量机模型</span>model <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 预测分类边界</span>n <span class="token operator">=</span> <span class="token number">500</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>b<span class="token punctuation">,</span> t <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>samples <span class="token operator">=</span> np<span class="token punctuation">.</span>column_stack<span class="token punctuation">(</span>    <span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> grid_y<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>grid_z <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>samples<span class="token punctuation">)</span>grid_z <span class="token operator">=</span> grid_z<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用模型预测测试集数据，输出分类报告</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span>cr <span class="token operator">=</span> sm<span class="token punctuation">.</span>classification_report<span class="token punctuation">(</span>    test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cr<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制分类边界</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'SVM Linear Classification'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'SVM Linear Classification'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>pcolormesh<span class="token punctuation">(</span>grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">,</span> grid_z<span class="token punctuation">,</span>              cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>test_x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> test_x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>test_y<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>多项式核函数</strong></p><p>通过多项式函数增加原始样本特征的高次方幂作为新的特征，在新的思考维度中对样本进行分类。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 基于多项式函数扩展新的特征</span>model <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">'poly'</span><span class="token punctuation">,</span> degree<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>径向基核函数</strong></p><p>通过高斯分布函数增加原始样本特征的分布概率。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 基于径向基核函数的支持向量机分类器</span><span class="token comment" spellcheck="true"># C: 正则强度</span><span class="token comment" spellcheck="true"># gamma: 正态分布曲线的标准差</span>model <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">'rbf'</span><span class="token punctuation">,</span> C<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="样本类别均衡化"><a href="#样本类别均衡化" class="headerlink" title="样本类别均衡化"></a>样本类别均衡化</h4><p>通过类别均衡化，使所占比例较小的样本权重较高，而所占比例较大的样本权重较低。以此平均化不同类别样本对分类模型的贡献，提高模型精度。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 添加 class_weight='balanced' 实现样本类别均衡化</span>model <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">'linear'</span><span class="token punctuation">,</span> class_weight<span class="token operator">=</span><span class="token string">'balanced'</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：基于线性核函数对imbalance.txt进行训练</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 基于线性核函数的支持向量机模型</span>model <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">'rbf'</span><span class="token punctuation">,</span> C<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span>                class_weight<span class="token operator">=</span><span class="token string">'balanced'</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="置信概率"><a href="#置信概率" class="headerlink" title="置信概率"></a>置信概率</h4><p>根据样本与分类边界的距离远近，对其预测类别的可信程度进行量化，离边界越近的样本，置信概率越低，反之，离边界越远的样本，置信概率越高。</p><p>获取每个样本的置信概率API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 在获取支持向量机模型时，给出超参数 probability=True</span>m <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> C<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span> probability<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取每个样本的置信概率</span>置信概率矩阵 <span class="token operator">=</span> model<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>置信概率矩阵格式：</p><table><thead><tr><th></th><th>类别1</th><th>类别2</th></tr></thead><tbody><tr><td>样本1</td><td>0.8</td><td>0.2</td></tr><tr><td>样本2</td><td>0.6</td><td>0.4</td></tr></tbody></table><p>案例：修改径向基核函数的SVM案例，新增测试样本，输出置信概率。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 新增测试点   输出置信概率， 绘制图像</span>prob_x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">4.8</span><span class="token punctuation">,</span> <span class="token number">5.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">2.5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">7.6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">5.4</span><span class="token punctuation">,</span> <span class="token number">5.9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pred_prob_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>prob_x<span class="token punctuation">)</span>probs <span class="token operator">=</span> model<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>prob_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>probs<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>prob_x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> prob_x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>pred_prob_y<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet_r'</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 为每个点都加上备注: 1类别概率, 2类别概率</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>probs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    mp<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>        <span class="token string">'{}% {}%'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>            round<span class="token punctuation">(</span>probs<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            round<span class="token punctuation">(</span>probs<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        xy<span class="token operator">=</span><span class="token punctuation">(</span>prob_x<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> prob_x<span class="token punctuation">[</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        textcoords<span class="token operator">=</span><span class="token string">'offset points'</span><span class="token punctuation">,</span>        fontsize<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span>        bbox<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'boxstyle'</span><span class="token punctuation">:</span> <span class="token string">'round,pad=0.6'</span><span class="token punctuation">,</span>              <span class="token string">'fc'</span><span class="token punctuation">:</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'alpha'</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="网格搜索"><a href="#网格搜索" class="headerlink" title="网格搜索"></a>网格搜索</h4><p>获取一个最优超参数的方式可以绘制验证曲线，但是验证曲线只能每次获取一个最优超参数。如果多个超参数有很多排列组合的话，就可以使用网格搜索寻求最优超参数组合。</p><p>在网格搜索过程中，针对每一个超参数组合，实例化给定的模型，做cv次交叉验证，将其中平均f1得分最高的超参数组合作为最佳选择，实例化模型对象。</p><p>网格搜索相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token comment" spellcheck="true"># 返回的是已经使用了最优超参数组合的model对象</span>model <span class="token operator">=</span> ms<span class="token punctuation">.</span>GridSearchCV<span class="token punctuation">(</span>    model<span class="token punctuation">,</span>             <span class="token comment" spellcheck="true"># 原始模型</span>    超参数组合列表<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 使用列表的方式把所有组合列出</span>    cv<span class="token operator">=</span><span class="token number">5</span>             <span class="token comment" spellcheck="true"># 交叉验证折叠数</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取网格搜索过程中的每个参数组合</span>model<span class="token punctuation">.</span>cv_results_<span class="token punctuation">[</span><span class="token string">'params'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 获取王国搜索过程每个参数组合对应的平均测试分</span>model<span class="token punctuation">.</span>cv_results_<span class="token punctuation">[</span><span class="token string">'mean_test_score'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 获取最好的参数</span>model<span class="token punctuation">.</span>best_params_        <span class="token comment" spellcheck="true"># 最优参数</span>model<span class="token punctuation">.</span>best_scores_        <span class="token comment" spellcheck="true"># 最优得分</span>model<span class="token punctuation">.</span>best_estimator_    <span class="token comment" spellcheck="true"># 最优模型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：修改置信概率案例，基于网格搜索寻的最优超参数。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 基于径向基核函数的支持向量机模型</span>model <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVC<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 整理超参数列表，做网格搜索，寻找最优</span>params <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span><span class="token string">'kernel'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'linear'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'C'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span><span class="token string">'kernel'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'poly'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'degree'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span><span class="token string">'kernel'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'rbf'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'gamma'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.001</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span>model <span class="token operator">=</span> ms<span class="token punctuation">.</span>GridSearchCV<span class="token punctuation">(</span>model<span class="token punctuation">,</span> params<span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>best_params_<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>best_score_<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>best_estimator_<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 查看网格搜索过程的细节</span><span class="token keyword">for</span> p<span class="token punctuation">,</span> s <span class="token keyword">in</span> zip<span class="token punctuation">(</span>    model<span class="token punctuation">.</span>cv_results_<span class="token punctuation">[</span><span class="token string">'params'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        model<span class="token punctuation">.</span>cv_results_<span class="token punctuation">[</span><span class="token string">'mean_test_score'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token string">'->'</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="案例：事件预测"><a href="#案例：事件预测" class="headerlink" title="案例：事件预测"></a>案例：事件预测</h3><p>加载event.txt, 预测某个时间段是否会出现特殊事件。</p><pre class="line-numbers language-python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="机器学习DAY05"><a href="#机器学习DAY05" class="headerlink" title="机器学习DAY05"></a>机器学习DAY05</h1><h3 id="案例：事件预测-1"><a href="#案例：事件预测-1" class="headerlink" title="案例：事件预测"></a>案例：事件预测</h3><p>加载event.txt, 预测某个时间段是否会出现特殊事件。</p><pre class="line-numbers language-python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="案例：交通流量预测"><a href="#案例：交通流量预测" class="headerlink" title="案例：交通流量预测"></a>案例：交通流量预测</h3><p>加载traffic.txt，预测某个时间段某个路口的车流量。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo01_traffic.py 车流量预测"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">as</span> ms<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>svm <span class="token keyword">as</span> svm<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token keyword">class</span> <span class="token class-name">DigitEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""自定义数字编码器"""</span>    <span class="token keyword">def</span> <span class="token function">fit_transform</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> y<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>int<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">transform</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> y<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>int<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">inverse_transform</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> y<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>str<span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/traffic.txt'</span><span class="token punctuation">,</span>                  delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>Tencoders<span class="token punctuation">,</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        encoder <span class="token operator">=</span> DigitEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        encoder <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> row <span class="token operator">&lt;</span> len<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>        x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        y <span class="token operator">=</span> encoder<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span>    encoders<span class="token punctuation">.</span>append<span class="token punctuation">(</span>encoder<span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>T<span class="token comment" spellcheck="true"># 划分测试集训练集</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    ms<span class="token punctuation">.</span>train_test_split<span class="token punctuation">(</span>        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用SVM回归器训练模型</span>model <span class="token operator">=</span> svm<span class="token punctuation">.</span>SVR<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">'rbf'</span><span class="token punctuation">,</span> C<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行业务预测</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'Tuesday'</span><span class="token punctuation">,</span> <span class="token string">'13:35'</span><span class="token punctuation">,</span> <span class="token string">'San Francisco'</span><span class="token punctuation">,</span> <span class="token string">'yes'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>Tx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    encoder <span class="token operator">=</span> encoders<span class="token punctuation">[</span>row<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>encoder<span class="token punctuation">)</span>    x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>encoder<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>data<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>Tpred_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pred_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="聚类"><a href="#聚类" class="headerlink" title="聚类"></a>聚类</h3><p>分类（classification）与聚类（cluster）不同，分类是有监督学习模型，聚类属于无监督学习模型。聚类讲究实用一些算法把样本划分为n个群落。一般情况下，这种算法都需要计算<strong>欧式距离</strong>。</p><p><strong>欧几里得距离</strong><br>$$<br>P(x_1) - Q(x_2): |x_1-x_2| = \sqrt{(x_1 - x_2)^2}  \<br>P(x_1, y_1) - Q(x_2, y_2): \sqrt{(x_1 - x_2)^2 + (y_1 - y_2)^2}  \<br>P(x_1, y_1, z_1) - Q(x_2, y_2, z_2): \sqrt{(x_1 - x_2)^2 + (y_1 - y_2)^2 + (z_1 - z_2)^2}  \<br>$$<br>两个样本对应特征值之差的平方和的平方根，即欧式距离，用来表示两个样本的相似性。</p><h4 id="K均值算法"><a href="#K均值算法" class="headerlink" title="K均值算法"></a>K均值算法</h4><p>第一步：随机选择K个样本作为K个聚类中心，计算每个样本到各个聚类中的欧氏距离，将该样本分配到与之最近的聚类中心所在类别中。</p><p>第二步：根据第一步得到的聚类划分，分别计算每个聚类的几何中心，将几何中心作为新的聚类中心，重复第一步，直到计算所得几何中心与聚类中心重合或接近重合为止。</p><p>注意：</p><ol><li>聚类数必须事先已知，借助某些评估指标，优选最好的聚类数量。</li><li>聚类中心的初始选择会影响到最终聚类划分的结果，初始中心尽量选择距离较远的样本。</li></ol><p>K均值相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">as</span> sc<span class="token comment" spellcheck="true"># n_clusters：聚类的类别数量。</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 给出训练样本</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 预测样本的类别</span>c <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取训练结果的聚类中心</span>centers <span class="token operator">=</span> model<span class="token punctuation">.</span>cluster_centers_<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：加载multiple3.txt, 完成KMeans聚类。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo02_kmeans.py  聚类案例"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">as</span> sc<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpx <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/multiple3.txt'</span><span class="token punctuation">,</span>               delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># KMeans聚类模型</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">)</span>pred_c <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span>centers <span class="token operator">=</span> model<span class="token punctuation">.</span>cluster_centers_<span class="token keyword">print</span><span class="token punctuation">(</span>pred_c<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 预测分类边界</span>n <span class="token operator">=</span> <span class="token number">500</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>b<span class="token punctuation">,</span> t <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>grid_x<span class="token punctuation">,</span> grid_y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>b<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>samples <span class="token operator">=</span> np<span class="token punctuation">.</span>column_stack<span class="token punctuation">(</span>    <span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> grid_y<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>grid_z <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>samples<span class="token punctuation">)</span>grid_z <span class="token operator">=</span> grid_z<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>grid_x<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 画图</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'K-Means Cluster'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'K-Means Cluster'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制分类边界</span>mp<span class="token punctuation">.</span>pcolormesh<span class="token punctuation">(</span>grid_x<span class="token punctuation">,</span> grid_y<span class="token punctuation">,</span> grid_z<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制所有样本</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>pred_c<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span>           cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'samples'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> centers<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           c<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'+'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">,</span>           label<span class="token operator">=</span><span class="token string">'Centers'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="图像量化"><a href="#图像量化" class="headerlink" title="图像量化"></a>图像量化</h4><p>KMeans聚类算法可以应用于图像量化领域。 通过KMeans算法把一张图像所包含的颜色值进行聚类划分，求每一类别的平均值后，再重新生成新的图像。可以达到图像降维的目的，更有利于图像识别。这个过程称为图像量化。</p><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo03_image.py 图像量化"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>misc <span class="token keyword">as</span> sm<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>ndimage <span class="token keyword">as</span> sn<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">as</span> sc<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpimg <span class="token operator">=</span> sm<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'../ml_data/lily.jpg'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>x <span class="token operator">=</span> img<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># n行1列</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">)</span>y <span class="token operator">=</span> model<span class="token punctuation">.</span>labels_   <span class="token comment" spellcheck="true"># 返回聚类标签</span>centers <span class="token operator">=</span> model<span class="token punctuation">.</span>cluster_centers_<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 把y数组中相应元素的值改为centers中的值</span><span class="token comment" spellcheck="true"># 生成新图片，处理后，图片中只包含centers范围内的值</span><span class="token keyword">print</span><span class="token punctuation">(</span>centers<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>  centers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y<span class="token punctuation">)</span>img2 <span class="token operator">=</span> centers<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Image'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">'off'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">'off'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img2<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="均值漂移算法"><a href="#均值漂移算法" class="headerlink" title="均值漂移算法"></a>均值漂移算法</h4><p>首先假定样本空间中的每个聚类均服从某种已知的概率分布规则，然后用不同的概率密度函数拟合样本中的统计直方图，不断移动密度函数的中心位置，直到获得最佳的拟合效果为止。这些概率密度函数曲线的峰值点就是聚类的中心，再根据每个样本与各个中心的距离，选择最近的聚类中心所属类别作为该样本的类别。</p><p>均值漂移算法的特点：</p><ol><li>聚类数不必事先已知，算法会自动识别出统计直方图的中心数量。</li><li>聚类中心不依据于最初假定，聚类划分的结果相对稳定。</li><li>样本空间应该服从某种概率分布规则，否则算法的准确性将会大大折扣。</li></ol><p>均值漂移算法相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 获取量化带宽对象</span>bw <span class="token operator">=</span> sc<span class="token punctuation">.</span>estimate_bandwidth<span class="token punctuation">(</span>    x<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 输入集</span>    n_samples<span class="token operator">=</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 样本数量</span>    quantile<span class="token operator">=</span><span class="token number">0.1</span>    <span class="token comment" spellcheck="true"># 量化带宽（统计直方图的宽度）</span><span class="token punctuation">)</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>MeanShift<span class="token punctuation">(</span>bandwidth<span class="token operator">=</span>bw<span class="token punctuation">,</span> bin_seeding<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">)</span>model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例： multiple3.txt， 使用均值漂移做聚类划分。</p><pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/multiple3.txt'</span><span class="token punctuation">,</span>               delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># KMeans聚类模型</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>KMeans<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">)</span>pred_c <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span>centers <span class="token operator">=</span> model<span class="token punctuation">.</span>cluster_centers_<span class="token keyword">print</span><span class="token punctuation">(</span>pred_c<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="凝聚层次算法"><a href="#凝聚层次算法" class="headerlink" title="凝聚层次算法"></a>凝聚层次算法</h4><p>首先假定每个样本都是一个独立的聚类，如果统计出来的聚类数大于期望的聚类数，则从每个样本出发，寻找离自己最近的另一个样本，与之聚集，形成更大的聚类。同时令总聚类数减少，不断重复以上过程，直到统计出来的聚类数达到期望值为止。</p><p>凝聚层次算法的特点：</p><ol><li>聚类数k必须事先已知。借助某些评估指标，优选最好的聚类数。</li><li>没有聚类中心概念，因此只能在训练集中划分聚类，不能对训练集以外的未知样本确定其归属。</li><li>在确定被凝聚的样本时，除了以距离作为条件外，还可以根据连续性来确定被聚集的样本。</li></ol><p>凝聚层次算法相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 构建凝聚层次聚类模型</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>AgglomerativeClustering<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 训练+预测</span>pred_y <span class="token operator">=</span> model<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo05_agglo.py  凝聚层次聚类"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">as</span> sc<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpx <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/multiple3.txt'</span><span class="token punctuation">,</span>               delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 凝聚层次聚类模型</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>AgglomerativeClustering<span class="token punctuation">(</span>n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>pred_c <span class="token operator">=</span> model<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pred_c<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 画图</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Agglo Cluster'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Agglo Cluster'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制所有样本</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span>pred_c<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span>           cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'samples'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用凝聚层次算法，根据<strong>连续性</strong>来确定被聚集的样本类别划分相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># linkage='average'： 无连续性的凝聚层次聚类器</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>AgglomerativeClustering<span class="token punctuation">(</span>            linkage<span class="token operator">=</span><span class="token string">'average'</span><span class="token punctuation">,</span> n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于连续性的凝聚层次聚类器</span><span class="token comment" spellcheck="true"># 近邻筛选器</span>conn <span class="token operator">=</span> nb<span class="token punctuation">.</span>kneighbors_graph<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> include_self<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>AgglomerativeClustering<span class="token punctuation">(</span>            linkage<span class="token operator">=</span><span class="token string">'average'</span><span class="token punctuation">,</span> n_clusters<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>            conntivity<span class="token operator">=</span>conn<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="轮廓系数"><a href="#轮廓系数" class="headerlink" title="轮廓系数"></a>轮廓系数</h4><p>轮廓系数用于评估聚类器的好坏。好的聚类：内密外疏，同一个聚类内部的样本要足够密集，不同的聚类之间样本要足够疏远。</p><p>轮廓系数的计算规则：针对样本空间中的一个特定样本，计算它与所在聚类其他样本的平均距离a，以及该样本与距离最近的另一个聚类中所有样本的平均距离b，该样本的轮廓系数为(b-a)/max(a, b)。将整个样本空间中所有样本的轮廓系数取算数平均值，作为聚类划分的性能指标。</p><p>轮廓系数的取值区间：[-1, 1]。 -1代表分类效果差，1代表分类效果好。0代表聚类重叠,没有很好的划分。</p><p>轮廓系数相关API:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token comment" spellcheck="true"># v:返回样本空间所有样本的平均轮廓系数</span><span class="token comment" spellcheck="true"># metric:euclidean 使用欧几里得距离算法</span>v <span class="token operator">=</span> sm<span class="token punctuation">.</span>silhouette_score<span class="token punctuation">(</span>    输入集，输出集，    sample_size<span class="token operator">=</span>样本数<span class="token punctuation">,</span>    metric<span class="token operator">=</span>距离算法<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 输出轮廓系数指标</span>v <span class="token operator">=</span> sm<span class="token punctuation">.</span>silhouette_score<span class="token punctuation">(</span>    x<span class="token punctuation">,</span> pred_c<span class="token punctuation">,</span> sample_size<span class="token operator">=</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> metric<span class="token operator">=</span><span class="token string">'euclidean'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="DBSCAN算法"><a href="#DBSCAN算法" class="headerlink" title="DBSCAN算法"></a>DBSCAN算法</h4><p>从样本空间中任意选择一个样本，以事先给定的半径做圆，凡被该圆圈中的样本都与该样本处于相同的聚类，以这些被圈中的样本为圆心继续画圆，重复以上过程，不断扩大被圈中样本的规模，直到再也没有新的样本加入为止，至此即得到一个聚类。在剩余样本中，重复以上过程，直到耗尽样本空间中的所有样本为止。</p><p>DBSCAN算法的特点：</p><ol><li>事先给定的半径会影响最后的聚类效果，可以借助轮廓系数选择较优方案</li><li>根据聚类的形成过程，把样本细分为三类：<ol><li>外周样本：被其他样本聚集到某个聚类中，但无法再引入新样本的样本。</li><li>孤立样本：据类中的样本数低于所设定的下限，则不称其为聚类，称其为孤立样本。</li><li>核心样本：除了外周样本和孤立样本以外的样本。</li></ol></li></ol><p>DBSCAN算法相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 构建DBSCAN聚类模型</span><span class="token comment" spellcheck="true"># eps：圆的半径</span><span class="token comment" spellcheck="true"># min_samples：聚类样本数量的下限，低于该数值则为孤立样本。</span>model <span class="token operator">=</span> sc<span class="token punctuation">.</span>DBSCAN<span class="token punctuation">(</span>eps<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> min_samples<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取所有核心样本的index</span>model<span class="token punctuation">.</span>core_sample_indices_<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：读取perf.txt，实现聚类划分。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo06_dbscan.py  dbscan算法实现聚类划分"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>cluster <span class="token keyword">as</span> sc<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mp<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> smx <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../ml_data/perf.txt'</span><span class="token punctuation">,</span>               delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于轮廓系数优先eps超参数</span>eps<span class="token punctuation">,</span> scores<span class="token punctuation">,</span> models <span class="token operator">=</span>     \    np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> epsilon <span class="token keyword">in</span> eps<span class="token punctuation">:</span>    model <span class="token operator">=</span> sc<span class="token punctuation">.</span>DBSCAN<span class="token punctuation">(</span>eps<span class="token operator">=</span>epsilon<span class="token punctuation">,</span> min_samples<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>    model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 输出轮廓系数指标</span>    score <span class="token operator">=</span> sm<span class="token punctuation">.</span>silhouette_score<span class="token punctuation">(</span>        x<span class="token punctuation">,</span> model<span class="token punctuation">.</span>labels_<span class="token punctuation">,</span> sample_size<span class="token operator">=</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>        metric<span class="token operator">=</span><span class="token string">'euclidean'</span><span class="token punctuation">)</span>    scores<span class="token punctuation">.</span>append<span class="token punctuation">(</span>score<span class="token punctuation">)</span>    models<span class="token punctuation">.</span>append<span class="token punctuation">(</span>model<span class="token punctuation">)</span>scores <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>scores<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 最高分的下标</span>best_index <span class="token operator">=</span> scores<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>eps<span class="token punctuation">[</span>best_index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>scores<span class="token punctuation">[</span>best_index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取最优模型</span>model <span class="token operator">=</span> models<span class="token punctuation">[</span>best_index<span class="token punctuation">]</span>pred_y <span class="token operator">=</span> model<span class="token punctuation">.</span>fit_predict<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pred_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 构建核心样本的掩码</span>core_mask <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>bool<span class="token punctuation">)</span>core_mask<span class="token punctuation">[</span>model<span class="token punctuation">.</span>core_sample_indices_<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment" spellcheck="true"># 获取孤立样本的掩码</span>offset_mask <span class="token operator">=</span> model<span class="token punctuation">.</span>labels_ <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token comment" spellcheck="true"># 外周样本的掩码</span>p_mask <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span>core_mask <span class="token operator">|</span> offset_mask<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 画图</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'DBSCAN Cluster'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'DBSCAN Cluster'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>labels <span class="token operator">=</span> model<span class="token punctuation">.</span>labels_mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span>core_mask<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           x<span class="token punctuation">[</span>core_mask<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>labels<span class="token punctuation">[</span>core_mask<span class="token punctuation">]</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span>           s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'core'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span>p_mask<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span>p_mask<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           c<span class="token operator">=</span>labels<span class="token punctuation">[</span>p_mask<span class="token punctuation">]</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'brg'</span><span class="token punctuation">,</span>           alpha<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'p'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">[</span>offset_mask<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           x<span class="token punctuation">[</span>offset_mask<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>           c<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'offset'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="推荐引擎"><a href="#推荐引擎" class="headerlink" title="推荐引擎"></a>推荐引擎</h3><p>推荐引擎意在把最需要的推荐给用户。</p><p>在不同的机器学习场景中通常需要分析相似样本，而统计相似样本的方式可以基于欧式距离分数，也可以基于皮氏距离分数。</p><p>简单推荐引擎的过程：</p><ol><li>当A登录后，系统检索A看过（评过分）的电影，发现A喜欢什么电影。</li><li>数据库中有哪些人与A的习惯相似。找到相似用户。</li><li>检索相似用户看过的电影，寻求评分较高的推荐给A。</li></ol><p><strong>欧式距离分数</strong><br>$$<br>欧式距离分数=\frac{1}{1+欧氏距离}<br>$$<br>计算所得欧氏距离分数区间处于 (0, 1]， 越趋向于0，样本间的距离越远，样本越不相似。趋向于1，代表越相似。</p><p>为了更方便的找到相似用户，需要构建样本之间的欧氏距离分数矩阵。</p><p>案例： 分析ratings.json。</p><pre class="line-numbers language-python"><code class="language-python"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="机器学习DAY06"><a href="#机器学习DAY06" class="headerlink" title="机器学习DAY06"></a>机器学习DAY06</h1><h3 id="推荐引擎-1"><a href="#推荐引擎-1" class="headerlink" title="推荐引擎"></a>推荐引擎</h3><p>推荐引擎意在把最需要的推荐给用户。</p><p>在不同的机器学习场景中通常需要分析相似样本，而统计相似样本的方式可以基于欧式距离分数，也可以基于皮氏距离分数。</p><p>简单推荐引擎的过程：</p><ol><li>当A登录后，系统检索A看过（评过分）的电影，发现A喜欢什么电影。</li><li>数据库中有哪些人与A的习惯相似。找到相似用户。</li><li>检索相似用户看过的电影，寻求评分较高的推荐给A。</li></ol><p><strong>欧式距离分数</strong><br>$$<br>欧式距离分数=\frac{1}{1+欧氏距离}<br>$$<br>计算所得欧氏距离分数区间处于 (0, 1]， 越趋向于0，样本间的距离越远，样本越不相似。趋向于1，代表越相似。</p><p>为了更方便的找到相似用户，需要构建样本之间的欧氏距离分数矩阵。</p><p>案例： 分析ratings.json。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token keyword">import</span> json<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'../ml_data/ratings.json'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    ratings <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 所有用户</span>users <span class="token operator">=</span> list<span class="token punctuation">(</span>ratings<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># scmat用于存储每个人之间的欧氏距离得分矩阵</span>scmat <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> user1 <span class="token keyword">in</span> users<span class="token punctuation">:</span>    scrow <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> user2 <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># movies存储两个用户共同看过的电影</span>        movies <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> movie <span class="token keyword">in</span> ratings<span class="token punctuation">[</span>user1<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> movie <span class="token keyword">in</span> ratings<span class="token punctuation">[</span>user2<span class="token punctuation">]</span><span class="token punctuation">:</span>                movies<span class="token punctuation">.</span>add<span class="token punctuation">(</span>movie<span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>movies<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            score <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment" spellcheck="true"># 两人没有共同语言得分为0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 计算两人相似度得分</span>            <span class="token comment" spellcheck="true"># x，y保存两人同时看过的多部电影的评分</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">for</span> movie <span class="token keyword">in</span> movies<span class="token punctuation">:</span>                x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ratings<span class="token punctuation">[</span>user1<span class="token punctuation">]</span><span class="token punctuation">[</span>movie<span class="token punctuation">]</span><span class="token punctuation">)</span>                y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ratings<span class="token punctuation">[</span>user2<span class="token punctuation">]</span><span class="token punctuation">[</span>movie<span class="token punctuation">]</span><span class="token punctuation">)</span>            x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>x<span class="token punctuation">)</span>            y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>y<span class="token punctuation">)</span>            score <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>                <span class="token number">1</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        scrow<span class="token punctuation">.</span>append<span class="token punctuation">(</span>score<span class="token punctuation">)</span>    scmat<span class="token punctuation">.</span>append<span class="token punctuation">(</span>scrow<span class="token punctuation">)</span>users <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>users<span class="token punctuation">)</span>scmat <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>scmat<span class="token punctuation">)</span><span class="token keyword">for</span> scrow <span class="token keyword">in</span> scmat<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'{:.2f}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>score<span class="token punctuation">)</span>                   <span class="token keyword">for</span> score <span class="token keyword">in</span> scrow<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>皮尔逊相关系数</strong></p><pre class="line-numbers language-python"><code class="language-python">A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># A用户打分列表</span>B <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># B用户打分列表</span>C <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># C用户打分列表</span>np<span class="token punctuation">.</span>corrcoef<span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">)</span>np<span class="token punctuation">.</span>corrcoef<span class="token punctuation">(</span>A<span class="token punctuation">,</span> C<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>皮尔逊相关系数 = 协方差/标准差之积</p><p>相关系数处于[-1, 1]区间，接近于-1， 代表两组样本负相关；接近1则代表两组样本正相关。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token keyword">import</span> json<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'../ml_data/ratings.json'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    ratings <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 所有用户</span>users <span class="token operator">=</span> list<span class="token punctuation">(</span>ratings<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># scmat用于存储每个人之间的欧氏距离得分矩阵</span>scmat <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> user1 <span class="token keyword">in</span> users<span class="token punctuation">:</span>    scrow <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> user2 <span class="token keyword">in</span> users<span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># movies存储两个用户共同看过的电影</span>        movies <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> movie <span class="token keyword">in</span> ratings<span class="token punctuation">[</span>user1<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> movie <span class="token keyword">in</span> ratings<span class="token punctuation">[</span>user2<span class="token punctuation">]</span><span class="token punctuation">:</span>                movies<span class="token punctuation">.</span>add<span class="token punctuation">(</span>movie<span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>movies<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            score <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment" spellcheck="true"># 两人没有共同语言得分为0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 计算两人相似度得分</span>            <span class="token comment" spellcheck="true"># x，y保存两人同时看过的多部电影的评分</span>            x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">for</span> movie <span class="token keyword">in</span> movies<span class="token punctuation">:</span>                x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ratings<span class="token punctuation">[</span>user1<span class="token punctuation">]</span><span class="token punctuation">[</span>movie<span class="token punctuation">]</span><span class="token punctuation">)</span>                y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ratings<span class="token punctuation">[</span>user2<span class="token punctuation">]</span><span class="token punctuation">[</span>movie<span class="token punctuation">]</span><span class="token punctuation">)</span>            x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>x<span class="token punctuation">)</span>            y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>y<span class="token punctuation">)</span>            score <span class="token operator">=</span> np<span class="token punctuation">.</span>corrcoef<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>        scrow<span class="token punctuation">.</span>append<span class="token punctuation">(</span>score<span class="token punctuation">)</span>    scmat<span class="token punctuation">.</span>append<span class="token punctuation">(</span>scrow<span class="token punctuation">)</span>users <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>users<span class="token punctuation">)</span>scmat <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>scmat<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># for scrow in scmat:</span><span class="token comment" spellcheck="true">#     print(' '.join('{:.2f}'.format(score)</span><span class="token comment" spellcheck="true">#                    for score in scrow))</span><span class="token comment" spellcheck="true"># 按照相似度从而高低排序每个用户的相似用户</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> user <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 当前用户与所有人的相似度得分并排序</span>    sorted_indices <span class="token operator">=</span> scmat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 不跟自己比</span>    sorted_indices <span class="token operator">=</span> \        sorted_indices<span class="token punctuation">[</span>sorted_indices <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 与当前用户的所有相似用户及相似度得分</span>    similar_users <span class="token operator">=</span> users<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span>    similar_scores <span class="token operator">=</span> scmat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 生成推荐清单</span>    <span class="token comment" spellcheck="true"># 1. 找到所有皮尔逊系数正相关的用户</span>    <span class="token comment" spellcheck="true"># 2. 遍历每个相似用户，找到相似看过的看是</span>    <span class="token comment" spellcheck="true">#    当前用户没看过的电影</span>    <span class="token comment" spellcheck="true"># 3. 多个相似用户可能推荐同一部电影，</span>    <span class="token comment" spellcheck="true">#    取它们对该电影评分的均值作为推荐度。</span>    positive_mask <span class="token operator">=</span> similar_scores <span class="token operator">></span> <span class="token number">0</span>    similar_users <span class="token operator">=</span> similar_users<span class="token punctuation">[</span>positive_mask<span class="token punctuation">]</span>    similar_scores <span class="token operator">=</span> similar_scores<span class="token punctuation">[</span>positive_mask<span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 存储对当前用户所推荐的电影，以及电影</span>    <span class="token comment" spellcheck="true"># 推荐度（对电影的评分）</span>    recomm_movies <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> similar_user <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>            similar_users<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> movie<span class="token punctuation">,</span> score <span class="token keyword">in</span> \                ratings<span class="token punctuation">[</span>similar_user<span class="token punctuation">]</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> movie <span class="token operator">not</span> <span class="token keyword">in</span> ratings<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> movie <span class="token operator">not</span> <span class="token keyword">in</span> recomm_movies<span class="token punctuation">:</span>                    recomm_movies<span class="token punctuation">[</span>movie<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    recomm_movies<span class="token punctuation">[</span>movie<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>score<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>    recomm_movies <span class="token operator">=</span> \        sorted<span class="token punctuation">(</span>recomm_movies<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>               key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>               reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>recomm_movies<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自然语言处理-NLP"><a href="#自然语言处理-NLP" class="headerlink" title="自然语言处理(NLP)"></a>自然语言处理(NLP)</h3><p>Siri：1. 听   2. 懂   3. 思考   4. 组织语言   5. 回答</p><ol><li>语音识别</li><li>自然语言处理 - 语义分析</li><li>逻辑分析 - 综合业务场景上下文</li><li>自然语言处理 - 分析结果生成自然语言文本</li><li>语音合成</li></ol><p>自然语言处理的常用处理过程：</p><p>先针对训练文本进行分词处理（词干提取、原型提取），统计词频，通过词频-逆文档频率算法获得该词对某种语义的贡献，根据每个词的贡献力度，构建有监督分类学习模型，把测试样本，交给模型处理，得到语义类别。</p><p>自然语言工具包 - NLTK</p><h4 id="文本分词"><a href="#文本分词" class="headerlink" title="文本分词"></a>文本分词</h4><p>分词处理相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>tokenize <span class="token keyword">as</span> tk<span class="token comment" spellcheck="true"># 把样本按照句子进行拆分  sent_list：句子列表</span>sent_list <span class="token operator">=</span> tk<span class="token punctuation">.</span>sent_tokenize<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># # 把样本字符串按照单词进行拆分  word_list：单词列表</span>word_list <span class="token operator">=</span> tk<span class="token punctuation">.</span>word_tokenize<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># WordPunctTokenizer:分词器对象</span>tokenizer <span class="token operator">=</span> tk<span class="token punctuation">.</span>WordPunctTokenizer<span class="token punctuation">(</span><span class="token punctuation">)</span>word_list <span class="token operator">=</span> tokenizer<span class="token punctuation">.</span>tokenize<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo02_tk.py  文本分词"""</span><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>tokenize <span class="token keyword">as</span> tkdoc <span class="token operator">=</span> <span class="token string">"Are you curious about tokenization? "</span>\    <span class="token string">"Let's see how it works! "</span> \    <span class="token string">"We need to analyze a couple of "</span> \    <span class="token string">"sentences with punctuations to see "</span>\    <span class="token string">"it in action."</span><span class="token comment" spellcheck="true"># 拆出句子</span>sent_list <span class="token operator">=</span> tk<span class="token punctuation">.</span>sent_tokenize<span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> sent <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>sent_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%2d'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sent<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 拆分单词</span>word_list <span class="token operator">=</span> tk<span class="token punctuation">.</span>word_tokenize<span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> word <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>word_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%2d'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> word<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 拆分单词  WordPunctTokenizer</span>tokenizer <span class="token operator">=</span> tk<span class="token punctuation">.</span>WordPunctTokenizer<span class="token punctuation">(</span><span class="token punctuation">)</span>word_list <span class="token operator">=</span> tokenizer<span class="token punctuation">.</span>tokenize<span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> word <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>word_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%2d'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> word<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="词干提取"><a href="#词干提取" class="headerlink" title="词干提取"></a>词干提取</h4><p>分词后的单词词性与时态对语义分析没有影响，所以需要对单词进行词干提取。</p><p>词干提取相关API:</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem<span class="token punctuation">.</span>porter <span class="token keyword">as</span> pt<span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem<span class="token punctuation">.</span>lancaster <span class="token keyword">as</span> lc<span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem<span class="token punctuation">.</span>snowball <span class="token keyword">as</span> sbstemmer <span class="token operator">=</span> pt<span class="token punctuation">.</span>PorterStemmer<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 波特词干提取器（宽松）</span>stemmer <span class="token operator">=</span> lc<span class="token punctuation">.</span>LancasterStemmer<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 朗卡斯特词干提取器（严格）</span>stemmer <span class="token operator">=</span> sb<span class="token punctuation">.</span>SnowballStemmer<span class="token punctuation">(</span><span class="token string">'english'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 思诺博词干提取器（中庸）</span>r <span class="token operator">=</span> stemmer<span class="token punctuation">.</span>stem<span class="token punctuation">(</span><span class="token string">'playing'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 提取词干，返回结果</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo03_stem.py 词干提取"""</span><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem<span class="token punctuation">.</span>porter <span class="token keyword">as</span> pt<span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem<span class="token punctuation">.</span>lancaster <span class="token keyword">as</span> lc<span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem<span class="token punctuation">.</span>snowball <span class="token keyword">as</span> sbwords <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'table'</span><span class="token punctuation">,</span> <span class="token string">'probably'</span><span class="token punctuation">,</span> <span class="token string">'wolves'</span><span class="token punctuation">,</span>         <span class="token string">'playing'</span><span class="token punctuation">,</span> <span class="token string">'is'</span><span class="token punctuation">,</span> <span class="token string">'dog'</span><span class="token punctuation">,</span> <span class="token string">'the'</span><span class="token punctuation">,</span>         <span class="token string">'beaches'</span><span class="token punctuation">,</span> <span class="token string">'grounded'</span><span class="token punctuation">,</span> <span class="token string">'dreamt'</span><span class="token punctuation">,</span>         <span class="token string">'envision'</span><span class="token punctuation">]</span>pt_stemmer <span class="token operator">=</span> pt<span class="token punctuation">.</span>PorterStemmer<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 波特词干提取器（宽松）</span>lc_stemmer <span class="token operator">=</span> lc<span class="token punctuation">.</span>LancasterStemmer<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 朗卡斯特词干提取器（严格）</span>sb_stemmer <span class="token operator">=</span> sb<span class="token punctuation">.</span>SnowballStemmer<span class="token punctuation">(</span><span class="token string">'english'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 思诺博词干提取器（中庸）</span><span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>    pt_stem <span class="token operator">=</span> pt_stemmer<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>word<span class="token punctuation">)</span>    lc_stem <span class="token operator">=</span> lc_stemmer<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>word<span class="token punctuation">)</span>    sb_stem <span class="token operator">=</span> sb_stemmer<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>word<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%8s %8s %8s %8s'</span> <span class="token operator">%</span>          <span class="token punctuation">(</span>word<span class="token punctuation">,</span> pt_stem<span class="token punctuation">,</span> lc_stem<span class="token punctuation">,</span> sb_stem<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="词性还原"><a href="#词性还原" class="headerlink" title="词性还原"></a>词性还原</h4><p>与词干提取作用类似，词性还原更利于人工二次处理。因为有些词干并非正确的单词，人工阅读更麻烦。此行还原可以把名词的复数形式改为单数，动词特殊形式恢复为原型。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem <span class="token keyword">as</span> ns<span class="token comment" spellcheck="true"># 词性还原器</span>lemmatizer <span class="token operator">=</span> ns<span class="token punctuation">.</span>WordNetLemmatizer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 还原名词</span>n_lemma <span class="token operator">=</span> lemmatizer<span class="token punctuation">.</span>lemmatize<span class="token punctuation">(</span>word<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token string">'n'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 还原动词</span>v_lemma <span class="token operator">=</span> lemmatizer<span class="token punctuation">.</span>lemmatize<span class="token punctuation">(</span>word<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token string">'v'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo03_lemm.py 词性还原"""</span><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>stem <span class="token keyword">as</span> nswords <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'table'</span><span class="token punctuation">,</span> <span class="token string">'probably'</span><span class="token punctuation">,</span> <span class="token string">'wolves'</span><span class="token punctuation">,</span>         <span class="token string">'playing'</span><span class="token punctuation">,</span> <span class="token string">'is'</span><span class="token punctuation">,</span> <span class="token string">'dog'</span><span class="token punctuation">,</span> <span class="token string">'the'</span><span class="token punctuation">,</span>         <span class="token string">'beaches'</span><span class="token punctuation">,</span> <span class="token string">'grounded'</span><span class="token punctuation">,</span> <span class="token string">'dreamt'</span><span class="token punctuation">,</span>         <span class="token string">'envision'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 词性还原器</span>lemmatizer <span class="token operator">=</span> ns<span class="token punctuation">.</span>WordNetLemmatizer<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>    n <span class="token operator">=</span> lemmatizer<span class="token punctuation">.</span>lemmatize<span class="token punctuation">(</span>word<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token string">'n'</span><span class="token punctuation">)</span>    v <span class="token operator">=</span> lemmatizer<span class="token punctuation">.</span>lemmatize<span class="token punctuation">(</span>word<span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token string">'v'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'%8s %8s %8s'</span> <span class="token operator">%</span>          <span class="token punctuation">(</span>word<span class="token punctuation">,</span> n<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="词袋模型"><a href="#词袋模型" class="headerlink" title="词袋模型"></a>词袋模型</h4><p>一句话的语义很大程度取决于某个单词出现的次数，所以可以把句子中所有可能出现的单词作为特征名，每一个句子为一个样本，单词在句子中出现的次数为特征值构建数学模型。该模型即称为词袋模型。</p><p>The brown dog is running. The black dog is in the black room. Running in the room is forbidden.</p><ol><li>The brown dog is running.</li><li>The black dog is in the black room.</li><li>Running in the room is forbidden.</li></ol><table><thead><tr><th>the</th><th>brown</th><th>dog</th><th>is</th><th>running</th><th>black</th><th>in</th><th>room</th><th>forbidden</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>2</td><td>0</td><td>1</td><td>1</td><td>0</td><td>2</td><td>1</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>构建词袋模型相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>feature_extraction<span class="token punctuation">.</span>text <span class="token keyword">as</span> ft<span class="token comment" spellcheck="true"># 词袋模型对象</span>cv <span class="token operator">=</span> ft<span class="token punctuation">.</span>CountVectorizer<span class="token punctuation">(</span><span class="token punctuation">)</span>bow <span class="token operator">=</span> cv<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>sent<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取所有特征名（词袋的表头，所有的单词）</span>words <span class="token operator">=</span> cv<span class="token punctuation">.</span>get_feature_names<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo05_bow.py 测试词袋模型"""</span><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>tokenize <span class="token keyword">as</span> tk<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>feature_extraction<span class="token punctuation">.</span>text <span class="token keyword">as</span> ftdoc <span class="token operator">=</span> <span class="token string">'The brown dog is running. '</span>    \    <span class="token string">'The black dog is in the black room. '</span>\    <span class="token string">'Running in the room is forbidden.'</span><span class="token comment" spellcheck="true"># 分解所有句子</span>sentences <span class="token operator">=</span> tk<span class="token punctuation">.</span>sent_tokenize<span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sentences<span class="token punctuation">)</span>cv <span class="token operator">=</span> ft<span class="token punctuation">.</span>CountVectorizer<span class="token punctuation">(</span><span class="token punctuation">)</span>bow <span class="token operator">=</span> cv<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>sentences<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bow<span class="token punctuation">.</span>toarray<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>words <span class="token operator">=</span> cv<span class="token punctuation">.</span>get_feature_names<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="词频（TF）"><a href="#词频（TF）" class="headerlink" title="词频（TF）"></a>词频（TF）</h4><p>单词在句子中出现的次数除以句子的总词数称为词频。即一个单词在一个句子中出现的频率。词频相比单词出现的次数更可以客观的评估单词对一句话语义的贡献度。对词袋矩阵归一化处理即可得到单词的词频。</p><p>案例：</p><pre class="line-numbers language-python"><code class="language-python">tf <span class="token operator">=</span> sp<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>bow<span class="token punctuation">,</span> norm<span class="token operator">=</span><span class="token string">'l1'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>toarray<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="文档频率（DF）"><a href="#文档频率（DF）" class="headerlink" title="文档频率（DF）"></a>文档频率（DF）</h4><p>含有某个单词的文档样本数量 /  总文档样本数量</p><p>文档频率越低，代表某个单词对语义的贡献越高。</p><h4 id="逆文档频率（IDF）"><a href="#逆文档频率（IDF）" class="headerlink" title="逆文档频率（IDF）"></a>逆文档频率（IDF）</h4><p>总文档样本数量 / 含有某个单词的文档样本数量 </p><h4 id="词频-逆文档频率（TF-IDF）"><a href="#词频-逆文档频率（TF-IDF）" class="headerlink" title="词频-逆文档频率（TF-IDF）"></a>词频-逆文档频率（TF-IDF）</h4><p>词频矩阵中的每一个元素，乘以相应单词的逆文档频率，其值越大说明该词对样本语义的贡献度越大，根据每个词的贡献力度，构建学习模型。</p><p>获取TF-IDF矩阵的API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 首先获取词袋模型矩阵</span>cv <span class="token operator">=</span> ft<span class="token punctuation">.</span>CountVectorizer<span class="token punctuation">(</span><span class="token punctuation">)</span>bow <span class="token operator">=</span> cv<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>sentences<span class="token punctuation">)</span><span class="token punctuation">.</span>toArray<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取TF-IDF模型训练器</span>tt <span class="token operator">=</span> ft<span class="token punctuation">.</span>TfidfTransformer<span class="token punctuation">(</span><span class="token punctuation">)</span>tfidf <span class="token operator">=</span> tt<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>bow<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python">tt <span class="token operator">=</span> ft<span class="token punctuation">.</span>TfidfTransformer<span class="token punctuation">(</span><span class="token punctuation">)</span>tfidf <span class="token operator">=</span> tt<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>bow<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tfidf<span class="token punctuation">.</span>toarray<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="文本分类（主题识别）"><a href="#文本分类（主题识别）" class="headerlink" title="文本分类（主题识别）"></a>文本分类（主题识别）</h4><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo08_news.py 主题识别"""</span><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">as</span> sd<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>feature_extraction<span class="token punctuation">.</span>text <span class="token keyword">as</span> ft<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>naive_bayes <span class="token keyword">as</span> nbtrain <span class="token operator">=</span> sd<span class="token punctuation">.</span>load_files<span class="token punctuation">(</span>    <span class="token string">'../ml_data/20news'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'latin1'</span><span class="token punctuation">,</span>    shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># load_file将会在文件夹下所有文件</span>train_data <span class="token operator">=</span> train<span class="token punctuation">.</span>datatrain_y <span class="token operator">=</span> train<span class="token punctuation">.</span>target<span class="token comment" spellcheck="true"># 获取所有类别标签</span>categories <span class="token operator">=</span> train<span class="token punctuation">.</span>target_names<span class="token comment" spellcheck="true"># 构建词袋模型</span>cv <span class="token operator">=</span> ft<span class="token punctuation">.</span>CountVectorizer<span class="token punctuation">(</span><span class="token punctuation">)</span>train_bow <span class="token operator">=</span> cv<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>train_data<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 构建TFIDF矩阵</span>tt <span class="token operator">=</span> ft<span class="token punctuation">.</span>TfidfTransformer<span class="token punctuation">(</span><span class="token punctuation">)</span>train_x <span class="token operator">=</span> tt<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>train_bow<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于多项分布的朴素贝叶斯分类器进行模型训练</span>model <span class="token operator">=</span> nb<span class="token punctuation">.</span>MultinomialNB<span class="token punctuation">(</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 测试模型：</span>test_data <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'The curveballs of right handed '</span>    <span class="token string">'pitchers tend to curve to the left.'</span><span class="token punctuation">,</span>    <span class="token string">'Caesar cipher is an ancient form '</span>    <span class="token string">'of encryption.'</span><span class="token punctuation">,</span>    <span class="token string">'This two-wheeler is really good '</span>    <span class="token string">'on slippery roads'</span><span class="token punctuation">]</span>test_bow <span class="token operator">=</span> cv<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>test_data<span class="token punctuation">)</span>test_x <span class="token operator">=</span> tt<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>test_bow<span class="token punctuation">)</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">for</span> sent<span class="token punctuation">,</span> i <span class="token keyword">in</span> zip<span class="token punctuation">(</span>test_data<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sent<span class="token punctuation">,</span> <span class="token string">'->'</span><span class="token punctuation">,</span> categories<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="nltk分类器"><a href="#nltk分类器" class="headerlink" title="nltk分类器"></a>nltk分类器</h4><p>nltk提供了朴素贝叶斯分类器方便的处理自然语言相关的分类问题。并且可以自动处理词袋、TFIDF矩阵的整理，完成模型训练，最终实现类别预测。</p><p>相关API如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>classify <span class="token keyword">as</span> cf<span class="token keyword">import</span> nltk<span class="token punctuation">.</span>classify<span class="token punctuation">.</span>util <span class="token keyword">as</span> cu <span class="token triple-quoted-string string">''' train_data的数据格式：[ ({'age':1, 'score':2, 'student':1}, 'good'),  ({'age':1, 'score':2, 'student':1}, 'bad') ]'''</span><span class="token comment" spellcheck="true"># 使用nltk直到的朴素贝叶斯分类器训练模型</span>model <span class="token operator">=</span> cf<span class="token punctuation">.</span>NaiveBayesClassifier<span class="token punctuation">.</span>train<span class="token punctuation">(</span>train_data<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 对测试数据进行预测：test_data:  {'age':1, 'score':2}</span>cls <span class="token operator">=</span> model<span class="token punctuation">.</span>classify<span class="token punctuation">(</span>test_data<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 评估分类器  返回分类器的得分</span>ac <span class="token operator">=</span> cu<span class="token punctuation">.</span>accuracy<span class="token punctuation">(</span>model<span class="token punctuation">,</span> test_data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="情感分析"><a href="#情感分析" class="headerlink" title="情感分析"></a>情感分析</h4><p>分析语料库中movie_reviews文档，通过正面即负面的评价进行自然语言训练，实现情感分析。</p><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo09_movie.py  情感分析"""</span><span class="token keyword">import</span> nltk<span class="token punctuation">.</span>corpus <span class="token keyword">as</span> nc<span class="token keyword">import</span> nltk<span class="token punctuation">.</span>classify <span class="token keyword">as</span> cf<span class="token keyword">import</span> nltk<span class="token punctuation">.</span>classify<span class="token punctuation">.</span>util <span class="token keyword">as</span> cupdata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 获取pos目录下的所有文件id</span>fileids <span class="token operator">=</span> nc<span class="token punctuation">.</span>movie_reviews<span class="token punctuation">.</span>fileids<span class="token punctuation">(</span><span class="token string">'pos'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 整理所有正面评论的单词，存入pdata列表</span><span class="token keyword">for</span> fileid <span class="token keyword">in</span> fileids<span class="token punctuation">:</span>    sample <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true"># 对fileid该文件执行分词操作</span>    words <span class="token operator">=</span> nc<span class="token punctuation">.</span>movie_reviews<span class="token punctuation">.</span>words<span class="token punctuation">(</span>fileid<span class="token punctuation">)</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>        sample<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>    pdata<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> <span class="token string">'POSITIVE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ndata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 获取neg目录下的所有文件id</span>fileids <span class="token operator">=</span> nc<span class="token punctuation">.</span>movie_reviews<span class="token punctuation">.</span>fileids<span class="token punctuation">(</span><span class="token string">'neg'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 整理所有正面评论的单词，存入ndata列表</span><span class="token keyword">for</span> fileid <span class="token keyword">in</span> fileids<span class="token punctuation">:</span>    sample <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token comment" spellcheck="true"># 对fileid该文件执行分词操作</span>    words <span class="token operator">=</span> nc<span class="token punctuation">.</span>movie_reviews<span class="token punctuation">.</span>words<span class="token punctuation">(</span>fileid<span class="token punctuation">)</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>        sample<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>    ndata<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> <span class="token string">'NEGATIVE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 拆分训练集与测试集 (80%作为训练)</span>pnumb <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token number">0.8</span> <span class="token operator">*</span> len<span class="token punctuation">(</span>pdata<span class="token punctuation">)</span><span class="token punctuation">)</span>nnumb <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token number">0.8</span> <span class="token operator">*</span> len<span class="token punctuation">(</span>ndata<span class="token punctuation">)</span><span class="token punctuation">)</span>train_data <span class="token operator">=</span> pdata<span class="token punctuation">[</span><span class="token punctuation">:</span>pnumb<span class="token punctuation">]</span> <span class="token operator">+</span> ndata<span class="token punctuation">[</span><span class="token punctuation">:</span>nnumb<span class="token punctuation">]</span>test_data <span class="token operator">=</span> pdata<span class="token punctuation">[</span>pnumb<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> ndata<span class="token punctuation">[</span>nnumb<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 基于朴素贝叶斯分类器开始训练</span>model <span class="token operator">=</span>\    cf<span class="token punctuation">.</span>NaiveBayesClassifier<span class="token punctuation">.</span>train<span class="token punctuation">(</span>train_data<span class="token punctuation">)</span>ac <span class="token operator">=</span> cu<span class="token punctuation">.</span>accuracy<span class="token punctuation">(</span>model<span class="token punctuation">,</span> test_data<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 模拟业务场景：</span>reviews <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'It is an amazing movie.'</span><span class="token punctuation">,</span>    <span class="token string">'This is a dull movie, I would never '</span>    <span class="token string">'recommend it to anyone.'</span><span class="token punctuation">,</span>    <span class="token string">'The cinematography is pretty great '</span>    <span class="token string">'in this movie.'</span><span class="token punctuation">,</span>    <span class="token string">'The direction was terrible and the '</span>    <span class="token string">'story was all over the place.'</span><span class="token punctuation">]</span><span class="token keyword">for</span> review <span class="token keyword">in</span> reviews<span class="token punctuation">:</span>    sample <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    words <span class="token operator">=</span> review<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>        sample<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>    pcls <span class="token operator">=</span> model<span class="token punctuation">.</span>classify<span class="token punctuation">(</span>sample<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>review<span class="token punctuation">,</span> <span class="token string">'->'</span><span class="token punctuation">,</span> pcls<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="语音识别"><a href="#语音识别" class="headerlink" title="语音识别"></a>语音识别</h3><p>通过傅里叶变换，将时间域的声音函数分解为一系列不同频率的正弦函数的叠加，通过频率谱线的特殊分布，建立音频内容和文本的对应关系，以此作为模型训练的基础。</p><p>案例：freq.wav</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo10_freq.py 音频分解"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> numpy<span class="token punctuation">.</span>fft <span class="token keyword">as</span> nf<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpsample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> \    wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'../ml_data/freq.wav'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sample_rate<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sigs<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> sigs<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># x坐标</span>times <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>len<span class="token punctuation">(</span>sigs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> sample_rate<span class="token comment" spellcheck="true"># 傅里叶变换，获取拆解出的正弦波频率与能量信息</span>freqs <span class="token operator">=</span> nf<span class="token punctuation">.</span>fftfreq<span class="token punctuation">(</span>sigs<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> sample_rate<span class="token punctuation">)</span>ffts <span class="token operator">=</span> nf<span class="token punctuation">.</span>fft<span class="token punctuation">(</span>sigs<span class="token punctuation">)</span>pows <span class="token operator">=</span> np<span class="token punctuation">.</span>abs<span class="token punctuation">(</span>ffts<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制两个图像</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Audio'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Time Domain'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Time'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Signal'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>times<span class="token punctuation">,</span> sigs<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制频域图像</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Frequency Domain'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Frequency'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Pow'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>freqs<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pows<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        c<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="语音识别-1"><a href="#语音识别-1" class="headerlink" title="语音识别"></a>语音识别</h4><p>梅尔频率倒谱系数（MFCC）：对声音做傅里叶变换后，发现与声音内容密切相关的13个特殊频率所对应的能量分布。可以使用MFCC矩阵作为语音识别的特征。基于隐马尔科夫模型进行模式识别，找到测试样本最匹配的声音模型，从而识别语音内容。</p><p>MFCC相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> python_speech_features <span class="token keyword">as</span> sf<span class="token comment" spellcheck="true"># 读取音频文件获取采样率及每个采样点的值</span>sample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'../data/freq.wav'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 交给语音特征提取器获取该拼音的梅尔频率倒普矩阵</span>mfcc <span class="token operator">=</span> sf<span class="token punctuation">.</span>mfcc<span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> sample_rate<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：比较不同音频的mfcc矩阵。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo11_mfcc.py"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> numpy<span class="token punctuation">.</span>fft <span class="token keyword">as</span> nf<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> python_speech_features <span class="token keyword">as</span> sf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpsample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> \    wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'../ml_data/speeches/training'</span>            <span class="token string">'/banana/banana01.wav'</span><span class="token punctuation">)</span>mfcc <span class="token operator">=</span> sf<span class="token punctuation">.</span>mfcc<span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> sample_rate<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mfcc<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>matshow<span class="token punctuation">(</span>mfcc<span class="token punctuation">.</span>T<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gist_rainbow'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'MFCC'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Sample'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Feature'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>隐马尔可夫模型相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> hmmlearn<span class="token punctuation">.</span>hmm <span class="token keyword">as</span> hl<span class="token comment" spellcheck="true"># 构建隐马模型</span><span class="token comment" spellcheck="true"># n_components：用几个高斯分布函数拟合样本数据</span><span class="token comment" spellcheck="true"># convariance_type： 使用相关矩阵的辅对角线进行相关性比较</span><span class="token comment" spellcheck="true"># n_iter：最大迭代上限</span>model <span class="token operator">=</span> hl<span class="token punctuation">.</span>GaussianHMM<span class="token punctuation">(</span>    n_components<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>         convariance_type<span class="token operator">=</span><span class="token string">'diag'</span><span class="token punctuation">,</span>    n_iter<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span>score <span class="token operator">=</span> model<span class="token punctuation">.</span>score<span class="token punctuation">(</span>test_mfccs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="机器学习DAY07"><a href="#机器学习DAY07" class="headerlink" title="机器学习DAY07"></a>机器学习DAY07</h1><h3 id="语音识别-2"><a href="#语音识别-2" class="headerlink" title="语音识别"></a>语音识别</h3><p>通过傅里叶变换，将时间域的声音函数分解为一系列不同频率的正弦函数的叠加，通过频率谱线的特殊分布，建立音频内容和文本的对应关系，以此作为模型训练的基础。</p><p>案例：freq.wav</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo10_freq.py 音频分解"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> numpy<span class="token punctuation">.</span>fft <span class="token keyword">as</span> nf<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpsample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> \    wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'../ml_data/freq.wav'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sample_rate<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sigs<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> sigs<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># x坐标</span>times <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>len<span class="token punctuation">(</span>sigs<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> sample_rate<span class="token comment" spellcheck="true"># 傅里叶变换，获取拆解出的正弦波频率与能量信息</span>freqs <span class="token operator">=</span> nf<span class="token punctuation">.</span>fftfreq<span class="token punctuation">(</span>sigs<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">/</span> sample_rate<span class="token punctuation">)</span>ffts <span class="token operator">=</span> nf<span class="token punctuation">.</span>fft<span class="token punctuation">(</span>sigs<span class="token punctuation">)</span>pows <span class="token operator">=</span> np<span class="token punctuation">.</span>abs<span class="token punctuation">(</span>ffts<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制两个图像</span>mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Audio'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Time Domain'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Time'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Signal'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>times<span class="token punctuation">,</span> sigs<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'dodgerblue'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制频域图像</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Frequency Domain'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Frequency'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Pow'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>freqs<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pows<span class="token punctuation">[</span>freqs <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        c<span class="token operator">=</span><span class="token string">'orangered'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="语音识别-3"><a href="#语音识别-3" class="headerlink" title="语音识别"></a>语音识别</h4><p>梅尔频率倒谱系数（MFCC）：对声音做傅里叶变换后，发现与声音内容密切相关的13个特殊频率所对应的能量分布。可以使用MFCC矩阵作为语音识别的特征。基于隐马尔科夫模型进行模式识别，找到测试样本最匹配的声音模型，从而识别语音内容。</p><p>MFCC相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> python_speech_features <span class="token keyword">as</span> sf<span class="token comment" spellcheck="true"># 读取音频文件获取采样率及每个采样点的值</span>sample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'../data/freq.wav'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 交给语音特征提取器获取该拼音的梅尔频率倒普矩阵</span>mfcc <span class="token operator">=</span> sf<span class="token punctuation">.</span>mfcc<span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> sample_rate<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：比较不同音频的mfcc矩阵。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo11_mfcc.py"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> numpy<span class="token punctuation">.</span>fft <span class="token keyword">as</span> nf<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> python_speech_features <span class="token keyword">as</span> sf<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpsample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> \    wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token string">'../ml_data/speeches/training'</span>            <span class="token string">'/banana/banana01.wav'</span><span class="token punctuation">)</span>mfcc <span class="token operator">=</span> sf<span class="token punctuation">.</span>mfcc<span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> sample_rate<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mfcc<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>matshow<span class="token punctuation">(</span>mfcc<span class="token punctuation">.</span>T<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'gist_rainbow'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'MFCC'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Sample'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Feature'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>隐马尔可夫模型相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> hmmlearn<span class="token punctuation">.</span>hmm <span class="token keyword">as</span> hl<span class="token comment" spellcheck="true"># 构建隐马模型</span><span class="token comment" spellcheck="true"># n_components：用几个高斯分布函数拟合样本数据</span><span class="token comment" spellcheck="true"># convariance_type： 使用相关矩阵的辅对角线进行相关性比较</span><span class="token comment" spellcheck="true"># n_iter：最大迭代上限</span>model <span class="token operator">=</span> hl<span class="token punctuation">.</span>GaussianHMM<span class="token punctuation">(</span>    n_components<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>         convariance_type<span class="token operator">=</span><span class="token string">'diag'</span><span class="token punctuation">,</span>    n_iter<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span>score <span class="token operator">=</span> model<span class="token punctuation">.</span>score<span class="token punctuation">(</span>test_mfccs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：遍历文件夹，使用多个隐马模型训练所有音频的mfcc矩阵。然后使用测试集验证训练结果。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo01_hmm.py 语音识别"""</span><span class="token keyword">import</span> os<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> scipy<span class="token punctuation">.</span>io<span class="token punctuation">.</span>wavfile <span class="token keyword">as</span> wf<span class="token keyword">import</span> python_speech_features <span class="token keyword">as</span> sf<span class="token keyword">import</span> hmmlearn<span class="token punctuation">.</span>hmm <span class="token keyword">as</span> hl<span class="token keyword">def</span> <span class="token function">search_files</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    搜索directory目录下的所有wav文件，返回字典    """</span>    directory <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>normpath<span class="token punctuation">(</span>directory<span class="token punctuation">)</span>    objects <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> curdir<span class="token punctuation">,</span> subdirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> \            os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>            <span class="token keyword">if</span> file<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.wav'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                label <span class="token operator">=</span> curdir<span class="token punctuation">.</span>split<span class="token punctuation">(</span>                    os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>sep<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">if</span> label <span class="token operator">not</span> <span class="token keyword">in</span> objects<span class="token punctuation">:</span>                    objects<span class="token punctuation">[</span>label<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>curdir<span class="token punctuation">,</span> file<span class="token punctuation">)</span>                objects<span class="token punctuation">[</span>label<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token keyword">return</span> objectstrain_samples <span class="token operator">=</span> \    search_files<span class="token punctuation">(</span><span class="token string">'../ml_data/speeches/training'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>train_samples<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 整理训练集数据，把每一个类别中音频的mfcc</span><span class="token comment" spellcheck="true"># 整理入训练集中.</span>train_x<span class="token punctuation">,</span> train_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> label<span class="token punctuation">,</span> filenames <span class="token keyword">in</span> train_samples<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    mfccs <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> filename <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>        sample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>        mfcc <span class="token operator">=</span> sf<span class="token punctuation">.</span>mfcc<span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> sample_rate<span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            mfccs <span class="token operator">=</span> mfcc        <span class="token keyword">else</span><span class="token punctuation">:</span>            mfccs <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>                mfccs<span class="token punctuation">,</span> mfcc<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    train_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span>    train_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 基于隐马模型，进行训练，把所有训练结果model</span><span class="token comment" spellcheck="true"># 都存起来，供以后使用</span>models <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">for</span> mfccs<span class="token punctuation">,</span> label <span class="token keyword">in</span> zip<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token punctuation">:</span>    model <span class="token operator">=</span> hl<span class="token punctuation">.</span>GaussianHMM<span class="token punctuation">(</span>        n_components<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> covariance_type<span class="token operator">=</span><span class="token string">'diag'</span><span class="token punctuation">,</span>        n_iter<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>    models<span class="token punctuation">[</span>label<span class="token punctuation">]</span> <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 读取测试集中的文件，输出模式匹配的结果</span>test_samples <span class="token operator">=</span> \    search_files<span class="token punctuation">(</span><span class="token string">'../ml_data/speeches/testing'</span><span class="token punctuation">)</span>test_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> label<span class="token punctuation">,</span> filenames <span class="token keyword">in</span> test_samples<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    mfccs <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> filename <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>        sample_rate<span class="token punctuation">,</span> sigs <span class="token operator">=</span> wf<span class="token punctuation">.</span>read<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>        mfcc <span class="token operator">=</span> sf<span class="token punctuation">.</span>mfcc<span class="token punctuation">(</span>sigs<span class="token punctuation">,</span> sample_rate<span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            mfccs <span class="token operator">=</span> mfcc        <span class="token keyword">else</span><span class="token punctuation">:</span>            mfccs <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>                mfccs<span class="token punctuation">,</span> mfcc<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    test_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span>    test_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 让每一个隐马模型验证每一个测试样本的匹配度</span>pred_test_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> mfccs <span class="token keyword">in</span> test_x<span class="token punctuation">:</span>    best_score<span class="token punctuation">,</span> best_label <span class="token operator">=</span> None<span class="token punctuation">,</span> None    <span class="token keyword">for</span> label<span class="token punctuation">,</span> model <span class="token keyword">in</span> models<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        score <span class="token operator">=</span> model<span class="token punctuation">.</span>score<span class="token punctuation">(</span>mfccs<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>best_score <span class="token keyword">is</span> None<span class="token punctuation">)</span> <span class="token operator">or</span> \                <span class="token punctuation">(</span>best_score <span class="token operator">&lt;</span> score<span class="token punctuation">)</span><span class="token punctuation">:</span>            best_score<span class="token punctuation">,</span> best_label <span class="token operator">=</span> score<span class="token punctuation">,</span> label    pred_test_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>best_label<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>test_y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pred_test_y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图像识别"><a href="#图像识别" class="headerlink" title="图像识别"></a>图像识别</h3><h4 id="OpenCV基础"><a href="#OpenCV基础" class="headerlink" title="OpenCV基础"></a>OpenCV基础</h4><p>openCV是一个开源的计算机视觉库。提供了很多图像处理的常用工具。</p><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo02_cv.py  opencv基础"""</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'../ml_data/forest.jpg'</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Img'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 显示图像每个颜色通道的信息</span>blue <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 仅保留原数组的蓝色通道</span>blue<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span> blue<span class="token punctuation">)</span>green <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>img<span class="token punctuation">)</span>green<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'green'</span><span class="token punctuation">,</span> green<span class="token punctuation">)</span>red <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros_like<span class="token punctuation">(</span>img<span class="token punctuation">)</span>red<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">,</span> red<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 图像裁剪</span>h<span class="token punctuation">,</span> w <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>l<span class="token punctuation">,</span> t <span class="token operator">=</span> int<span class="token punctuation">(</span>w <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span>r<span class="token punctuation">,</span> b <span class="token operator">=</span> int<span class="token punctuation">(</span>w <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>h <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span>cropped <span class="token operator">=</span> img<span class="token punctuation">[</span>t<span class="token punctuation">:</span>b<span class="token punctuation">,</span> l<span class="token punctuation">:</span>r<span class="token punctuation">]</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Cropped'</span><span class="token punctuation">,</span> cropped<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 图像缩小  给出目标图像的w与h即可</span><span class="token keyword">print</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> h<span class="token punctuation">)</span>sc1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>    img<span class="token punctuation">,</span> <span class="token punctuation">(</span>int<span class="token punctuation">(</span>w <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    interpolation<span class="token operator">=</span>cv<span class="token punctuation">.</span>INTER_LINEAR<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Scale1'</span><span class="token punctuation">,</span> sc1<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 图像放大 若不给出w与h，可以给出x、y缩放比例</span>sc2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>    sc1<span class="token punctuation">,</span> None<span class="token punctuation">,</span> fx<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> fy<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    interpolation<span class="token operator">=</span>cv<span class="token punctuation">.</span>INTER_LINEAR<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Scale2'</span><span class="token punctuation">,</span> sc2<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 图像保存</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'../ml_data/blue.jpg'</span><span class="token punctuation">,</span> blue<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'../ml_data/green.jpg'</span><span class="token punctuation">,</span> green<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'../ml_data/red.jpg'</span><span class="token punctuation">,</span> red<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'../ml_data/sc2.jpg'</span><span class="token punctuation">,</span> sc2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="边缘检测"><a href="#边缘检测" class="headerlink" title="边缘检测"></a>边缘检测</h4><p>物体的边缘检测是物体识别常用的手段，边缘检测常用亮度梯度的方法。通过识别亮度梯度变化最大的像素点从而检测出物体的边缘。</p><p>边缘识别相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 索贝尔边缘识别</span><span class="token comment" spellcheck="true"># cv.CV_64F:图片像素为整型，转为浮点型避免精度损失</span><span class="token comment" spellcheck="true"># 1:水平方向做索贝尔偏微分</span><span class="token comment" spellcheck="true"># 0:垂直方向不做索贝尔偏微分</span><span class="token comment" spellcheck="true"># ksize: 索贝尔卷积核为5*5</span>cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ksize<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 拉普拉斯边缘识别</span>cv<span class="token punctuation">.</span>Laplacian<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_64F<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Canny边缘识别</span><span class="token comment" spellcheck="true"># 50: 水平方向的阈值  240: 垂直方向的阈值</span>cv<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""sobel.py 边缘识别"""</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'../ml_data/chair.jpg'</span><span class="token punctuation">,</span>                cv<span class="token punctuation">.</span>IMREAD_GRAYSCALE<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 索贝尔边缘识别器</span>s1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ksize<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'H-Sobel'</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span>s2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> ksize<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'V-Sobel'</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span>s3 <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> ksize<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Sobel'</span><span class="token punctuation">,</span> s3<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 拉普拉斯边缘识别</span>laplacian <span class="token operator">=</span> cv<span class="token punctuation">.</span>Laplacian<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_64F<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'laplacian'</span><span class="token punctuation">,</span> laplacian<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># canny边缘识别</span>canny <span class="token operator">=</span> cv<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Canny'</span><span class="token punctuation">,</span> canny<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="亮度提升"><a href="#亮度提升" class="headerlink" title="亮度提升"></a>亮度提升</h4><p>OpenCV提供了直方图均衡化的方式实现亮度提升，亮度提升后更有利于边缘识别模型的训练。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 针对灰度图像 做直方图均衡化处理</span>gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>equalized_gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>equalizeHist<span class="token punctuation">(</span>gray<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo04_equalhist.py  直方图均衡化"""</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'../ml_data/sunrise.jpg'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 直方图均衡化</span>gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'gray'</span><span class="token punctuation">,</span> gray<span class="token punctuation">)</span>equalized_gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>equalizeHist<span class="token punctuation">(</span>gray<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'equalized_gray'</span><span class="token punctuation">,</span> equalized_gray<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 彩色图提亮度  YUV：亮度，色度，饱和度</span>yuv <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2YUV<span class="token punctuation">)</span>yuv<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>equalizeHist<span class="token punctuation">(</span>yuv<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>yuv<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_YUV2BGR<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'equalized_color'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="角点检测"><a href="#角点检测" class="headerlink" title="角点检测"></a>角点检测</h4><p>角点 - 平直棱线的交汇点。（颜色梯度方向改变的像素点的位置）</p><p>OpenCV提供的角点检测相关API：</p><pre class="line-numbers language-python"><code class="language-python">gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Harris角点检测器</span><span class="token comment" spellcheck="true"># 边缘的水平方向、垂直方向颜色值改变超过阈值7,5时即为边缘</span><span class="token comment" spellcheck="true"># 边缘线的方向改变超过阈值0.04即为一个角点</span>corners <span class="token operator">=</span> cv<span class="token punctuation">.</span>cornerHarris<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.04</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo05_harris.py  角点检测"""</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'../ml_data/box.png'</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Image'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Image'</span><span class="token punctuation">,</span> gray<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 返回所有的角点坐标</span>corners <span class="token operator">=</span> cv<span class="token punctuation">.</span>cornerHarris<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>mixture <span class="token operator">=</span> img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>corners<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>corners<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>corners<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 对彩色图像做掩码，找到角点把颜色改为红色</span>mixture<span class="token punctuation">[</span>corners <span class="token operator">></span> corners<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.01</span><span class="token punctuation">]</span> <span class="token operator">=</span>\    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Mixture'</span><span class="token punctuation">,</span> mixture<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="特征点检测"><a href="#特征点检测" class="headerlink" title="特征点检测"></a>特征点检测</h4><p>特征点检测集合了边缘检测与角点检测，从而可以识别出图像的特征点。</p><p>常用的特征点检测：STAR特征点检测、SIFT特征点检测</p><p>star特征值检测相关API：</p><pre class="line-numbers language-python"><code class="language-python">gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># star特征点检测  创建start特征点检测器</span>star <span class="token operator">=</span> cv<span class="token punctuation">.</span>xfeatures2d<span class="token punctuation">.</span>StarDetector_create<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取检测到的所有特征点</span>keypoints <span class="token operator">=</span> star<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>gray<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制特征点</span>mixture <span class="token operator">=</span> img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>f <span class="token operator">=</span> cv<span class="token punctuation">.</span>DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS<span class="token comment" spellcheck="true"># (原图，特征点，目标图像，flag)</span>cv<span class="token punctuation">.</span>drawKeypoints<span class="token punctuation">(</span>img<span class="token punctuation">,</span> keypoints<span class="token punctuation">,</span> mixture<span class="token punctuation">,</span> flags<span class="token operator">=</span>f<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Mixture'</span><span class="token punctuation">,</span> mixture<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>sift特征值检测相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># sift特征点检测  创建sift特征点检测器</span>sift <span class="token operator">=</span> cv<span class="token punctuation">.</span>xfeatrures2d<span class="token punctuation">.</span>SIFT_create<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取检测到的所有特征点</span>keypoints <span class="token operator">=</span> sift<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>gray<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="特征值矩阵"><a href="#特征值矩阵" class="headerlink" title="特征值矩阵"></a>特征值矩阵</h4><p>图像的特征值矩阵（描述矩阵）记录了图像的特征点以及每个特征点的梯度信息。相似图像的特征值矩阵也相似。这样只要有足够多的样本，就可以基于隐马尔科夫模型进行图像内容的识别。</p><p>特征值矩阵相关API：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># sift特征点检测  创建sift特征点检测器</span>sift <span class="token operator">=</span> cv<span class="token punctuation">.</span>xfeatrures2d<span class="token punctuation">.</span>SIFT_create<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取检测到的所有特征点</span>keypoints <span class="token operator">=</span> sift<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>gray<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取图像的特征值矩阵</span>_<span class="token punctuation">,</span> desc <span class="token operator">=</span> sift<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> keypoints<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo08_feat.py  特征值矩阵"""</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'../ml_data/green.jpg'</span><span class="token punctuation">)</span>gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># sift特征点检测  创建sift特征点检测器</span>sift <span class="token operator">=</span> cv<span class="token punctuation">.</span>xfeatures2d<span class="token punctuation">.</span>SIFT_create<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取检测到的所有特征点</span>keypoints <span class="token operator">=</span> sift<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>gray<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取特征值矩阵</span>_<span class="token punctuation">,</span> desc <span class="token operator">=</span> sift<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> keypoints<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>matshow<span class="token punctuation">(</span>desc<span class="token punctuation">.</span>T<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Description'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Feature'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'Sample'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="物体识别"><a href="#物体识别" class="headerlink" title="物体识别"></a>物体识别</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo09_jpg.py   物体识别"""</span><span class="token keyword">import</span> os<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> hmmlearn<span class="token punctuation">.</span>hmm <span class="token keyword">as</span> hl<span class="token keyword">def</span> <span class="token function">search_files</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    搜索directory目录下的所有jpg文件，返回字典    """</span>    directory <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>normpath<span class="token punctuation">(</span>directory<span class="token punctuation">)</span>    objects <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">for</span> curdir<span class="token punctuation">,</span> subdirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> \            os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>            <span class="token keyword">if</span> file<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                label <span class="token operator">=</span> curdir<span class="token punctuation">.</span>split<span class="token punctuation">(</span>                    os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>sep<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">if</span> label <span class="token operator">not</span> <span class="token keyword">in</span> objects<span class="token punctuation">:</span>                    objects<span class="token punctuation">[</span>label<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>curdir<span class="token punctuation">,</span> file<span class="token punctuation">)</span>                objects<span class="token punctuation">[</span>label<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token keyword">return</span> objectstrain_samples <span class="token operator">=</span> search_files<span class="token punctuation">(</span>    <span class="token string">'../ml_data/objects/training'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 加载训练集样本数据，训练模型，存储模型</span>train_x<span class="token punctuation">,</span> train_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> label<span class="token punctuation">,</span> filenames <span class="token keyword">in</span> train_samples<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    descs <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> filename <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>        image <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>        gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>            image<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 整理图片的大小 若宽度较小，则把宽度</span>        <span class="token comment" spellcheck="true"># 缩放到200，高度自适应。若高度较小，</span>        <span class="token comment" spellcheck="true"># 则把高度缩放到200，宽度自适应。</span>        h<span class="token punctuation">,</span> w <span class="token operator">=</span> gray<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>        f <span class="token operator">=</span> <span class="token number">200</span> <span class="token operator">/</span> min<span class="token punctuation">(</span>h<span class="token punctuation">,</span> w<span class="token punctuation">)</span>        gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> None<span class="token punctuation">,</span> fx<span class="token operator">=</span>f<span class="token punctuation">,</span> fy<span class="token operator">=</span>f<span class="token punctuation">)</span>        sift <span class="token operator">=</span> cv<span class="token punctuation">.</span>xfeatures2d<span class="token punctuation">.</span>SIFT_create<span class="token punctuation">(</span><span class="token punctuation">)</span>        keypoints <span class="token operator">=</span> sift<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>gray<span class="token punctuation">)</span>        _<span class="token punctuation">,</span> desc <span class="token operator">=</span> sift<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> keypoints<span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>descs<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            descs <span class="token operator">=</span> desc        <span class="token keyword">else</span><span class="token punctuation">:</span>            descs <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>                descs<span class="token punctuation">,</span> desc<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    train_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>descs<span class="token punctuation">)</span>    train_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 训练隐马模型</span>models <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">for</span> descs<span class="token punctuation">,</span> label <span class="token keyword">in</span> zip<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token punctuation">:</span>    model <span class="token operator">=</span> hl<span class="token punctuation">.</span>GaussianHMM<span class="token punctuation">(</span>        n_components<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> covariance_type<span class="token operator">=</span><span class="token string">'diag'</span><span class="token punctuation">,</span>        n_iter<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>    models<span class="token punctuation">[</span>label<span class="token punctuation">]</span> <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>descs<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 模型测试</span>test_samples <span class="token operator">=</span> search_files<span class="token punctuation">(</span>    <span class="token string">'../ml_data/objects/testing'</span><span class="token punctuation">)</span>test_x<span class="token punctuation">,</span> test_y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> label<span class="token punctuation">,</span> filenames <span class="token keyword">in</span> test_samples<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    descs <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> filename <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>        image <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>        gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>            image<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 整理图片的大小 若宽度较小，则把宽度</span>        <span class="token comment" spellcheck="true"># 缩放到200，高度自适应。若高度较小，</span>        <span class="token comment" spellcheck="true"># 则把高度缩放到200，宽度自适应。</span>        h<span class="token punctuation">,</span> w <span class="token operator">=</span> gray<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>        f <span class="token operator">=</span> <span class="token number">200</span> <span class="token operator">/</span> min<span class="token punctuation">(</span>h<span class="token punctuation">,</span> w<span class="token punctuation">)</span>        gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> None<span class="token punctuation">,</span> fx<span class="token operator">=</span>f<span class="token punctuation">,</span> fy<span class="token operator">=</span>f<span class="token punctuation">)</span>        sift <span class="token operator">=</span> cv<span class="token punctuation">.</span>xfeatures2d<span class="token punctuation">.</span>SIFT_create<span class="token punctuation">(</span><span class="token punctuation">)</span>        keypoints <span class="token operator">=</span> sift<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>gray<span class="token punctuation">)</span>        _<span class="token punctuation">,</span> desc <span class="token operator">=</span> sift<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> keypoints<span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>descs<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            descs <span class="token operator">=</span> desc        <span class="token keyword">else</span><span class="token punctuation">:</span>            descs <span class="token operator">=</span> np<span class="token punctuation">.</span>append<span class="token punctuation">(</span>                descs<span class="token punctuation">,</span> desc<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    test_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>descs<span class="token punctuation">)</span>    test_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token keyword">for</span> descs<span class="token punctuation">,</span> test_label <span class="token keyword">in</span> zip<span class="token punctuation">(</span>test_x<span class="token punctuation">,</span> test_y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> pred_label<span class="token punctuation">,</span> model <span class="token keyword">in</span> models<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        score <span class="token operator">=</span> model<span class="token punctuation">.</span>score<span class="token punctuation">(</span>descs<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>test_label<span class="token punctuation">,</span> <span class="token string">'->'</span><span class="token punctuation">,</span> pred_label<span class="token punctuation">,</span> score<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python">airplane <span class="token operator">-</span><span class="token operator">></span> airplane <span class="token operator">-</span><span class="token number">120454.03702592754</span>airplane <span class="token operator">-</span><span class="token operator">></span> car <span class="token operator">-</span><span class="token number">121061.63978531306</span>airplane <span class="token operator">-</span><span class="token operator">></span> motorbike <span class="token operator">-</span><span class="token number">119660.8862679648</span>car <span class="token operator">-</span><span class="token operator">></span> airplane <span class="token operator">-</span><span class="token number">162306.35159566175</span>car <span class="token operator">-</span><span class="token operator">></span> car <span class="token operator">-</span><span class="token number">161333.75710071798</span>car <span class="token operator">-</span><span class="token operator">></span> motorbike <span class="token operator">-</span><span class="token number">162209.1739355846</span>motorbike <span class="token operator">-</span><span class="token operator">></span> airplane <span class="token operator">-</span><span class="token number">292652.6592317896</span>motorbike <span class="token operator">-</span><span class="token operator">></span> car <span class="token operator">-</span><span class="token number">294093.2031186345</span>motorbike <span class="token operator">-</span><span class="token operator">></span> motorbike <span class="token operator">-</span><span class="token number">290136.95963470405</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="人脸识别"><a href="#人脸识别" class="headerlink" title="人脸识别"></a>人脸识别</h3><p>人脸识别与图像识别的区别在于人脸识别需要识别出两个人的不同点。</p><h4 id="视频捕捉"><a href="#视频捕捉" class="headerlink" title="视频捕捉"></a>视频捕捉</h4><p>使用opencv访问视频设备，获取图像帧。</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment" spellcheck="true"># 获取视频设备</span>video_capture <span class="token operator">=</span> cv<span class="token punctuation">.</span>videoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用方法读取视频设备捕获的一帧图片</span>frame <span class="token operator">=</span> video_capture<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>video_capture<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment" spellcheck="true"># 0：下标为0的设备</span>vc <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    frame <span class="token operator">=</span> vc<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Video Capture'</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>    <span class="token keyword">if</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>vc<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="人脸定位"><a href="#人脸定位" class="headerlink" title="人脸定位"></a>人脸定位</h4><p>哈尔级联人脸定位</p><pre class="line-numbers language-python"><code class="language-python">fd <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'../ml_data/haar/face.xml'</span><span class="token punctuation">)</span>ed <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'../ml_data/haar/eye.xml'</span><span class="token punctuation">)</span>nd <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'../ml_data/haar/nose.xml'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 构建级联人脸定位器</span><span class="token comment" spellcheck="true"># 1.3: 物体的最小尺寸</span><span class="token comment" spellcheck="true"># 5:   查找物体的最大个数</span>faces <span class="token operator">=</span> fd<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token number">1.3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># faces: [(),(),(),() ...]</span><span class="token keyword">for</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token keyword">in</span> faces<span class="token punctuation">:</span>    a<span class="token punctuation">,</span> b <span class="token operator">=</span> int<span class="token punctuation">(</span>w <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">#  原图片</span>               <span class="token punctuation">(</span>l <span class="token operator">+</span> a<span class="token punctuation">,</span> t <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 椭圆心</span>               <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">#半径</span>               <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 椭圆旋转角度</span>               <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># 起始角，终止角</span>               <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token comment" spellcheck="true"># 椭圆颜色   线宽</span>    <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> unicode_literals<span class="token triple-quoted-string string">"""demo11_face.py 人脸定位"""</span><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvfd <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'../ml_data/haar/face.xml'</span><span class="token punctuation">)</span>ed <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'../ml_data/haar/eye.xml'</span><span class="token punctuation">)</span>nd <span class="token operator">=</span> cv<span class="token punctuation">.</span>CascadeClassifier<span class="token punctuation">(</span><span class="token string">'../ml_data/haar/nose.xml'</span><span class="token punctuation">)</span>vc <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    frame <span class="token operator">=</span> vc<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 识别脸</span>    faces <span class="token operator">=</span> fd<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token number">1.3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token keyword">in</span> faces<span class="token punctuation">:</span>        a<span class="token punctuation">,</span> b <span class="token operator">=</span> int<span class="token punctuation">(</span>w <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>        cv<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>                   <span class="token punctuation">(</span>l <span class="token operator">+</span> a<span class="token punctuation">,</span> t <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span>                   <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span>                   <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 识别鼻子和眼睛</span>        face <span class="token operator">=</span> frame<span class="token punctuation">[</span>t<span class="token punctuation">:</span>t <span class="token operator">+</span> h<span class="token punctuation">,</span> l<span class="token punctuation">:</span>l <span class="token operator">+</span> w<span class="token punctuation">]</span>        eyes <span class="token operator">=</span> ed<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token number">1.3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token keyword">in</span> eyes<span class="token punctuation">:</span>            a<span class="token punctuation">,</span> b <span class="token operator">=</span> int<span class="token punctuation">(</span>w <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>            cv<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>                face<span class="token punctuation">,</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> a<span class="token punctuation">,</span> t <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>        nose <span class="token operator">=</span> nd<span class="token punctuation">.</span>detectMultiScale<span class="token punctuation">(</span>face<span class="token punctuation">,</span> <span class="token number">1.3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> l<span class="token punctuation">,</span> t<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token keyword">in</span> nose<span class="token punctuation">:</span>            a<span class="token punctuation">,</span> b <span class="token operator">=</span> int<span class="token punctuation">(</span>w <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>h <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>            cv<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>                face<span class="token punctuation">,</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> a<span class="token punctuation">,</span> t <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Video'</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>    <span class="token keyword">if</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>vc<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>感谢我的朋友郭伟|Welian的汇总，这里我直接存放了他整理的内容．<br>博主最近时间不够充足，内容没有精力分块重新整合，见谅．<br>老规矩，如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）</p>]]></content>
      
      
      <categories>
          
          <category> MachineLearning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matplotlib </tag>
            
            <tag> Numpy </tag>
            
            <tag> Sklearn </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学47：假设检验和p值</title>
      <link href="/2019/01/23/stats-47/"/>
      <url>/2019/01/23/stats-47/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h2 id="假设检验和p值"><a href="#假设检验和p值" class="headerlink" title="假设检验和p值"></a>假设检验和p值</h2><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 假设检验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学46：小样本容量置信区间</title>
      <link href="/2019/01/23/stats-46/"/>
      <url>/2019/01/23/stats-46/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h2 id="小样本容量置信区间"><a href="#小样本容量置信区间" class="headerlink" title="小样本容量置信区间"></a>小样本容量置信区间</h2><p>7patient’s blood pressures have been measured after having been given a new drug for 3 months. They had blood perssure increases of 1.5, 2.9, 0.9, 3.9, 3.2, 2.1 and 1.9. Construct a 95% confidence interval for the true expected blood pressure increase for all patients in a population.</p><p>7个患者在服用新药3个月后测量血压．其血压上升值分别为1.5, 2.9, 0.9, 3.9, 3.2, 2.1, 1.9．<br>为总体中所有病人的血压升高真正期望值建立一个95％的置信区间．</p><blockquote><p>生物过程是一个正态分布，也就是总体其实是一个正态分布</p></blockquote><p>这里只有样本信息，看看可以得到些什么</p><p>$\bar{x} = \frac{1.5+2.9+0.9+3.9+3.2+ 2.1+1.9}{7}=2.34$</p><p>$S^2 = \frac{(1.5-2.34)^ + (2.9-1.34)^2+…}{7-1} = 1.04^2$</p><p>$\sigma \approx S$ ？？？？</p><p>这里样本容量太小了，并不能通过样本很好的估计总体的标准差．</p><blockquote><p>30以上才算好的估计<br>这里抽样分布不能认为是正态分布，不能使用中心极限理论．</p></blockquote><p><strong>可以认为是t分布</strong></p><blockquote><p>t分布用于根据小样本来估计呈正态分布且方差未知的总体的均值。如果总体方差已知（例如在样本数量足够多时），则应该用正态分布来估计总体均值</p></blockquote><p><img src="/images/stats/s_46.png" alt="图片"></p><p>查表2.447个标准差<br>$\bar{x} \pm 2.447\hat{\sigma}_{\bar{x}}=2.34 \pm 2.447\frac{1.04}{\sqrt{7}} = 2.34 \pm 0.96$</p><p>1.38-3.3</p><p><img src="/images/stats/s_46_02.png" alt="图片"></p><blockquote><p>t分布查表要确定自由度，自由度为n-1</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 置信区间 </tag>
            
            <tag> 小样本容量 </tag>
            
            <tag> t分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学45：置信区间例题</title>
      <link href="/2019/01/23/stats-45/"/>
      <url>/2019/01/23/stats-45/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h2 id="置信区间例题"><a href="#置信区间例题" class="headerlink" title="置信区间例题"></a>置信区间例题</h2><p>In a local teaching district a technology grant is available to teachers in order to install a cluster of four computers in their classrooms. From the 6250 teachers in the district, 250 were randomly selected and asked if they felt that computers were an essential teaching tool for their classroom. Of those selected,142 teachers felt that computers were an essential teaching tool.</p><p>某地区教学区获得一批技术拨款，用于在教师中安排4台一组的计算机．该区总共有6250名教师，随机抽取250名，并且问他们是否认为计算机是教师必备的教学工具．抽取的教师中，有142名认为计算机是教学必备的工具．</p><p><strong>问题1</strong>：<br>计算一个99％置信区间，其中教师认为计算机是必备的教学工具．</p><p>定义1表示计算机被认为是必备工具，占比为p，0表示计算机被认为不是必备工具，占比为q=1-p．<br>$\bar{x} = \frac{1\times 142 + 0 \times 108}{250} = 0.568$</p><p>$S^2 = \frac{142\times (1-0.568)^2 + 108\times (0-0.568)}{250-1}=0.246$</p><p>$\sigma_{\bar{x}} = \frac{\sigma}{\sqrt{250}} \approx \frac{S}{\sqrt{250}} = 0.031$</p><p>这里需要用到z表格<br>z表格的值应该为0.99/2+0.5＝0.995<br>对应2.58个标准差处</p><blockquote><p>大概99％的概率，样本均值在抽样分布均值左右2.58个标准差范围．</p></blockquote><p>$0.568 \pm 2.58 \times 0.031 = 0.568 \pm 0.08$</p><p>0.488-0.648</p><p><strong>问题2</strong>：<br>保持99％置信水平的前提下，如何缩小置信区间？</p><p>抽取更大的样本．</p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 置信区间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学44：误差范围2</title>
      <link href="/2019/01/23/stats-44/"/>
      <url>/2019/01/23/stats-44/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h2 id="误差范围"><a href="#误差范围" class="headerlink" title="误差范围"></a>误差范围</h2><p>样本均值落在抽样分布均值周围2个标准差的概率：<br>$$P(\bar{x}　is　within　2\sigma_{\bar{x}}　of　\mu_{bar{x}}) = 0.954$$</p><blockquote><p>经验法则68-95.4-99.7</p></blockquote><p>$$P(\mu_{\bar{x}}　is　within　2\sigma_{\bar{x}}　of　\bar{x}) = 0.954$$</p><blockquote><p>$\mu_{\bar{x}} = p$　　$\sigma_{\bar{x}} \approx 0.05$</p></blockquote><p>$$P(p　is　within　0.10　of　\bar{x}) \approx 0.954$$<br>$$P(p　is　within　0.43\pm 0.1) \approx 0.954$$</p><p>95%概率p在0.43$\pm0.1$的范围内</p><p>也就是置信区间33％－53％的置信度为95％</p><blockquote><p>它只是表示有95％的置信水平　p落在33％－53％之间，95％的信息并不是95％的实际占比</p></blockquote><blockquote><p>更容易的理解<br>43％的人将投票给B，57％的人投给A，误差范围是10％<br>如果想要的更准确（误差范围），就需要更大的样本容量．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 置信区间 </tag>
            
            <tag> 误差范围 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学43：误差范围1</title>
      <link href="/2019/01/23/stats-43/"/>
      <url>/2019/01/23/stats-43/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h2 id="误差范围"><a href="#误差范围" class="headerlink" title="误差范围"></a>误差范围</h2><p>情景：统计一个总体的投票情况，这里有两个候选人A and B</p><p>结果：B的票数占总的比例是p,则A的票数占比是1-p</p><p>为了计算方便，我们把A记为0，把B记为1</p><blockquote><p>这是一种二进制编码的思想，在计算机应用中经常会用到．</p></blockquote><p>则均值为（它是一个分布取不到的值）<br>$\mu = p$</p><p><em>但是p是很难去一一统计然后得出的．不可能把每个人都去调查一遍的．</em></p><p><strong>抽样</strong><br>随机选取一部分，100人吧<br>其中57人选A, 43人选B．<br>$$\bar{x}=\frac{57\times 0 + 43\times 1}{100} = 0.43$$<br>$$S^2 = \frac{57\times (0-0.43)^2 + 43\times (1-0.43)^2}{100-1} = 0.2475$$<br>$$S = \sqrt{0.2475} = 0.50$$</p><blockquote><p>样本的离均值平方对n-1个求期望，是对总体无偏差估计</p></blockquote><p><strong>思考：这个样本估计总体，那它有多少可信度，也就死有多好的去估计呢</strong></p><p>均值的最好估计为<br>均值0.43意味着43％的人投B<br>在0.43周围的存在？一个区间，我们有？确信真实均值是在该区间内的．</p><p>原分布是一个离散分布，我们从总体中，随机抽100个求均值，不断的抽取．这其实就是一个样本均值抽样分布．</p><p>样本均值抽样分布的标准差估为0.05（5％），（这在之前是有过计算过程的，看图应该可以明白．）</p><p><img src="/images/stats/s_43.png" alt="图片"></p><p>有95％的机率合理确信总体的真实均值p在？此区间内<br>下一节继续．这里理解把问题研究对象转换成了一个样本均值抽样分布．</p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 置信区间 </tag>
            
            <tag> 误差范围 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学42：伯努利分布均值和方差公式</title>
      <link href="/2019/01/23/stats-42/"/>
      <url>/2019/01/23/stats-42/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h2 id="伯努利分布均值和方差公式"><a href="#伯努利分布均值和方差公式" class="headerlink" title="伯努利分布均值和方差公式"></a>伯努利分布均值和方差公式</h2><p>设成功（1）的概率为p,则不成功（0）的概率为1-p</p><p>mean<br>$$\mu = 0 \times (1-p) + 1 \times p = p$$</p><p>variance<br>$$\sigma ^ 2 = (1-p) \times {(0-p)^2} + p \times {(1-p)^2}$$<br>$$(1-p) \times {(0-p)^2} + p \times {(1-p)^2} = (1-p) \times (p)\times (p) + p \times (1-p) \times (1-p)\\<br>　　　　　　=p \times (1-p) \times {p+1-p}$$</p><p>$$\sigma ^ 2 = p(1-p)$$</p><blockquote><p>伯努利分布 是一种离散分布,有两种可能的结果。<br>1表示成功，出现的概率为p(其中0＜p＜1)。0表示失败，出现的概率为q=1-p<br>这个分布在分类算法里使用比较多</p></blockquote><blockquote><p>二项分布其实就是n重伯努利分布．<br>期望为 $E(x)=np$，方差为 $D(x)=np(1-p)$</p></blockquote><blockquote><p><code>from scipy.stats import binom</code></p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 均值 </tag>
            
            <tag> 方差 </tag>
            
            <tag> 伯努利分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学41：伯努利分布均值和方差的例子</title>
      <link href="/2019/01/23/stats-41/"/>
      <url>/2019/01/23/stats-41/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h2 id="伯努利分布均值和方差的例子"><a href="#伯努利分布均值和方差的例子" class="headerlink" title="伯努利分布均值和方差的例子"></a>伯努利分布均值和方差的例子</h2><p>背景：对总体做一个满意度调查，只有两个选项，满意和不满意．</p><p>结果：40％的人不满意，60％的人满意</p><h4 id="均值"><a href="#均值" class="headerlink" title="均值"></a>均值</h4><p>问：从总体中随机选一个人出来，期望支持程度是多少？（该分布的均值？）</p><p>这是一个离散分布，期望值等于各种可能概率值加权后的和<br>但是这里存在一个问题，不满意和满意并不是一个数，如何计算？<br>我们可以设不满意的值为0，满意为1．这样就可以计算了．<br>$$\mu = 0.4 \times 0 + 0.6 \times 1＝0.6$$</p><blockquote><p>显然是不会有一个人认为是0.6的，说他60％满意，40％不满意，他只能选择满意和不满意．（只能是0 or 1）<br>均值（期望值）不在分布上</p></blockquote><blockquote><p>如果调查100个人，这意味着期望值是60，也就是期望：60人认为是满意的，40人认为不满意</p></blockquote><h4 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h4><blockquote><p>方差可以认为是离均值或者期望值的距离的平方的概率加权和</p></blockquote><p>$$\sigma = 0.4 \times {(0-0.6)^2} + 0.6 \times {(1-0.6)^2} = 0.24$$</p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 均值 </tag>
            
            <tag> 方差 </tag>
            
            <tag> 伯努利分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学40：置信区间</title>
      <link href="/2019/01/23/stats-40/"/>
      <url>/2019/01/23/stats-40/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="置信区间"><a href="#置信区间" class="headerlink" title="置信区间"></a>置信区间</h1><p>You samole 36 apples from your farm’s harvest of over 200,000 apples. The mean weight of the sample is 112 grams(with a 40 gram sample standard deviation). What is the probability that the mean weight of all 200,000 apples is within 100 and 124 grams?</p><p>从农场收获的20万苹果中抽取36个作为样本，样本中苹果重量的均值是112g（标准差是40g）．20万个苹果的重量均值处于100g到124g之间的概率是多少？</p><p>均值处于100-124，等价于问总体均值落于在样本均值左右12g范围内的概率<br>即<br>$$P(\mu　 is 　within 　12　 of　 \bar{x})$$</p><p>距离是相对的，这相当于样本均值在总体均值左右12g的概率<br>即问题转化为求<br>$$P(\bar{x}　 is　 within　 12 　of　 \mu)$$</p><p>总体均值等于抽样分布的均值<br>$$P(\bar{x}　is　within　12　of　\mu_{\bar{x}})$$</p><p>最后问题转化为求　样本均值落在抽样分布左右12g的范围<br>这个问题上一节求解过</p><p>总体标准差$\sigma$用样本标准差$S$估计为40<br>样本均值抽样分布的标准差$\sigma_{\bar{x}} = \frac{\sigma}{\sqrt{36}} = 6.67$</p><p>z分数<br>$$12/6.67 = 1.8$$</p><p>查表<br>$$(0.9641-0.5) \ times 2=0.9282$$<br><img src="/images/stats/s_40.png" alt="图片"></p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 置信区间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫19：分布式爬虫</title>
      <link href="/2019/01/22/spider-19/"/>
      <url>/2019/01/22/spider-19/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="分布式爬虫"><a href="#分布式爬虫" class="headerlink" title="分布式爬虫"></a>分布式爬虫</h2><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> 分布式 </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫16：爬虫框架Scrapy04</title>
      <link href="/2019/01/22/spider-16/"/>
      <url>/2019/01/22/spider-16/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="爬虫框架Scrapy"><a href="#爬虫框架Scrapy" class="headerlink" title="爬虫框架Scrapy"></a>爬虫框架Scrapy</h2><h3 id="图片管道"><a href="#图片管道" class="headerlink" title="图片管道"></a>图片管道</h3><blockquote><p>继承了框架内已经搭建好的图片管道类，并重写它的方法．pipelines.py文件的代码是有注释的．</p></blockquote><ul><li><p>网站：<br>  <a href="http://image.so.com/z?ch=beauty" target="_blank" rel="noopener">http://image.so.com/z?ch=beauty</a></p></li><li><p><strong>QueryString</strong>:<br>  ch:beauty<br>  sn:?  # 表示图片编号　0（0-30）．．．<br>  listtype:new<br>  temp:1</p></li><li><p><strong>Request URL</strong>:<br>  <a href="http://image.so.com/zj?ch=beauty&amp;sn=30&amp;listtype=new&amp;temp=1" target="_blank" rel="noopener">http://image.so.com/zj?ch=beauty&amp;sn=30&amp;listtype=new&amp;temp=1</a></p></li></ul><h4 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h4><p><strong>终端</strong></p><p><code>cd /jent/project/spider/spider_14</code><br><code>scrapy startproject SO</code><br><code>cd Csdn</code><br><code>scrapy genspider so image.so.com</code></p><h4 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h4><p><strong>items.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">SoItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># define the fields for your item here like:</span>    imgLink <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h4><p><strong>so.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">from</span> So<span class="token punctuation">.</span>items <span class="token keyword">import</span> SoItem<span class="token keyword">import</span> json<span class="token keyword">class</span> <span class="token class-name">SoSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'so'</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'image.so.com'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># start_urls = ['http://image.so.com/']</span>    <span class="token comment" spellcheck="true"># 重写Spider中start_requests()方法</span>    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 拼接URL并发给调度器</span>        baseurl <span class="token operator">=</span> <span class="token string">'http://image.so.com/zj?'</span>        <span class="token keyword">for</span> page <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            params <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">'ch'</span><span class="token punctuation">:</span> <span class="token string">'beauty'</span><span class="token punctuation">,</span>                <span class="token string">'sn'</span><span class="token punctuation">:</span> str<span class="token punctuation">(</span>page <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">'listtype'</span><span class="token punctuation">:</span> <span class="token string">'new'</span><span class="token punctuation">,</span>                <span class="token string">'temp'</span><span class="token punctuation">:</span> <span class="token string">'1'</span>            <span class="token punctuation">}</span>            params <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>params<span class="token punctuation">)</span>            url <span class="token operator">=</span> baseurl <span class="token operator">+</span> params            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parseImage<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parseImage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> SoItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># response.text获取响应内容</span>        html <span class="token operator">=</span> response<span class="token punctuation">.</span>text        imgDict <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span>        <span class="token keyword">for</span> img <span class="token keyword">in</span> imgDict<span class="token punctuation">[</span><span class="token string">'list'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            item<span class="token punctuation">[</span><span class="token string">'imgLink'</span><span class="token punctuation">]</span> <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token string">'qhimg_url'</span><span class="token punctuation">]</span>            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step4"><a href="#step4" class="headerlink" title="step4"></a>step4</h4><p><strong>settings.py</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 更改</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.81 Safari/537.36'</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment" spellcheck="true"># 添加</span>LOG_LEVEL <span class="token operator">=</span> <span class="token string">'WARNING'</span><span class="token comment" spellcheck="true">## 定义图片保存路径</span>IMAGES_STORE <span class="token operator">=</span> <span class="token string">'/jent/project/spider/spider_14/So'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step5"><a href="#step5" class="headerlink" title="step5"></a>step5</h4><p><strong>pipelines.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 导入scrapy定义好的图片管道类</span><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>pipelines<span class="token punctuation">.</span>images <span class="token keyword">import</span> ImagesPipeline<span class="token keyword">import</span> scrapy<span class="token comment" spellcheck="true"># 继承图片管道类</span><span class="token keyword">class</span> <span class="token class-name">SoPipeline</span><span class="token punctuation">(</span>ImagesPipeline<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">get_media_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''重写        '''</span>        <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'imgLink'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step6"><a href="#step6" class="headerlink" title="step6"></a>step6</h4><p><strong>终端启动爬虫</strong></p><p>/jent/project/spider/spider_14/So &gt;&gt;&gt;<code>scrapy crawl so</code></p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片 </tag>
            
            <tag> 爬虫Spider </tag>
            
            <tag> 动态 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫17：爬虫框架Scrapy05</title>
      <link href="/2019/01/22/spider-17/"/>
      <url>/2019/01/22/spider-17/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="爬虫框架Scrapy"><a href="#爬虫框架Scrapy" class="headerlink" title="爬虫框架Scrapy"></a>爬虫框架Scrapy</h2><h4 id="scrapy-shell使用"><a href="#scrapy-shell使用" class="headerlink" title="scrapy shell使用"></a>scrapy shell使用</h4><table><thead><tr><th style="text-align:left">代码</th><th style="text-align:left">　含义</th></tr></thead><tbody><tr><td style="text-align:left">scrapy shell URL</td><td style="text-align:left">地址</td></tr><tr><td style="text-align:left">request.headers</td><td style="text-align:left">请求头　字典</td></tr><tr><td style="text-align:left">request.meta</td><td style="text-align:left">定义代理等相关信息　字典</td></tr><tr><td style="text-align:left">request.text</td><td style="text-align:left">字符串</td></tr><tr><td style="text-align:left">response.body</td><td style="text-align:left">字节流</td></tr><tr><td style="text-align:left">response.xpath(‘’)</td><td style="text-align:left">搜索</td></tr></tbody></table><h4 id="scrapy-Request-常用参数"><a href="#scrapy-Request-常用参数" class="headerlink" title="scrapy.Request()常用参数"></a>scrapy.Request()常用参数</h4><table><thead><tr><th style="text-align:left"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">url</td><td style="text-align:left">地址</td></tr><tr><td style="text-align:left">callback</td><td style="text-align:left">回调函数</td></tr><tr><td style="text-align:left">headers</td><td style="text-align:left">请求头</td></tr><tr><td style="text-align:left">meta</td><td style="text-align:left">代理等相关信息</td></tr><tr><td style="text-align:left">dont_filter</td><td style="text-align:left">是否忽略域组限制 Ture不检查allowed_domains=［＇＇］，默认False</td></tr><tr><td style="text-align:left">encoding</td><td style="text-align:left">默认utf-8</td></tr></tbody></table><h4 id="下载器中间件（随机User-Agent）"><a href="#下载器中间件（随机User-Agent）" class="headerlink" title="下载器中间件（随机User-Agent）"></a>下载器中间件（随机User-Agent）</h4><table><thead><tr><th style="text-align:left">操作文件</th><th style="text-align:left">配置命令</th></tr></thead><tbody><tr><td style="text-align:left">setting.py（少量User-Agent）</td><td style="text-align:left">USER_AGENT = ‘’</td></tr><tr><td style="text-align:left"></td><td style="text-align:left">DEFAULT_REQUEST_HEADRES = {}</td></tr></tbody></table><ul><li>setting.py（少量User-Agent）<br>  USER_AGENT = ‘’<br>  DEFAULT_REQUEST_HEADRES = {}</li><li>middlewares.py设置中间件<br>  1.项目目录新建useragets.py，存放agent<pre><code>  uaList = [&#39;&#39;, &#39;&#39; ,&#39;&#39;,...]</code></pre>  2.middlewares.py中创建中间件类<pre><code>  from xxx.useragents import *  class RandomUAmiddleware(boject):      def process_request(self, request, spider):          # 此处注意headers属性          request.headers[&#39;User-Agent&#39;] = ...</code></pre>  3.开启中间件<pre><code>  setting.py设置  DOWNLOADER_MIDDLEWARES = </code></pre></li></ul><h4 id="升级Scrapy"><a href="#升级Scrapy" class="headerlink" title="升级Scrapy"></a>升级Scrapy</h4><ul><li>安装pip<br>  官网下载pip解压<br>  cd到解压路径　执行<code>python setup.py install</code></li><li>升级<br>  python -m pip install –upgrade Scrapy</li></ul><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> Scrapy </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫18：OCR光学识别</title>
      <link href="/2019/01/22/spider-18/"/>
      <url>/2019/01/22/spider-18/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="OCR光学识别"><a href="#OCR光学识别" class="headerlink" title="OCR光学识别"></a>OCR光学识别</h2><p>unbutu<br><code>sudo apt-get install tesseract-ocr</code><br>mac<br><code>brew install tesseract</code></p><p><code>tesseract test1.jpg test1</code></p><blockquote><p>如果想要更强大的识别，去更改它的训练集</p></blockquote><p>pytesseract模块</p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> OCR </tag>
            
            <tag> pytesseract </tag>
            
            <tag> 验证码识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫15：爬虫框架Scrapy03</title>
      <link href="/2019/01/22/spider-15/"/>
      <url>/2019/01/22/spider-15/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="爬虫框架Scrapy"><a href="#爬虫框架Scrapy" class="headerlink" title="爬虫框架Scrapy"></a>爬虫框架Scrapy</h2><h3 id="警告级别／日志文件"><a href="#警告级别／日志文件" class="headerlink" title="警告级别／日志文件"></a>警告级别／日志文件</h3><p>LOG_LEVEL = ‘’<br>LOG_FILE = ‘文件名.log’</p><p><strong>LOG_LEVEL值：</strong></p><table><thead><tr><th style="text-align:left">　级别</th><th style="text-align:left">值</th><th style="text-align:left">表示</th><th style="text-align:left">结果</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">CRITICAL</td><td style="text-align:left">严重错误</td><td style="text-align:left">显示CRITICAL</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">ERROR</td><td style="text-align:left">普通错误　</td><td style="text-align:left">显示ERROR及以上</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">WARNING</td><td style="text-align:left">警告信心</td><td style="text-align:left">显示WARNING及以上</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">INFO</td><td style="text-align:left">一般信息　</td><td style="text-align:left">只显示INFO</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">DEBUG</td><td style="text-align:left">调试信息　</td><td style="text-align:left">显示DEBUG &amp; INFO</td></tr></tbody></table><h3 id="保存csv-json文件"><a href="#保存csv-json文件" class="headerlink" title="保存csv json文件"></a>保存csv json文件</h3><p>在setting.py文件设置编码<br>FEED_EXPORT_ENCODING = ‘编码’</p><blockquote><p>windows excel打开csv为’db-18030’</p></blockquote><p><code>scrapy crawl 程序名　-o 程序名.json</code><br><code>scrapy crawl 程序名　-o 程序名.csv</code></p><blockquote><p>CSV可能会出现空行　更改原码设置newline<br>-&gt; scrapy文件夹<br>-&gt; exporters.py文件<br>ctrl+F Csv-&gt;Class CsvItem…<br>-&gt; self.stream = io.TextIOWrapper(file, <code>newline=&#39;&#39;</code>,…)</p></blockquote><h3 id="腾讯招聘项目"><a href="#腾讯招聘项目" class="headerlink" title="腾讯招聘项目"></a>腾讯招聘项目</h3><ul><li>网址<br>  <a href="https://hr.tencent.com/position.php?start=0" target="_blank" rel="noopener">https://hr.tencent.com/position.php?start=0</a></li><li>xpath:</li></ul><table><thead><tr><th style="text-align:left">　目标</th><th style="text-align:left">表达式</th></tr></thead><tbody><tr><td style="text-align:left">基准</td><td style="text-align:left">　<code>//tr[@class=&quot;even&quot;] ｜ //tr[@class=&quot;odd&quot;]</code></td></tr><tr><td style="text-align:left">职位名称</td><td style="text-align:left"><code>./td[1]/a/text()</code></td></tr><tr><td style="text-align:left">职位类别</td><td style="text-align:left"><code>./td[2]/text()</code></td></tr><tr><td style="text-align:left">招聘人数</td><td style="text-align:left"><code>./td[3]/text()</code></td></tr><tr><td style="text-align:left">招聘地点</td><td style="text-align:left"><code>./td[4]/text()</code></td></tr><tr><td style="text-align:left">发布时间</td><td style="text-align:left"><code>./td[5]/text()</code></td></tr><tr><td style="text-align:left">职位链接</td><td style="text-align:left"><code>./td[1]/a/@href</code></td></tr></tbody></table><h4 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h4><p><strong>终端</strong></p><p><code>cd /jent/project/spider/spider_14</code><br><code>scrapy startproject Tengxun</code><br><code>cd Csdn</code><br><code>scrapy genspider tengxun hr.tencent.com</code></p><h4 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h4><p><strong>items.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">TengxunItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># define the fields for your item here like:</span>    zhName <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    zhLink <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    zhType <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    zhNum <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    zhAddress <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    zhTime <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h4><p><strong>tengxun.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> Tengxun<span class="token punctuation">.</span>items <span class="token keyword">import</span> TengxunItem<span class="token keyword">class</span> <span class="token class-name">TengxunSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'tengxun'</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hr.tencent.com'</span><span class="token punctuation">]</span>    url <span class="token operator">=</span> <span class="token string">'https://hr.tencent.com/position.php?start='</span>    <span class="token comment" spellcheck="true"># 第1页地址发给引擎</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://hr.tencent.com/position.php?start=0'</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> page <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2860</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            fullurl <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> str<span class="token punctuation">(</span>page<span class="token punctuation">)</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>fullurl<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parseHtml<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parseHtml</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> TengxunItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        baseList <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//tr[@class="even"]|//tr[@class="odd"]'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> base <span class="token keyword">in</span> baseList<span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhName'</span><span class="token punctuation">]</span> <span class="token operator">=</span> base<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./td[1]/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhName'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'None'</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhType'</span><span class="token punctuation">]</span> <span class="token operator">=</span> base<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./td[2]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhType'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'None'</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhNum'</span><span class="token punctuation">]</span> <span class="token operator">=</span> base<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./td[3]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhNum'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'None'</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhAddress'</span><span class="token punctuation">]</span> <span class="token operator">=</span> base<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./td[4]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhAddress'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'None'</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhTime'</span><span class="token punctuation">]</span> <span class="token operator">=</span> base<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./td[5]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhTime'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'None'</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhLink'</span><span class="token punctuation">]</span> <span class="token operator">=</span> base<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./td[1]/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">except</span><span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'zhLink'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'None'</span>            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step4"><a href="#step4" class="headerlink" title="step4"></a>step4</h4><p><strong>settings.py</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 更改</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span>CONCURRENT_REQUESTS <span class="token operator">=</span> <span class="token number">32</span>DEFAULT_REQUEST_HEADERS <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.81 Safari/537.36'</span><span class="token punctuation">,</span>  <span class="token string">'Accept'</span><span class="token punctuation">:</span> <span class="token string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span><span class="token punctuation">,</span>  <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span> <span class="token string">'en'</span><span class="token punctuation">,</span><span class="token punctuation">}</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token string">'Tengxun.pipelines.TengxunPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>   <span class="token string">'Tengxun.pipelines.TengxunMongoPiprline'</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 添加</span>LOG_LEVEL <span class="token operator">=</span> <span class="token string">'WARNING'</span><span class="token comment" spellcheck="true">## 导出编码</span>FEED_EXPORT_ENCODING <span class="token operator">=</span> <span class="token string">'db-18030'</span>MOGON_HOST <span class="token operator">=</span> <span class="token string">'localhost'</span>MONGO_POST <span class="token operator">=</span> <span class="token number">27017</span>MONGO_DB <span class="token operator">=</span> <span class="token string">'tengxundb'</span>MONGO_SET <span class="token operator">=</span> <span class="token string">'tengxunset'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step5"><a href="#step5" class="headerlink" title="step5"></a>step5</h4><p><strong>pipelines.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> pymongo<span class="token keyword">from</span> Tengxun<span class="token punctuation">.</span>settings <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">class</span> <span class="token class-name">TengxunPipeline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'*'</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'zhName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'zhType'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'zhNum'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'zhAddress'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'zhTime'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'zhLink'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'*'</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item<span class="token keyword">class</span> <span class="token class-name">TengxunMongoPiprline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    conn <span class="token operator">=</span> pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span>MOGON_HOST<span class="token punctuation">,</span> MONGO_POST<span class="token punctuation">)</span>    db <span class="token operator">=</span> conn<span class="token punctuation">[</span>MONGO_DB<span class="token punctuation">]</span>    myset <span class="token operator">=</span> db<span class="token punctuation">[</span>MONGO_SET<span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> dict<span class="token punctuation">(</span>item<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>myset<span class="token punctuation">.</span>insert_one<span class="token punctuation">(</span>d<span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'OVER'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step6"><a href="#step6" class="headerlink" title="step6"></a>step6</h4><p><strong>终端启动爬虫</strong></p><p>/jent/project/spider/spider_14/Tengxun &gt;&gt;&gt;<code>scrapy crawl tengxun -o tengxun.csv</code></p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> Scrapy </tag>
            
            <tag> 警告信息 </tag>
            
            <tag> CSV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫14：爬虫框架Scrapy02</title>
      <link href="/2019/01/22/spider-14/"/>
      <url>/2019/01/22/spider-14/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="爬虫框架Scrapy"><a href="#爬虫框架Scrapy" class="headerlink" title="爬虫框架Scrapy"></a>爬虫框架Scrapy</h2><h3 id="yield"><a href="#yield" class="headerlink" title="yield"></a>yield</h3><ul><li>把1个函数当作1个生成器来使用</li><li>让函数暂停，等待下一次调用<blockquote><p>记录执行的位置，每次开始都是从上次停止的地地方继续，不会从头开始．</p></blockquote></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fun_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'启动生成器'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> i    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'*'</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>fun <span class="token operator">=</span> fun_1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>fun<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>extract()<br>  获取选择器对象中的文本内容<br>  response.xpath(‘’).extract() 返回列表</li><li>pipelines.py<br>  每个类中必须有函数process_item<br>  def process_item(self, item, spider):<br>  　　return item<blockquote><p>如果没有return item　那么意味着返回值为None，优先级低的管道实际是用的高的返回的item．</p></blockquote></li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h4><p><strong>终端</strong></p><p><code>cd /jent/project/spider/spider_14</code><br><code>scrapy startproject Csdn</code><br><code>cd Csdn</code><br><code>scrapy genspider csdn blog.csdn.net</code></p><h4 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h4><p><strong>items.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">class</span> <span class="token class-name">CsdnItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># define the fields for your item here like:</span>    <span class="token comment" spellcheck="true"># 标题</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 时间</span>    time <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 数量</span>    number <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h4><p><strong>csdn.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scrapy<span class="token keyword">from</span> Csdn<span class="token punctuation">.</span>items <span class="token keyword">import</span> CsdnItem<span class="token keyword">class</span> <span class="token class-name">CsdnSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'csdn'</span>    <span class="token comment" spellcheck="true"># 允许爬取的域名</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'blog.scdn.net'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 启始地址</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://blog.csdn.net/sanpang2288/article/details/86668926'</span><span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        item <span class="token operator">=</span> CsdnItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//h1[@class="title-article"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        item<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//span[@class="time"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        item<span class="token punctuation">[</span><span class="token string">'number'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//span[@class="read-count"]/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step4"><a href="#step4" class="headerlink" title="step4"></a>step4</h4><p><strong>settings.py</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 更改</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.81 Safari/537.36'</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment" spellcheck="true">## 数字为执行优先级</span>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token string">'Csdn.pipelines.CsdnPipeline'</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>   <span class="token string">'Csdn.pipelines.CsdnMongoPipeline'</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>   <span class="token string">'Csdn.pipelines.CsdnMysqlPipeline'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 添加</span><span class="token comment" spellcheck="true">## 下一节介绍</span>LOG_LEVEL <span class="token operator">=</span> <span class="token string">'WARNING'</span><span class="token comment" spellcheck="true">## MongoDB相关变量</span>MONGO_HOST <span class="token operator">=</span> <span class="token string">'localhost'</span>MONGO_PORT <span class="token operator">=</span> <span class="token number">27017</span>MONGO_DB <span class="token operator">=</span> <span class="token string">'csdndb'</span>MONGO_SET <span class="token operator">=</span> <span class="token string">'csdnset'</span><span class="token comment" spellcheck="true">## Mysql相关变量</span>MYSQL_HOST <span class="token operator">=</span> <span class="token string">'localhost'</span>MYSQL_USER <span class="token operator">=</span> <span class="token string">'root'</span>MYSQL_PWD <span class="token operator">=</span> <span class="token string">'123456'</span>MYSQL_DB <span class="token operator">=</span> <span class="token string">'csdndb'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step5"><a href="#step5" class="headerlink" title="step5"></a>step5</h4><p><strong>pipelines.py文件</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> pymongo<span class="token keyword">import</span> pymysql<span class="token keyword">from</span> Csdn<span class="token punctuation">.</span>settings <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">class</span> <span class="token class-name">CsdnPipeline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'number'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item<span class="token keyword">class</span> <span class="token class-name">CsdnMongoPipeline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''存入MongoDB数据库    '''</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span>MONGO_HOST<span class="token punctuation">,</span> MONGO_PORT<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>db <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">[</span>MONGO_DB<span class="token punctuation">]</span>        self<span class="token punctuation">.</span>myset <span class="token operator">=</span> self<span class="token punctuation">.</span>db<span class="token punctuation">[</span>MONGO_SET<span class="token punctuation">]</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> dict<span class="token punctuation">(</span>item<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>myset<span class="token punctuation">.</span>insert_one<span class="token punctuation">(</span>d<span class="token punctuation">)</span>        <span class="token keyword">return</span> item<span class="token keyword">class</span> <span class="token class-name">CsdnMysqlPipeline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''存入Mysql数据库    '''</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>            MYSQL_HOST<span class="token punctuation">,</span>            MYSQL_USER<span class="token punctuation">,</span>            MYSQL_PWD<span class="token punctuation">,</span>            MYSQL_DB<span class="token punctuation">,</span>            charset<span class="token operator">=</span><span class="token string">'utf8'</span>        <span class="token punctuation">)</span>        self<span class="token punctuation">.</span>sursor <span class="token operator">=</span> self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        ins <span class="token operator">=</span> <span class="token string">'insert into csdntab values(%s, %s, %s)'</span>        L <span class="token operator">=</span> <span class="token punctuation">[</span>            item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            item<span class="token punctuation">[</span><span class="token string">'time'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            item<span class="token punctuation">[</span><span class="token string">'number'</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>exectue<span class="token punctuation">(</span>ins<span class="token punctuation">,</span> L<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> item    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''自动调用的结束函数        '''</span>        self<span class="token punctuation">.</span>sursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 数据库建表命令</span>    <span class="token comment" spellcheck="true"># create database csdndb charset=utf8;</span>    <span class="token comment" spellcheck="true"># use scdndb;</span>    <span class="token comment" spellcheck="true"># cerate table csdntb(</span>    <span class="token comment" spellcheck="true">#     title varchar(100),</span>    <span class="token comment" spellcheck="true">#     time varchar(100),</span>    <span class="token comment" spellcheck="true">#     number varchar(100)</span>    <span class="token comment" spellcheck="true"># )charset=utf8;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="step6"><a href="#step6" class="headerlink" title="step6"></a>step6</h4><p><strong>终端启动爬虫</strong></p><p>/jent/project/spider/spider_14/Csdn &gt;&gt;&gt;<code>scrapy crawl csdn</code></p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> Scrapy </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫13：爬虫框架Scrapy</title>
      <link href="/2019/01/22/spider-13/"/>
      <url>/2019/01/22/spider-13/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="爬虫框架Scrapy"><a href="#爬虫框架Scrapy" class="headerlink" title="爬虫框架Scrapy"></a>爬虫框架Scrapy</h2><p>异步处理框架，可配置和可扩展程度非常高高，python中使用最广泛的爬虫框架<br><a href="https://docs.scrapy.org/en/latest/" target="_blank" rel="noopener">详细</a></p><blockquote><p>Scrapy安装镜像（Anaconda Prompt安装命令）<br><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</code><br><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</code><br><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</code><br><code>conda config --set show_channel_urls yes</code><br><strong><code>conda install Scrapy</code></strong></p></blockquote><blockquote><p>Ubuntu安装<br><code>sudo apt_get install libssl-dev</code><br><code>sudo apt_get install libffi-dev</code><br><code>sudo apt_get install build-essential</code><br><code>sudo apt_get install python3-dev</code><br><code>sudo apt_get install liblxml2</code><br><code>sudo apt_get install liblxml2-dev</code><br><code>sudo apt_get install libxslt1-dev</code><br><code>sudo apt_get install zlib1g-dev</code><br>升级pyasn1<br><code>sido pip3 install pysan1==0.4.4</code><br><strong><code>sudo pip3 install Scrapy</code></strong></p></blockquote><p><img src="/images/spider/sp_13.png" alt="图片"></p><h3 id="项目步骤"><a href="#项目步骤" class="headerlink" title="项目步骤"></a>项目步骤</h3><ul><li>新建项目<br>  scrapy startproject 项目名</li><li>明确目标<br>  items.py</li><li>制作爬虫程序<br>  scrapy genspider 文件名 域名</li><li>数据处理<br>  pipelines.py</li><li>运行爬虫程序<br>  scrapy crawl 文件名<blockquote><p>选择在编辑器运行，创建.py文件，内容如下．直接运行该文件．<br>  from scrapy import cmdline<br>  cmdline.execute(‘scrapy crawl 文件名’.split())</p></blockquote></li></ul><p>例子：<br>终端命令<br><code>cd /jent/project/spider/spider_13</code><br><code>scrapy startproject Baidu</code><br>out:<br>New Scrapy project ‘Baidu’, using template directory ‘/usr/local/lib/python2.7/dist-packages/scrapy/templates/project’, created in:<br>    /home/tarena/jent/project/spider/spider_13/Baidu</p><p>You can start your first spider with:<br>    cd Baidu<br>    scrapy genspider example example.com</p><p><code>cd Baidu</code><br><code>scrapy genspider baidu www.baidu.com</code><br>out:<br>Created spider ‘baidu’ using template ‘basic’ in module:<br>  Baidu.spiders.baidu</p><p>打开项目目录下的baidu下的settings.py文件<br>更改<code>ROBOTSTXT_OBEY = False</code></p><blockquote><p>如果你想爬的内容更广泛，那么不要去遵守协议．不过这并不是一个好的职业道德行为．</p></blockquote><h3 id="项目文件"><a href="#项目文件" class="headerlink" title="项目文件"></a>项目文件</h3><ul><li><p>项目目录<br>  Baidu<br>  ├── Baidu　　　　　　　　　　　　# 项目目录<br>  │   ├── ＿＿init＿＿.py<br>  │   ├── ＿＿init＿＿.pyc<br>  │   ├── items.py　　　　　　　　# 定义数据结构<br>  │   ├── middlewares.py<br>  │   ├── pipelines.py         # 管道文件<br>  │   ├── settings.py　　　　　　# 定义全局配置<br>  │   ├── settings.pyc<br>  │   └── spiders<br>  │       ├── baidu.py　　　　　# 爬虫文件<br>  │       ├── ＿＿init＿＿.py<br>  │       └── ＿＿init＿＿.pyc<br>  └── scrapy.cfg</p></li><li><p>setting.py配置</p><ul><li>遵守ROBOX协议<br>  ROBOTSTXT_OBEY = False</li><li>设置并发数量<br>  CONCURRENT_REQUESTS = 32</li><li>下载延迟时间<br>  DOWNLOAD_DELAY = 1</li><li><strong>请求头</strong><br>  DEFAULT_REQUEST_HEADERS = {}</li><li><strong>项目管道</strong><br>  ITEM_PIPELINES = {‘Baidu.pipelines.BaiduPipeline’: 300,}</li></ul></li></ul><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> 框架 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫12：BeautifulSoup解析</title>
      <link href="/2019/01/22/spider-12/"/>
      <url>/2019/01/22/spider-12/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="BeautifulSoup解析"><a href="#BeautifulSoup解析" class="headerlink" title="BeautifulSoup解析"></a>BeautifulSoup解析</h2><blockquote><p>依赖于lxml<br>Anaconda Prompt:<code>conda install beautifulsoup4</code></p></blockquote><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><table><thead><tr><th style="text-align:left">from bs4 import BeautifulSoup</th><th>导入模块</th></tr></thead><tbody><tr><td style="text-align:left">soup = Beautiful(html, ‘’)</td><td>绑定</td></tr><tr><td style="text-align:left">rList = soup.finf_all(条件)</td><td>对象节点对象查找</td></tr></tbody></table><p>示例代码</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSouphtml <span class="token operator">=</span> <span class="token triple-quoted-string string">'''&lt;div class="test1">hello world&lt;/div>&lt;div class="test1">hello universe&lt;/div>&lt;div class="test2">    &lt;span>熵限与宇宙膨胀&lt;/span>&lt;/div>'''</span>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>rList <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'test1'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">for</span> r <span class="token keyword">in</span> rList<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#Out: hello world</span>    <span class="token comment" spellcheck="true">#Out: hello universe</span>rList <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'test2'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">for</span> r <span class="token keyword">in</span> rList<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># print(r.get_text())</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>span<span class="token punctuation">.</span>string<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#Out: 熵限与宇宙膨胀</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="支持的解析库"><a href="#支持的解析库" class="headerlink" title="支持的解析库"></a>支持的解析库</h4><table><thead><tr><th style="text-align:left">库</th><th style="text-align:left">特点</th></tr></thead><tbody><tr><td style="text-align:left">lxml</td><td style="text-align:left">速度快　文档容错能力强</td></tr><tr><td style="text-align:left">html.parser</td><td style="text-align:left">python标准库　速度一般　容错能力一般</td></tr><tr><td style="text-align:left">xml</td><td style="text-align:left">速度快　文档容错能力强</td></tr></tbody></table><blockquote><p>没有安装lxml可以用html.parser</p></blockquote><h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">解释</th></tr></thead><tbody><tr><td style="text-align:left">find_all()</td><td style="text-align:left">返回列表　Ex:rList=soup.find_all(‘div’, {‘id’:’test’})</td></tr><tr><td style="text-align:left">节点对象.get_text()</td><td style="text-align:left">获取节点下的所有文本内容，包括字节点</td></tr><tr><td style="text-align:left">节点对象.string</td><td style="text-align:left">获得节点下的文本内容</td></tr></tbody></table><h3 id="链家数据"><a href="#链家数据" class="headerlink" title="链家数据"></a>链家数据</h3><p><a href="https://xa.lianjia.com/ershoufang/" target="_blank" rel="noopener">https://xa.lianjia.com/ershoufang/</a></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> pymongo<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">class</span> <span class="token class-name">LianjiaSpider</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">'https://bj.lianjia.com/ershoufang/'</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0'</span><span class="token punctuation">}</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span>                        <span class="token string">'172.40.91.200'</span><span class="token punctuation">,</span><span class="token number">27017</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>db <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">[</span><span class="token string">'lianjiadb'</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>myset <span class="token operator">=</span> self<span class="token punctuation">.</span>db<span class="token punctuation">[</span><span class="token string">'houseinfo'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 获取页面</span>    <span class="token keyword">def</span> <span class="token function">getPage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>        html <span class="token operator">=</span> res<span class="token punctuation">.</span>text        self<span class="token punctuation">.</span>parsePage<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 解析并保存数据</span>    <span class="token keyword">def</span> <span class="token function">parsePage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>        soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 找到每个房源的节点对象列表</span>        rList <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">,</span>            attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'clear LOGCLICKDATA'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> r <span class="token keyword">in</span> rList<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true">#####################################</span>            <span class="token comment" spellcheck="true"># 找houseInfo节点</span>            houseInfo <span class="token operator">=</span> r<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span>attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'houseInfo'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>            infoList <span class="token operator">=</span> houseInfo<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 德露苑 /2室1厅/71.4平米/南/简装/无电梯</span>            name <span class="token operator">=</span> infoList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>            huxing <span class="token operator">=</span> infoList<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>            area <span class="token operator">=</span> infoList<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">##############################################</span>            <span class="token comment" spellcheck="true"># positionInfo信息</span>            positionInfo <span class="token operator">=</span> r<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span>                    attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token string">'positionInfo'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>            pList <span class="token operator">=</span> positionInfo<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># print(pList)</span>            <span class="token comment" spellcheck="true"># ['低楼层(共18层)', '2000年建塔楼', '五棵松']</span>            floor <span class="token operator">=</span> pList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            year <span class="token operator">=</span> pList<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            address <span class="token operator">=</span> pList<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true">#########################################</span>            <span class="token comment" spellcheck="true"># 单价 和 总价</span>            totalPrice <span class="token operator">=</span> r<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'totalPrice'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>            unitPrice <span class="token operator">=</span> r<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span><span class="token string">'unitPrice'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">########################################</span>            d <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">'名称'</span> <span class="token punctuation">:</span> name<span class="token punctuation">,</span>                <span class="token string">'户型'</span> <span class="token punctuation">:</span> huxing<span class="token punctuation">,</span>                <span class="token string">'面积'</span> <span class="token punctuation">:</span> area<span class="token punctuation">,</span>                <span class="token string">'楼层'</span> <span class="token punctuation">:</span> floor<span class="token punctuation">,</span>                <span class="token string">'年份'</span> <span class="token punctuation">:</span> year<span class="token punctuation">,</span>                <span class="token string">'地点'</span> <span class="token punctuation">:</span> address<span class="token punctuation">,</span>                <span class="token string">'总价'</span> <span class="token punctuation">:</span> totalPrice<span class="token punctuation">,</span>                <span class="token string">'单价'</span> <span class="token punctuation">:</span> unitPrice            <span class="token punctuation">}</span>            self<span class="token punctuation">.</span>myset<span class="token punctuation">.</span>insert_one<span class="token punctuation">(</span>d<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 主函数</span>    <span class="token keyword">def</span> <span class="token function">workOn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    spider <span class="token operator">=</span> LianjiaSpider<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider<span class="token punctuation">.</span>workOn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解析 </tag>
            
            <tag> 爬虫Spider </tag>
            
            <tag> BeautifulSoup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫11：多线程爬取</title>
      <link href="/2019/01/22/spider-11/"/>
      <url>/2019/01/22/spider-11/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="多线程爬取"><a href="#多线程爬取" class="headerlink" title="多线程爬取"></a>多线程爬取</h2><blockquote><ul><li>队列<br>  from multiprocessing import Queue<br>  put()<br>  get() （get_nowait() =&gt; get(False)）</li></ul></blockquote><h3 id="线程创建"><a href="#线程创建" class="headerlink" title="线程创建"></a>线程创建</h3><p><strong><code>from threding import Thread</code></strong><br>t = Thread(target=函数名)<br>t.start()<br>t.join()</p><h3 id="小米应用商店"><a href="#小米应用商店" class="headerlink" title="小米应用商店"></a>小米应用商店</h3><p>小米应用商店应用分类　抓取：应用名称，应用链接</p><p><a href="http://app.mi.com/categotyAllListApi?page=2&amp;categoryId=10&amp;pageSize=30" target="_blank" rel="noopener">http://app.mi.com/categotyAllListApi?page=2&amp;categoryId=10&amp;pageSize=30</a></p><p>F12 -&gt; QueryString<br>page: xx<br>categoryId: 10<br>pageSize: 30</p><p><img src="/images/spider/sp_11.png" alt="图片"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Queue<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread<span class="token keyword">import</span> json<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">MiSpider</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>baseurl <span class="token operator">=</span> <span class="token string">'http://app.mi.com/categotyAllListApi?'</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">}</span>        <span class="token comment" spellcheck="true"># URL队列</span>        self<span class="token punctuation">.</span>urlQueue <span class="token operator">=</span> Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解析队列</span>        self<span class="token punctuation">.</span>parseQueue <span class="token operator">=</span> Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">getUrl</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''拼接地址　入队列        '''</span>        <span class="token keyword">for</span> page <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            params <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">'page'</span><span class="token punctuation">:</span> str<span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">'categoryId'</span><span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>                <span class="token string">'pageSize'</span><span class="token punctuation">:</span> <span class="token string">'30'</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true"># 编码　拼接　入队列</span>            params <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>params<span class="token punctuation">)</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>baseurl <span class="token operator">+</span> params            self<span class="token punctuation">.</span>urlQueue<span class="token punctuation">.</span>put<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">getHtml</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''发送请求　把html给解析队列        '''</span>        <span class="token keyword">while</span> <span class="token operator">not</span> self<span class="token punctuation">.</span>urlQueue<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>urlQueue<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>            res <span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>            res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>            html <span class="token operator">=</span> res<span class="token punctuation">.</span>text            self<span class="token punctuation">.</span>parseQueue<span class="token punctuation">.</span>put<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parseHtml</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''提取        '''</span>        <span class="token keyword">while</span> <span class="token operator">not</span> self<span class="token punctuation">.</span>parseQueue<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            html <span class="token operator">=</span> self<span class="token punctuation">.</span>parseQueue<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>            hList <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>            <span class="token comment" spellcheck="true"># hList [{},{}]</span>            <span class="token keyword">for</span> h <span class="token keyword">in</span> hList<span class="token punctuation">:</span>                name <span class="token operator">=</span> h<span class="token punctuation">[</span><span class="token string">'displayName'</span><span class="token punctuation">]</span>                d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'应用名称'</span><span class="token punctuation">:</span> name<span class="token punctuation">,</span> <span class="token string">'应用链接'</span><span class="token punctuation">:</span> <span class="token string">'http://app.mi.com/details?id='</span><span class="token operator">+</span>h<span class="token punctuation">[</span><span class="token string">'packageName'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>                <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'xiaomiAPP.json'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>str<span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">workOn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>getUrl<span class="token punctuation">(</span><span class="token punctuation">)</span>        t1List <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        t2List <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 采集线程</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            t <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>getHtml<span class="token punctuation">)</span>            t1List<span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span>            t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 回收线程</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> t1List<span class="token punctuation">:</span>            i<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 解析</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            t <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>parseHtml<span class="token punctuation">)</span>            t2List<span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span>            t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> t2List<span class="token punctuation">:</span>            i<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    begin <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider <span class="token operator">=</span> MiSpider<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider<span class="token punctuation">.</span>workOn<span class="token punctuation">(</span><span class="token punctuation">)</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sucessful within ___%.2f___'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>begin<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> 线程 </tag>
            
            <tag> 局部页面刷新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫10：selenium phantomjs/Chrome</title>
      <link href="/2019/01/22/spider-10/"/>
      <url>/2019/01/22/spider-10/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="selenium-phantomjs-Chrome"><a href="#selenium-phantomjs-Chrome" class="headerlink" title="selenium phantomjs/Chrome"></a>selenium phantomjs/Chrome</h2><h3 id="selenium"><a href="#selenium" class="headerlink" title="selenium"></a>selenium</h3><p>web自动测试化工具</p><blockquote><p>Anaconda Prompt &gt;&gt;&gt;conda install selenium </p></blockquote><h3 id="phantomjs"><a href="#phantomjs" class="headerlink" title="phantomjs"></a>phantomjs</h3><p>无界面浏览器</p><p>把网站在内存进行页面加载</p><h3 id="chromedrive"><a href="#chromedrive" class="headerlink" title="chromedrive"></a>chromedrive</h3><p><a href="https://chromedriver.storage.googleapis.com/index.html" target="_blank" rel="noopener">https://chromedriver.storage.googleapis.com/index.html</a></p><h3 id="selenium使用"><a href="#selenium使用" class="headerlink" title="selenium使用"></a>selenium使用</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token comment" spellcheck="true"># 创建phantom.js浏览器对象</span>driver <span class="token operator">=</span>  webdriver<span class="token punctuation">.</span>PhantomJS<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 用get发送请求</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.baidu.com/'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取响应内容</span><span class="token keyword">print</span><span class="token punctuation">(</span>driver<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取屏幕截图</span>driver<span class="token punctuation">.</span>save_screenshot<span class="token punctuation">(</span><span class="token string">'百度.png'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 关闭浏览器</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><table><thead><tr><th style="text-align:left">driver.get(url)</th><th style="text-align:left">发送请求</th></tr></thead><tbody><tr><td style="text-align:left">driver.page_source</td><td style="text-align:left">获取响应的html</td></tr><tr><td style="text-align:left">driver.page_source.find(‘字符串’)</td><td style="text-align:left">从html源码中搜索指定的字符串（返回-1表示未找到内容）</td></tr><tr><td style="text-align:left">节点对象.send_keys(‘内容’)</td><td style="text-align:left">发送到搜索框</td></tr><tr><td style="text-align:left">节点对象.click()</td><td style="text-align:left">模拟点击</td></tr><tr><td style="text-align:left">driver.quit()</td><td style="text-align:left">退出浏览器</td></tr><tr><td style="text-align:left">driver.execute_script(‘window.scrollTo(0,document.body.scrollHeight)’)</td><td style="text-align:left">把下拉菜单拉到最底部</td></tr></tbody></table><ul><li><p><strong>单元素查找</strong><br>  driver.find_element_by_id(‘’)<br>  driver.find_element_by_name(‘’)<br>  driver.find_element_by_class_name(‘’)<br>  <strong><code>driver.find_element_by_xpath(&#39;&#39;)</code></strong></p></li><li><p><strong>多元素查找</strong><br>  driver.find_elements_by_id(‘’)<br>  driver.find_elements_by_name(‘’)<br>  driver.find_elements_by_class_name(‘’)<br>  <strong><code>driver.find_elements_by_xpath(&#39;&#39;)</code></strong></p><blockquote><p>返回节点对象的列表</p></blockquote></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">import</span> time<span class="token comment" spellcheck="true"># 创建phantom.js浏览器对象</span>driver <span class="token operator">=</span>  webdriver<span class="token punctuation">.</span>PhantomJS<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 打开百度</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://www.baidu.com/'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 接受终端输入内容发送到搜索框</span>key <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'search >>>'</span><span class="token punctuation">)</span>kw <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'kw'</span><span class="token punctuation">)</span>kw<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 点击百度一下</span>su <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_id<span class="token punctuation">(</span><span class="token string">'su'</span><span class="token punctuation">)</span>su<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取屏幕截图</span>driver<span class="token punctuation">.</span>save_screenshot<span class="token punctuation">(</span><span class="token string">'百度.png'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 关闭浏览器</span>driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="chromedriver设置无界面模式"><a href="#chromedriver设置无界面模式" class="headerlink" title="chromedriver设置无界面模式"></a>chromedriver设置无界面模式</h3><pre class="line-numbers language-python"><code class="language-python">opt <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>ChromeOptins<span class="token punctuation">(</span><span class="token punctuation">)</span>opt<span class="token punctuation">.</span>set_headless<span class="token punctuation">(</span><span class="token punctuation">)</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>options<span class="token operator">=</span>opt<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="例子－京东商品信息"><a href="#例子－京东商品信息" class="headerlink" title="例子－京东商品信息"></a>例子－京东商品信息</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">import</span> time<span class="token keyword">import</span> csv<span class="token comment" spellcheck="true"># 创建浏览器对象</span>driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 向京东首页发请求</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.jd.com/'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 发送文字到搜索框</span>key <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入商品:'</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 点击搜索按钮</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># while True:</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 执行JS脚本,进度条拉到最下面</span>    driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span>        <span class="token string">'window.scrollTo(0,document.body.scrollHeight)'</span>    <span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 给页面加载留出时间</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 基准xpath，每个商品的节点对象列表</span>    rList <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_elements_by_xpath<span class="token punctuation">(</span><span class="token string">'//div[@id="J_goodsList"]/ul/li'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> r <span class="token keyword">in</span> rList<span class="token punctuation">:</span>        info <span class="token operator">=</span> r<span class="token punctuation">.</span>text<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># ￥52.80</span>        <span class="token comment" spellcheck="true"># Python编程从入门到实践python3.0绝技核心编程基础教程网络爬虫入门书籍</span>        <span class="token comment" spellcheck="true"># 500 + 条评价</span>        <span class="token comment" spellcheck="true"># 润知天下图书专营店</span>        price <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> info<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'拍拍'</span><span class="token punctuation">:</span>            name <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            commit <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>            market <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            name <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>            commit <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>            market <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>        L <span class="token operator">=</span> <span class="token punctuation">[</span>price<span class="token punctuation">,</span> commit<span class="token punctuation">,</span> market<span class="token punctuation">,</span> name<span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 存入csv文件</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'京东.csv'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span>newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'gb18030'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>f<span class="token punctuation">)</span>            writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>L<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第%d页爬取成功'</span> <span class="token operator">%</span> n<span class="token punctuation">)</span>    n <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token comment" spellcheck="true"># 点击下一页</span>    <span class="token keyword">if</span> driver<span class="token punctuation">.</span>page_source<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'pn-next disabled'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>        driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'pn-next'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> Selenium </tag>
            
            <tag> 无界面浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫09：动态加载网站数据抓取</title>
      <link href="/2019/01/22/spider-09/"/>
      <url>/2019/01/22/spider-09/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="动态加载网站数据抓取"><a href="#动态加载网站数据抓取" class="headerlink" title="动态加载网站数据抓取"></a>动态加载网站数据抓取</h2><blockquote><p>滚动鼠标滑轮时加载的内容抓取<br>浏览器F12 Network-&gt;QueryStringParameters</p></blockquote><p><img src="/images/spider/sp_09.png" alt="image"></p><h3 id="豆瓣电影的抓取"><a href="#豆瓣电影的抓取" class="headerlink" title="豆瓣电影的抓取"></a>豆瓣电影的抓取</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> pymysql<span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">'https://movie.douban.com/j/chart/top_list?'</span>        <span class="token comment" spellcheck="true"># type=1&amp;interval_id=100%3A90&amp;action=&amp;start=100&amp;limit=20</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36"</span><span class="token punctuation">}</span>        <span class="token comment" spellcheck="true"># 数据库对象</span>        self<span class="token punctuation">.</span>db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>            <span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'123456'</span><span class="token punctuation">,</span> <span class="token string">'doubandb'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">'utf8'</span>        <span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 游标对象</span>        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">getPage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>        html <span class="token operator">=</span> res<span class="token punctuation">.</span>text        self<span class="token punctuation">.</span>parsePage<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parsePage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> html<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 把json格式的响应内容转为pythn数据类型</span>        hList <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># hList [{movie_1}, {movie_2}, ...]</span>        <span class="token keyword">for</span> h <span class="token keyword">in</span> hList<span class="token punctuation">:</span>            name <span class="token operator">=</span> h<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>            score <span class="token operator">=</span> h<span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span>            actors <span class="token operator">=</span> h<span class="token punctuation">[</span><span class="token string">'actors'</span><span class="token punctuation">]</span>            L <span class="token operator">=</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> float<span class="token punctuation">(</span>score<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">', '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>actors<span class="token punctuation">)</span><span class="token punctuation">]</span>            self<span class="token punctuation">.</span>writeMysql<span class="token punctuation">(</span>L<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">writeMysql</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> L<span class="token punctuation">)</span><span class="token punctuation">:</span>        ins <span class="token operator">=</span> <span class="token string">'insert into film(name, score, actors) values(%s, %s, %s)'</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>ins<span class="token punctuation">,</span> L<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">workOn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        num <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'爬取电影数量 >>>'</span><span class="token punctuation">)</span>        params <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">'type'</span><span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>            <span class="token string">'interval_id'</span><span class="token punctuation">:</span> <span class="token string">'100:90'</span><span class="token punctuation">,</span>            <span class="token string">'action'</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>            <span class="token string">'start'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>            <span class="token string">'limit'</span><span class="token punctuation">:</span> num        <span class="token punctuation">}</span>        self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider <span class="token operator">=</span> DoubanSpider<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider<span class="token punctuation">.</span>workOn<span class="token punctuation">(</span><span class="token punctuation">)</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'successful within ___%.2f___'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># create database doubandb charset=utf8;</span><span class="token comment" spellcheck="true"># use doubandb;</span><span class="token comment" spellcheck="true"># create table film(</span><span class="token comment" spellcheck="true">#     id int primary key auto_increment,</span><span class="token comment" spellcheck="true">#     name varchar(50),</span><span class="token comment" spellcheck="true">#     score float(4,2),</span><span class="token comment" spellcheck="true">#     actors varchar(300)</span><span class="token comment" spellcheck="true"># )charset=utf8;</span><span class="token comment" spellcheck="true"># alter table film modify actors varchar(600);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫Spider </tag>
            
            <tag> Ajax </tag>
            
            <tag> 动态 </tag>
            
            <tag> 豆瓣电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫08：xpath解析</title>
      <link href="/2019/01/22/spider-08/"/>
      <url>/2019/01/22/spider-08/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="xpath解析"><a href="#xpath解析" class="headerlink" title="xpath解析"></a>xpath解析</h2><p>在XML文档中查找信息的语言，同样适用于HTML文档的检索</p><h3 id="xpath工具"><a href="#xpath工具" class="headerlink" title="xpath工具"></a>xpath工具</h3><h4 id="Chrom插件-Xpath-Helper"><a href="#Chrom插件-Xpath-Helper" class="headerlink" title="Chrom插件　Xpath Helper"></a>Chrom插件　Xpath Helper</h4><p>打开　ctrl + shift + x</p><blockquote><p>Firefox插件　Xpath checker</p></blockquote><h4 id="选取节点"><a href="#选取节点" class="headerlink" title="选取节点"></a>选取节点</h4><ul><li>路径表达式</li></ul><table><thead><tr><th style="text-align:left">表达式</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">nodename</td><td style="text-align:left">选取此节点的所有子节点。</td></tr><tr><td style="text-align:left">/</td><td style="text-align:left">从根节点选取。</td></tr><tr><td style="text-align:left">//</td><td style="text-align:left">从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td style="text-align:left">.</td><td style="text-align:left">选取当前节点。</td></tr><tr><td style="text-align:left">..</td><td style="text-align:left">选取当前节点的父节点。</td></tr><tr><td style="text-align:left">@</td><td style="text-align:left">选取属性。</td></tr></tbody></table><ul><li>|　多路径匹配（或）<br>  xpath表达式1 | xpath表达式2</li></ul><table><thead><tr><th style="text-align:left">路径表达式</th><th style="text-align:left">结果</th></tr></thead><tbody><tr><td style="text-align:left">bookstore</td><td style="text-align:left">选取 bookstore 元素的所有子节点。</td></tr><tr><td style="text-align:left">/bookstore</td><td style="text-align:left">选取根元素 bookstore。</td></tr><tr><td style="text-align:left">注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！</td></tr><tr><td style="text-align:left">bookstore/book</td><td style="text-align:left">选取属于 bookstore 的子元素的所有 book 元素。</td></tr><tr><td style="text-align:left">//book</td><td style="text-align:left">选取所有 book 子元素，而不管它们在文档中的位置。</td></tr><tr><td style="text-align:left">bookstore//book</td><td style="text-align:left">选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。</td></tr><tr><td style="text-align:left">//@lang</td><td style="text-align:left">选取名为 lang 的所有属性。</td></tr></tbody></table><ul><li>函数<ul><li>contains() 匹配一个属性值中 <strong>包含</strong>某些字符串的节点<br>  //title[contains(@lang, ‘e’)]　获取节点对象</li><li>text() 获取文本<br>  //title[contains(@lang, ‘e’)]/text() 获取的是节点内容</li></ul></li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li>导模块<br>  from lxml import etree</li><li>创建解析对象<br>  parseHtml = etree.HTML(html)</li><li>调用xpath<br>  rList = parseHtml.xpath(‘xpath表达式’)<blockquote><p>调用xpath，返回的一定为列表</p></blockquote></li></ul><h4 id="xpath解析例子"><a href="#xpath解析例子" class="headerlink" title="xpath解析例子"></a>xpath解析例子</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etreehtml <span class="token operator">=</span> <span class="token triple-quoted-string string">'''&lt;div class="wrapper">    &lt;i class="iconfont icon-back" id="back">&lt;/i>    &lt;a href="/" id="channel">新浪社会&lt;/a>    &lt;ul id="nav">        &lt;li>&lt;a href="http://domestic.firefox.sina.com/" title="国内">国内&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://world.firefox.sina.com/" title="国际">国际&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://mil.firefox.sina.com/" title="军事">军事&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://photo.firefox.sina.com/" title="图片">图片&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://society.firefox.sina.com/" title="社会">社会&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://ent.firefox.sina.com/" title="娱乐">娱乐&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://tech.firefox.sina.com/" title="科技">科技&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://sports.firefox.sina.com/" title="体育">体育&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://finance.firefox.sina.com/" title="财经">财经&lt;/a>&lt;/li>        &lt;li>&lt;a href="http://auto.firefox.sina.com/" title="汽车">汽车&lt;/a>&lt;/li>    &lt;/ul>    &lt;i class="iconfont icon-liebiao" id="menu">&lt;/i>&lt;/div>'''</span><span class="token comment" spellcheck="true"># 创建解析对象</span>paresHtml <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用xpath返回结果</span><span class="token keyword">def</span> <span class="token function">xp</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    rList <span class="token operator">=</span> paresHtml<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>rList<span class="token punctuation">)</span>xp<span class="token punctuation">(</span><span class="token string">'//ul//a/text()'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#Out:['国内', '国际', '军事', '图片', '社会', '娱乐', '科技', '体育', '财经', '汽车']</span>xp<span class="token punctuation">(</span><span class="token string">'//ul/li/a/@href'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#Out:['http://domestic.firefox.sina.com/', 'http://world.firefox.sina.com/', 'http://mil.firefox.sina.com/', 'http://photo.firefox.sina.com/', 'http://society.firefox.sina.com/', 'http://ent.firefox.sina.com/', 'http://tech.firefox.sina.com/', 'http://sports.firefox.sina.com/', 'http://finance.firefox.sina.com/', 'http://auto.firefox.sina.com/']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="爬虫案例"><a href="#爬虫案例" class="headerlink" title="爬虫案例"></a>爬虫案例</h3><p>抓取目标图片</p><blockquote><p>思路</p><pre><code>模特链接列表 = parseHtml.xpath(&#39;..&#39;)for 模特链接　in　模特链接列表：    图片链接列表　＝　对模特发请求后xpath    for 图片链接　in　＝　图片链接列表：        html　＝　对图片连接发请求        with open(filename, &#39;wb&#39;) as f:            f.write(html)</code></pre></blockquote><blockquote><p>步骤<br>1.获取主页URL，寻找URl规律<br><a href="http://www.tmt001.com/" target="_blank" rel="noopener">http://www.tmt001.com/</a><br>2.xpath<br>List : //div[@class=’result_models’]/ul/li/div[@class=’model_data’]/a/@href<br>name : //div[@class=’result_models’]/ul/li/div[@class=’model_data’]/a/text()<br>jpgList ://dd/img/@src<br>jpgname : name+01</p></blockquote><p>爬虫代码</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">TotSpider</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>baseurl <span class="token operator">=</span> <span class="token string">'http://www.tmt001.com/'</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">}</span>     <span class="token keyword">def</span> <span class="token function">getPage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">,</span> xp<span class="token operator">=</span>None<span class="token punctuation">)</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        <span class="token keyword">if</span> xp <span class="token operator">==</span> None<span class="token punctuation">:</span>            <span class="token keyword">return</span> res<span class="token punctuation">.</span>content        res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>        html <span class="token operator">=</span> res<span class="token punctuation">.</span>text        <span class="token keyword">return</span> self<span class="token punctuation">.</span>parsePage<span class="token punctuation">(</span>html<span class="token punctuation">,</span> xp<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">parsePage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> html<span class="token punctuation">,</span> xp<span class="token punctuation">)</span><span class="token punctuation">:</span>        paresHtml <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>html<span class="token punctuation">)</span>        rList <span class="token operator">=</span> paresHtml<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span>xp<span class="token punctuation">)</span>        <span class="token keyword">return</span> rList    <span class="token keyword">def</span> <span class="token function">writeJpg</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> html<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">workOn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        menu <span class="token operator">=</span> <span class="token triple-quoted-string string">'''        \033[32m********************        ---    1.爬取    ---        ---    2.退出    ---        ********************        请选择(1/2):\033[0m        '''</span>        cmd  <span class="token operator">=</span> input<span class="token punctuation">(</span>menu<span class="token punctuation">)</span>        <span class="token keyword">if</span> cmd<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            n <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入页数>>>'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> n<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                n <span class="token operator">=</span> int<span class="token punctuation">(</span>n<span class="token punctuation">)</span>                <span class="token keyword">for</span> page <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    url <span class="token operator">=</span>self<span class="token punctuation">.</span>baseurl <span class="token operator">+</span> <span class="token string">'?c=article&amp;a=search&amp;xb=2&amp;page='</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>page<span class="token punctuation">)</span>                    xp_a <span class="token operator">=</span> <span class="token string">"//div[@class='result_models']/ul/li/div[@class='model_data']/a/@href"</span>                    xp_name <span class="token operator">=</span> <span class="token string">"//div[@class='result_models']/ul/li/div[@class='model_data']/a/text()"</span>                    rList_a <span class="token operator">=</span> self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>url<span class="token punctuation">,</span> xp_a<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#                    print(rList_a)</span>                    rList_name <span class="token operator">=</span> self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>url<span class="token punctuation">,</span> xp_name<span class="token punctuation">)</span>                    <span class="token keyword">for</span> rt_a<span class="token punctuation">,</span> filename <span class="token keyword">in</span> zip<span class="token punctuation">(</span>rList_a<span class="token punctuation">,</span> rList_name<span class="token punctuation">)</span><span class="token punctuation">:</span>                        url <span class="token operator">=</span> self<span class="token punctuation">.</span>baseurl <span class="token operator">+</span> rt_a                        xp <span class="token operator">=</span> <span class="token string">'//dd/img/@src'</span>                        rList_jpg <span class="token operator">=</span> self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>url<span class="token punctuation">,</span> xp<span class="token punctuation">)</span>                        <span class="token keyword">for</span> name<span class="token punctuation">,</span> rt_j <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>rList_jpg<span class="token punctuation">)</span><span class="token punctuation">:</span>                            url <span class="token operator">=</span> self<span class="token punctuation">.</span>baseurl <span class="token operator">+</span> rt_j                            html <span class="token operator">=</span> self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>url<span class="token punctuation">)</span>                            file_name <span class="token operator">=</span> <span class="token string">'tot/'</span> <span class="token operator">+</span> filename <span class="token operator">+</span> str<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg'</span>                            self<span class="token punctuation">.</span>writeJpg<span class="token punctuation">(</span>html<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span>                            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>              <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'over'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    spider <span class="token operator">=</span> TotSpider<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider<span class="token punctuation">.</span>workOn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解析 </tag>
            
            <tag> requests </tag>
            
            <tag> 图片 </tag>
            
            <tag> xpath </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫07：requests请求模块2</title>
      <link href="/2019/01/22/spider-07/"/>
      <url>/2019/01/22/spider-07/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h3 id="Post方法-requests-Post"><a href="#Post方法-requests-Post" class="headerlink" title="Post方法　requests.Post()"></a>Post方法　requests.Post()</h3><h4 id="post-参数"><a href="#post-参数" class="headerlink" title="post()参数"></a>post()参数</h4><ul><li>data<br>  Form表单数据，字典形式，不需要编码和转码</li></ul><blockquote><p>其它参数同GET()</p></blockquote><h3 id="案例（有道翻译）"><a href="#案例（有道翻译）" class="headerlink" title="案例（有道翻译）"></a>案例（有道翻译）</h3><blockquote><p>抓包，多抓几次观察Form表单中的数据变化（浏览器F12　Network-&gt;Headers-&gt;From Data）<br><code>&#39;salt&#39;: &#39;15481491442904&#39;,</code><br><code>&#39;sign&#39;: &#39;407948613c2943e6ff32f27e6aa7fcd6&#39;</code><br><code>&#39;ts&#39;: &#39;1548149144290&#39;</code><br><code>&#39;bv&#39;: &#39;9deb57d53879cce82ff92bccf83a3e4c&#39;</code><br>F12,（刷新网页）浏览器重新向有道翻译发送请求，抓到js文件（fanyi.min.js）,Preview查看js代码，保存到编辑器，搜索字段，查看加密方法，按照相同的方法加密．</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">import</span> random<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> requests<span class="token comment" spellcheck="true"># F12或抓包工具抓到的POST的地址</span>url <span class="token operator">=</span> <span class="token string">'http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule'</span>key <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入要翻译的内容:'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取salt的值</span>salt <span class="token operator">=</span> int<span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token operator">+</span>\                   random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取sign的值</span>sign <span class="token operator">=</span> <span class="token string">"fanyideskweb"</span> <span class="token operator">+</span> key <span class="token operator">+</span> str<span class="token punctuation">(</span>salt<span class="token punctuation">)</span> <span class="token operator">+</span>\                     <span class="token string">"p09@Bn{h02_BIEe]$P^nG"</span> s <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>update<span class="token punctuation">(</span>sign<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sign <span class="token operator">=</span> s<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取bv的值</span>s1 <span class="token operator">=</span> <span class="token string">'5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span>md5 <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>md5<span class="token punctuation">.</span>update<span class="token punctuation">(</span>s1<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>bv <span class="token operator">=</span> md5<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 定义headers</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'Accept'</span><span class="token punctuation">:</span><span class="token string">'application/json, text/javascript, */*; q=0.01'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">#Accept-Encoding: gzip, deflate</span>        <span class="token string">'Accept-Language'</span><span class="token punctuation">:</span><span class="token string">'zh-CN,zh;q=0.9'</span><span class="token punctuation">,</span>        <span class="token string">'Connection'</span><span class="token punctuation">:</span><span class="token string">'keep-alive'</span><span class="token punctuation">,</span>        <span class="token string">'Content-Length'</span><span class="token punctuation">:</span><span class="token string">'255'</span><span class="token punctuation">,</span>        <span class="token string">'Content-Type'</span><span class="token punctuation">:</span><span class="token string">'application/x-www-form-urlencoded; charset=UTF-8'</span><span class="token punctuation">,</span>        <span class="token string">'Cookie'</span><span class="token punctuation">:</span><span class="token string">'OUTFOX_SEARCH_USER_ID=1516386930@10.169.0.84; OUTFOX_SEARCH_USER_ID_NCOO=760569518.7197; JSESSIONID=aaa9667LaTZN783i7g-Hw; td_cookie=18446744073249454972; ___rl__test__cookies=1548323620638'</span><span class="token punctuation">,</span>        <span class="token string">'Host'</span><span class="token punctuation">:</span><span class="token string">'fanyi.youdao.com'</span><span class="token punctuation">,</span>        <span class="token string">'Origin'</span><span class="token punctuation">:</span><span class="token string">'http://fanyi.youdao.com'</span><span class="token punctuation">,</span>        <span class="token string">'Referer'</span><span class="token punctuation">:</span><span class="token string">'http://fanyi.youdao.com/'</span><span class="token punctuation">,</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">,</span>        <span class="token string">'X-Requested-With'</span><span class="token punctuation">:</span><span class="token string">'XMLHttpRequest'</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 处理Form表单数据</span>data <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"i"</span><span class="token punctuation">:</span>key<span class="token punctuation">,</span>        <span class="token string">"from"</span><span class="token punctuation">:</span><span class="token string">"AUTO"</span><span class="token punctuation">,</span>        <span class="token string">"to"</span><span class="token punctuation">:</span><span class="token string">"AUTO"</span><span class="token punctuation">,</span>        <span class="token string">"smartresult"</span><span class="token punctuation">:</span><span class="token string">"dict"</span><span class="token punctuation">,</span>        <span class="token string">"client"</span><span class="token punctuation">:</span><span class="token string">"fanyideskweb"</span><span class="token punctuation">,</span>        <span class="token string">"salt"</span><span class="token punctuation">:</span>str<span class="token punctuation">(</span>salt<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">"sign"</span><span class="token punctuation">:</span>sign<span class="token punctuation">,</span>        <span class="token string">"ts"</span><span class="token punctuation">:</span>str<span class="token punctuation">(</span>salt<span class="token operator">//</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">"bv"</span><span class="token punctuation">:</span>bv<span class="token punctuation">,</span>        <span class="token string">"doctype"</span><span class="token punctuation">:</span><span class="token string">"json"</span><span class="token punctuation">,</span>        <span class="token string">"version"</span><span class="token punctuation">:</span><span class="token string">"2.1"</span><span class="token punctuation">,</span>        <span class="token string">"keyfrom"</span><span class="token punctuation">:</span><span class="token string">"fanyi.web"</span><span class="token punctuation">,</span>        <span class="token string">"action"</span><span class="token punctuation">:</span><span class="token string">"FY_BY_REALTIME"</span><span class="token punctuation">,</span>        <span class="token string">"typoResult"</span><span class="token punctuation">:</span><span class="token string">"false"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">,</span>                        headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>html <span class="token operator">=</span> res<span class="token punctuation">.</span>text<span class="token comment" spellcheck="true"># loads()可把json格式的字符串转为Python</span><span class="token comment" spellcheck="true"># 的数据类型</span>rDict <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span>result <span class="token operator">=</span> rDict<span class="token punctuation">[</span><span class="token string">'translateResult'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tgt'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> requests </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫06：requests请求模块1</title>
      <link href="/2019/01/22/spider-06/"/>
      <url>/2019/01/22/spider-06/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><blockquote><p>requests是一个第三方模块，需要安装．<br>Anaconda Prompt: <code>conda install requests</code><br>cmd: <code>python -m pip install requests</code></p></blockquote><h3 id="Get方法-requests-get-url-headers-headers"><a href="#Get方法-requests-get-url-headers-headers" class="headerlink" title="Get方法　requests.get(url, headers=headers)"></a>Get方法　requests.get(url, headers=headers)</h3><p>requests.get发起请求并获取对象</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">}</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>res<span class="token punctuation">.</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>返回值属性<br><code>res.encoding</code>响应对象内容的编码属性<br><code>res.text</code> 响应内容字符串格式<br><code>res.content</code> 响应内容bytes格式（字节流）<br><code>res.url</code> 返回实际数据的url地址<br><code>res.status_code</code> HTTP响应码</p></blockquote><h4 id="非结构化数据保存（图片）"><a href="#非结构化数据保存（图片）" class="headerlink" title="非结构化数据保存（图片）"></a>非结构化数据保存（图片）</h4><p><code>html = res.content</code><br><code>with open(&#39;xx.jpg&#39;, &#39;wb&#39;) as f:</code><br><code>f.write(html)</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">''</span>https<span class="token punctuation">:</span><span class="token operator">//</span>timgsa<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>timg?image<span class="token operator">&amp;</span>quality<span class="token operator">=</span><span class="token number">80</span><span class="token operator">&amp;</span>size<span class="token operator">=</span>b9999_10000<span class="token operator">&amp;</span>sec<span class="token operator">=</span><span class="token number">1548306415352</span><span class="token operator">&amp;</span>di<span class="token operator">=</span>e75cc8258e02b07f5310d43215f1d56a<span class="token operator">&amp;</span>imgtype<span class="token operator">=</span><span class="token number">0</span><span class="token operator">&amp;</span>src<span class="token operator">=</span>http<span class="token operator">%</span><span class="token number">3A</span><span class="token operator">%</span><span class="token number">2F</span><span class="token operator">%</span>2Fimg4<span class="token punctuation">.</span>duitang<span class="token punctuation">.</span>com<span class="token operator">%</span>2Fuploads<span class="token operator">%</span>2Fitem<span class="token operator">%</span><span class="token number">2F201603</span><span class="token operator">%</span><span class="token number">2F21</span><span class="token operator">%</span>2F20160321223952_AVYMa<span class="token punctuation">.</span>jpeg<span class="token string">''</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0'</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true"># 发送请求</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 获取bytes响应内容</span>html <span class="token operator">=</span> res<span class="token punctuation">.</span>content<span class="token comment" spellcheck="true"># 保存到本地</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'picture.jpg'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'successfully'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="get-参数"><a href="#get-参数" class="headerlink" title="get()参数"></a>get()参数</h4><ul><li><p>查询参数（params）<br>  params:字典<br>  res = requests.get(url, params=paramas, headers=heasers)</p><blockquote><p>params的属性存在　不用再编码拼接地址，可以为中文</p></blockquote><pre class="line-numbers language-python"><code class="language-python">  <span class="token keyword">import</span> requests  url <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/s?'</span>  headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0'</span><span class="token punctuation">}</span>  params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'wd'</span><span class="token punctuation">:</span><span class="token string">'math'</span><span class="token punctuation">,</span> <span class="token string">'pn'</span><span class="token punctuation">:</span><span class="token string">'20'</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true"># 发送请求</span>  res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 获取bytes响应内容</span>  html <span class="token operator">=</span> res<span class="token punctuation">.</span>text  <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>代理参数（proxies）</p><ul><li><p>获取代理ip的网站<br>  西刺代理<a href="https://www.xicidaili.com" target="_blank" rel="noopener">https://www.xicidaili.com</a> 　<br>  快代理<a href="https://www.kuaidaili.com" target="_blank" rel="noopener">https://www.kuaidaili.com</a><br>  全网代理．．．</p><blockquote><p>防止反爬封自己的ip</p></blockquote></li><li><p>普通代理<br>  <code>proxies = {&#39;协议&#39;:&#39;协议://ip:端口号&#39;}</code><br>  测试网站<a href="http://httpbin.org/get" target="_blank" rel="noopener">http://httpbin.org/get</a>  <a href="http://www.whatismyip.com" target="_blank" rel="noopener">http://www.whatismyip.com</a></p></li><li><p>私密代理<br>  <code>proxies = {&#39;协议&#39;:&#39;协议://用户名:密码@IP地址:端口号&#39;}</code></p></li></ul></li><li><p>超时限制（timeout）</p></li><li><p>web客户端验证参数（auth)<br>  auth = (‘用户名’, ‘密码’)</p></li><li><p>SSL证书认证参数（verify）<br>  verify = True 默认进行SSL证书认证<br>  verify = False　不检查认证</p></li></ul><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> requests </tag>
            
            <tag> 图片 </tag>
            
            <tag> 客户端验证 </tag>
            
            <tag> SSL认证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫05：抓包</title>
      <link href="/2019/01/22/spider-05/"/>
      <url>/2019/01/22/spider-05/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h2><h3 id="配置Fiddler"><a href="#配置Fiddler" class="headerlink" title="配置Fiddler"></a>配置Fiddler</h3><ul><li>Tools -&gt; Options<ul><li>HTTPS<br>  1.勾选Decrypt Https Traffic，添加证书信任窗口<br>  2.　…from browsers only</li><li>Connections<br>  1.记住监听端口（默认8888，可更改）<br>  2.勾选Allow remote computers to connect用于移动端抓包</li></ul></li><li>设置完才，重启Fiddler</li></ul><h3 id="配置浏览器代理"><a href="#配置浏览器代理" class="headerlink" title="配置浏览器代理"></a>配置浏览器代理</h3><ul><li>浏览器右上角：SwitchOmega -&gt; 选项 -&gt;+新建情景模式 -&gt;name -&gt;创建</li><li>HTTP://  127.0.0.1 8888</li><li>点击：应用选项</li><li>点击SwitchOmega可切换代理name</li></ul><h3 id="Fiddler常用菜单"><a href="#Fiddler常用菜单" class="headerlink" title="Fiddler常用菜单"></a>Fiddler常用菜单</h3><ul><li>Inspector 查看抓到的数据包详细内容<br>  整体分为请求request和相映response</li><li>常用菜单<ul><li>Headers<br>  显示客户端发送到服务器的请求头，包含客户端信息，cookie,传输状态</li><li>WebForms<br>  显示POST请求的数据<code>&lt;body&gt;</code>中</li><li>Raw<br>  将整个请求显示为纯文本</li></ul></li></ul><blockquote><p>工具不是必须的</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫spider </tag>
            
            <tag> Fiddler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫04：数据持久存储</title>
      <link href="/2019/01/22/spider-04/"/>
      <url>/2019/01/22/spider-04/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h2 id="Mongo数据库"><a href="#Mongo数据库" class="headerlink" title="Mongo数据库"></a>Mongo数据库</h2><h3 id="pymongo"><a href="#pymongo" class="headerlink" title="pymongo"></a>pymongo</h3><ul><li>1、连接对象<br>  conn = pymongo.MongoClient(‘IP’,27017)</li><li>2、库对象<br>  db = conn[‘库名’]</li><li>3、集合对象<br>  myset = db[‘集合名’]</li><li>4、执行插入语句<br>  myset.insert_one({字典})</li></ul><p><code>&gt;&gt;&gt;show dbs</code><br><code>&gt;&gt;&gt;use 库名</code><br><code>&gt;&gt;&gt;show collections</code><br><code>&gt;&gt;&gt;db.集合名.find().pretty()</code><br><code>&gt;&gt;&gt;db.集合名.count()</code><br><code>&gt;&gt;&gt;db.dropDatabase()</code></p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> re <span class="token keyword">import</span> pymongo<span class="token keyword">import</span> time <span class="token keyword">class</span> <span class="token class-name">MaoyanSpider</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>baseurl <span class="token operator">=</span> <span class="token string">'https://maoyan.com/board/4?offset='</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; InfoPath.3)'</span><span class="token punctuation">}</span>        self<span class="token punctuation">.</span>page <span class="token operator">=</span> <span class="token number">1</span>        <span class="token comment" spellcheck="true"># 连接对象</span>        self<span class="token punctuation">.</span>conn <span class="token operator">=</span> pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span>                         <span class="token string">'192.168.56.131'</span><span class="token punctuation">,</span>                         <span class="token number">27017</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 库对象</span>        self<span class="token punctuation">.</span>db <span class="token operator">=</span> self<span class="token punctuation">.</span>conn<span class="token punctuation">[</span><span class="token string">'mydb'</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 集合对象</span>        self<span class="token punctuation">.</span>myset <span class="token operator">=</span> self<span class="token punctuation">.</span>db<span class="token punctuation">[</span><span class="token string">'top100'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 获取页面</span>    <span class="token keyword">def</span> <span class="token function">getPage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 三步走</span>        req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>                   headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span>        html <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>parsePage<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 解析页面</span>    <span class="token keyword">def</span> <span class="token function">parsePage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'&lt;div class="movie-item-info">.*?title="(.*?)".*?class="star">(.*?)&lt;/p>.*?class="releasetime">(.*?)&lt;/p>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>        rList <span class="token operator">=</span> p<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>html<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># rList:[('霸王别姬','张国荣','1993-'),(),()]</span>        self<span class="token punctuation">.</span>writeMongo<span class="token punctuation">(</span>rList<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 保存数据</span>    <span class="token keyword">def</span> <span class="token function">writeMongo</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>rList<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> rt <span class="token keyword">in</span> rList<span class="token punctuation">:</span>            d <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">"name"</span> <span class="token punctuation">:</span> rt<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"star"</span> <span class="token punctuation">:</span> rt<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"time"</span> <span class="token punctuation">:</span> rt<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true"># 插入到mongo数据库</span>            self<span class="token punctuation">.</span>myset<span class="token punctuation">.</span>insert_one<span class="token punctuation">(</span>d<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 主函数</span>    <span class="token keyword">def</span> <span class="token function">workOn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> pg <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>baseurl<span class="token operator">+</span>str<span class="token punctuation">(</span>pg<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第%d页爬取成功'</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>page<span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>page <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    spider <span class="token operator">=</span> MaoyanSpider<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider<span class="token punctuation">.</span>workOn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Mysql数据库"><a href="#Mysql数据库" class="headerlink" title="Mysql数据库"></a>Mysql数据库</h2><p>1、创建数据库对象<br>2、创建游标对象<br>3、执行命令<br>4、(重要)提交到数据库执行</p><h3 id="例"><a href="#例" class="headerlink" title="例"></a>例</h3><p>1、建库<br><code>mysql&gt; create database mydb charset=utf8;</code><br>2、建表<br><code>use mydb;</code><br><code>create table top100(</code><br><code>id int primary key auto_increment,</code><br><code>name varchar(50),</code><br><code>star varchar(150),</code><br><code>time varchar(50)</code><br><code>)charset=utf8;</code></p><h3 id="远程存入MySQL数据库"><a href="#远程存入MySQL数据库" class="headerlink" title="远程存入MySQL数据库"></a>远程存入MySQL数据库</h3><h4 id="1-开启远程链接"><a href="#1-开启远程链接" class="headerlink" title="1.开启远程链接"></a>1.开启远程链接</h4><p><code>sudo -i</code><br><code>cd /etc/mysql/mysql.conf.d/</code><br><code>vi mysqld.cnf</code><br><code>注释掉下面</code><br><code># bind-address = 127.0.0.1</code><br><code>srevice mysql restart</code></p><h4 id="2-添加授权用户"><a href="#2-添加授权用户" class="headerlink" title="2.添加授权用户"></a>2.添加授权用户</h4><p><code>mysql&gt; grant all privileges on *.* to &#39;Jent&#39;@&#39;%&#39; identified by &#39;123456&#39; with grant option;</code></p><h4 id="3-添加Ubuntu防火墙规则"><a href="#3-添加Ubuntu防火墙规则" class="headerlink" title="3.添加Ubuntu防火墙规则"></a>3.添加Ubuntu防火墙规则</h4><p><code>sudo ufw allow 3306</code></p><blockquote><p>Ubuntu防火墙ufw</p><ul><li>打开防火墙<br>  <code>sudo ufw enable</code></li><li>关闭防火墙<br>  <code>sudo ufw disable</code></li><li>添加防火墙规则<br>  <code>sudo ufw allow 端口号</code></li><li>查看状态<br>  <code>sudo ufw status</code></li></ul></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> re <span class="token keyword">import</span> pymysql<span class="token keyword">import</span> time <span class="token keyword">import</span> warnings<span class="token keyword">class</span> <span class="token class-name">MaoyanSpider</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>baseurl <span class="token operator">=</span> <span class="token string">'https://maoyan.com/board/4?offset='</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; InfoPath.3)'</span><span class="token punctuation">}</span>        self<span class="token punctuation">.</span>page <span class="token operator">=</span> <span class="token number">1</span>        <span class="token comment" spellcheck="true"># 创建数据库对象</span>        self<span class="token punctuation">.</span>db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>                    <span class="token string">'192.168.56.131'</span><span class="token punctuation">,</span>                    <span class="token string">'lion'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token string">'mydb'</span><span class="token punctuation">,</span>                    charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 创建游标对象</span>        self<span class="token punctuation">.</span>cursor <span class="token operator">=</span> self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 获取页面</span>    <span class="token keyword">def</span> <span class="token function">getPage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 三步走</span>        req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>                   headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span>        html <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>parsePage<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 解析页面</span>    <span class="token keyword">def</span> <span class="token function">parsePage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'&lt;div class="movie-item-info">.*?title="(.*?)".*?class="star">(.*?)&lt;/p>.*?class="releasetime">(.*?)&lt;/p>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>        rList <span class="token operator">=</span> p<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>html<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># rList:[('霸王别姬','张国荣','1993-'),(),()]</span>        self<span class="token punctuation">.</span>writeMysql<span class="token punctuation">(</span>rList<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 保存数据</span>    <span class="token keyword">def</span> <span class="token function">writeMysql</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>rList<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 忽略警告</span>        warnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">'ignore'</span><span class="token punctuation">)</span>        ins <span class="token operator">=</span> 'insert into top100<span class="token punctuation">(</span>name<span class="token punctuation">,</span>star<span class="token punctuation">,</span>\               time<span class="token punctuation">)</span> values<span class="token punctuation">(</span><span class="token operator">%</span>s<span class="token punctuation">,</span><span class="token operator">%</span>s<span class="token punctuation">,</span><span class="token operator">%</span>s<span class="token punctuation">)</span>'        <span class="token keyword">for</span> rt <span class="token keyword">in</span> rList<span class="token punctuation">:</span>            L <span class="token operator">=</span> <span class="token punctuation">[</span>                    rt<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    rt<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    rt<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">]</span>                <span class="token punctuation">]</span>            <span class="token comment" spellcheck="true"># execute要使用列表传参</span>            self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>ins<span class="token punctuation">,</span>L<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 主函数</span>    <span class="token keyword">def</span> <span class="token function">workOn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> pg <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>baseurl<span class="token operator">+</span>str<span class="token punctuation">(</span>pg<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第%d页爬取成功'</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>page<span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>page <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment" spellcheck="true"># 等所有页面爬完后再关闭数据库</span>        self<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    spider <span class="token operator">=</span> MaoyanSpider<span class="token punctuation">(</span><span class="token punctuation">)</span>    spider<span class="token punctuation">.</span>workOn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫spider </tag>
            
            <tag> Mongodb </tag>
            
            <tag> Mysql </tag>
            
            <tag> 防火墙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫03：正则解析</title>
      <link href="/2019/01/22/spider-03/"/>
      <url>/2019/01/22/spider-03/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h1 id="解析模块"><a href="#解析模块" class="headerlink" title="解析模块"></a>解析模块</h1><h2 id="数据的分类"><a href="#数据的分类" class="headerlink" title="数据的分类"></a>数据的分类</h2><ul><li><p>结构化数据<br>  固定格式　HTML JSON XML</p><blockquote><pre><code>  &lt;a&gt;      &lt;b&gt;      &lt;/b&gt;  &lt;/a&gt;</code></pre></blockquote></li><li><p>非结构化数据<br>  图片　音频　视频</p><blockquote><p>一般存储为二进制（wb）</p></blockquote></li></ul><h2 id="正则解析模块re"><a href="#正则解析模块re" class="headerlink" title="正则解析模块re"></a>正则解析模块re</h2><ul><li><code>rList = re.findall(r&#39;表达式&#39;, ＇字符串＇, re.S)</code></li><li>推荐写法<br>  1.创建编译对象<br>  　　p = re.compile(r’’, re.S)<br>  2.进行字符串匹配<br>  　　rList = p.findall(html)</li><li><p>元字符<br>  ．：匹配任意1个字符（不包括＼n）<br>  \d：1个数字<br>  \s：空白字符<br>  \S：非空白字符<br>  [ ]：包含［］内容　[\s\S]匹配任意一个字符<br>  \w：普通字符　字母数字下划线<br>  \W：特殊字符</p><p>  *：0次或N次<br>  +：1次或N次<br>  ?：0次或1次<br>  {m}：m次</p></li><li><p>贪婪匹配，非贪婪匹配<br>  1.贪婪匹配<code>(.*)</code>　在表达式匹配成功的前提下，尽可能多的匹配<code>*</code><br>  2.非贪婪匹配<code>(.*?)</code>　在表达式匹配成功的前提下，尽可能少的匹配<code>*</code></p><pre class="line-numbers language-python"><code class="language-python">  <span class="token keyword">import</span> re  html <span class="token operator">=</span> <span class="token triple-quoted-string string">'''  &lt;div>&lt;p>汉皇重色思倾国&lt;/p>&lt;/div>  &lt;div>&lt;p>御宇多年求不得&lt;/p>&lt;/div>  '''</span>  <span class="token comment" spellcheck="true">#贪婪.*</span>  p <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>r<span class="token string">'&lt;div>&lt;p>.*&lt;/p>&lt;/div>'</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>  rList <span class="token operator">=</span> p<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>html<span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>rList<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#Out:['&lt;div>&lt;p>汉皇重色思倾国&lt;/p>&lt;/div>\n&lt;div>&lt;p>御宇多年求不得&lt;/p>&lt;/div>']</span>  <span class="token comment" spellcheck="true">#非贪婪.*?</span>  p <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>r<span class="token string">'&lt;div>&lt;p>.*?&lt;/p>&lt;/div>'</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>  rList <span class="token operator">=</span> p<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>html<span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>rList<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#Out:['&lt;div>&lt;p>汉皇重色思倾国&lt;/p>&lt;/div>', '&lt;div>&lt;p>御宇多年求不得&lt;/p>&lt;/div>']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>正则分组</p><pre class="line-numbers language-python"><code class="language-python">  s <span class="token operator">=</span> <span class="token string">'a b c d'</span>  p1 <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'\w+\s+\w+'</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#Out:['a b', 'c d']</span>  p2 <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'\w+\s+(\w+)'</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#Out:['b', 'd']</span>  p3 <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span><span class="token string">'(\w+)\s+(\w+)'</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#Out:[('a', 'b'), ('c', 'd')]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>按照不带括号匹配，返回括号内容，不加括号认为括号最大,多个分组（括号），以元组形式显示</p></blockquote></li></ul><h3 id="正则案例"><a href="#正则案例" class="headerlink" title="正则案例"></a>正则案例</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> rehtml<span class="token operator">=</span><span class="token triple-quoted-string string">'''&lt;div class="financial">  &lt;p class="name">    &lt;a title="Stata">&lt;/a>  &lt;/p>  &lt;p class="contents">    This is a basic course.  &lt;/p>  &lt;/div>&lt;div class="financial">  &lt;p class="name">    &lt;a title="Linear Algebra">&lt;/a>  &lt;/p>  &lt;p class="contents">    It's just an enhancement course.  &lt;/p>  &lt;/div>'''</span>p <span class="token operator">=</span> re<span class="token punctuation">.</span>compile<span class="token punctuation">(</span>r<span class="token string">'&lt;div class="(.*?)".*?title="(.*?)".*?"contents".*?\s+(.*?)\n.*?&lt;/div>'</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>s <span class="token operator">=</span> p<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#Out:[('financial', 'stata', 'This is a basic course.'), ('financial', 'Linear Algebra', "It's just an enhancement course.")]</span><span class="token keyword">for</span> str <span class="token keyword">in</span> s<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Name is :'</span><span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Describe :'</span><span class="token punctuation">,</span> str<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#Out:====================</span><span class="token comment" spellcheck="true">#Out:Name is : stata</span><span class="token comment" spellcheck="true">#Out:Describe : This is a basic course.</span><span class="token comment" spellcheck="true">#Out:====================</span><span class="token comment" spellcheck="true">#Out:Name is : Linear Algebra</span><span class="token comment" spellcheck="true">#Out:Describe : It's just an enhancement course.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CSV解析模块"><a href="#CSV解析模块" class="headerlink" title="CSV解析模块"></a>CSV解析模块</h2><h3 id="CSV模块流程"><a href="#CSV模块流程" class="headerlink" title="CSV模块流程"></a>CSV模块流程</h3><ul><li>导入<br>  <code>import csv</code></li><li>打开CSV文件<br>  <code>with open(&#39;xxx.csv&#39;, &#39;w&#39;) as f:</code></li><li>初始化写入对象<br>  <code>writer = csv.writer(f)</code></li><li>写入数据<br>  <code>writer.writerow([])</code></li><li>EX:<br><code>`</code>python<br>import csv</li></ul><p>#newline=’’表示换行为空，保证新写入数据不会出现空行<br>with open(‘price.csv’, ‘w’, newline=’’) as f:</p><pre><code># 初始化对象writer = csv.writer(f)#利用写入对象写入数据writer.writerow([&#39;open&#39;,&#39;12.01&#39;])writer.writerow([&#39;close&#39;,&#39;13.01&#39;])</code></pre><pre><code>### 案例猫眼电影top100榜单&gt;* 1、网址 ：猫眼电影 - 榜单 - top100榜* 2、目标 ：电影名称、主演、上映时间* 3、步骤    * 1、找URL规律        第1页：https://maoyan.com/board/4?offset=0        第2页：https://maoyan.com/board/4?offset=10        第n页：offset=(n-1)*10    * 2、写正则表达式        `&#39;&lt;div class=&quot;movie-item-info&quot;&gt;.*?title=&quot;(.*?)&quot;.*?class=&quot;star&quot;&gt;(.*?)&lt;/p&gt;.*?class=&quot;releasetime&quot;&gt;(.*?)&lt;/p&gt;&#39;,re.S````pythonimport urllib.requestimport reimport csvimport timeclass MaoyanSpider(object):    def __init__(self):        self.baseurl = &#39;https://maoyan.com/board/4?offset=&#39;        self.headers = {&#39;User-Agent&#39;:&#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36&#39;}    def getPage(self, url):        &#39;&#39;&#39;获取页面函数        &#39;&#39;&#39;        req = urllib.request.Request(url, headers=self.headers)        res = urllib.request.urlopen(req)        html = res.read().decode(&#39;utf-8&#39;)        self.parePage(html)    def parePage(self, html):        &#39;&#39;&#39;解析函数        &#39;&#39;&#39;        p = re.compile(&#39;&lt;div class=&quot;movie-item-info&quot;&gt;.*?title=&quot;(.*?)&quot;.*?&lt;p class=&quot;star&quot;&gt;\s*(.*?)\s*&lt;/p &gt;.*?&lt;p class=&quot;releasetime&quot;&gt;(.*?)&#39;, re.S)        rList = p.findall(html)        self.writeCsv(rList)    def writeCsv(self, rList):        &#39;&#39;&#39;保存数据        &#39;&#39;&#39;        with open(&#39;maoyan.csv&#39;, &#39;a&#39;, newline=&#39;&#39;, encoding=&#39;utf-8&#39;) as f:            writer = csv.writer(f)            for rt in rList:                info = list(rt)                writer.writerow(info)    def workOn(self):        for pg in range(0, 100, 10):            url = self.baseurl + str(pg)            self.getPage(url)            time.sleep(2)        print(&#39;successful&#39;)if __name__ == &#39;__main__&#39;:    spider = MaoyanSpider()    spider.workOn()</code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫spider </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> 解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫02：请求及案例</title>
      <link href="/2019/01/22/spider-02/"/>
      <url>/2019/01/22/spider-02/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h3 id="1-GET"><a href="#1-GET" class="headerlink" title="1.GET"></a>1.GET</h3><h4 id="1特点"><a href="#1特点" class="headerlink" title="1特点"></a>1特点</h4><p>值在url后面　以键值的形式追加在后面　</p><h4 id="2案例"><a href="#2案例" class="headerlink" title="2案例"></a>2案例</h4><p>上节案例</p><h3 id="2-POST（在Request-中添加data参数）"><a href="#2-POST（在Request-中添加data参数）" class="headerlink" title="2.POST（在Request()中添加data参数）"></a>2.POST（在Request()中添加data参数）</h3><h4 id="data参数"><a href="#data参数" class="headerlink" title="data参数"></a>data参数</h4><p><code>urllib.request.Request(url, data=data, headers=headers)</code><br>data 表单数据以bytes类型提交（浏览器F12　Network-&gt;Headers-&gt;From Data）</p><h4 id="处理表单数据data为bytes类型"><a href="#处理表单数据data为bytes类型" class="headerlink" title="处理表单数据data为bytes类型"></a>处理表单数据data为bytes类型</h4><ul><li>1.先把data定义为字典</li><li>2.<code>urlencode(data).encode()</code></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">import</span> jsonurl <span class="token operator">=</span> <span class="token string">'http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0'</span>        <span class="token punctuation">}</span>key <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'翻译>>>'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 处理form表单数据</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'i'</span><span class="token punctuation">:</span> key<span class="token punctuation">,</span><span class="token string">'from'</span><span class="token punctuation">:</span> <span class="token string">'AUTO'</span><span class="token punctuation">,</span><span class="token string">'to'</span><span class="token punctuation">:</span> <span class="token string">'AUTO'</span><span class="token punctuation">,</span><span class="token string">'smartresult'</span><span class="token punctuation">:</span> <span class="token string">'dict'</span><span class="token punctuation">,</span><span class="token string">'client'</span><span class="token punctuation">:</span> <span class="token string">'fanyideskweb'</span><span class="token punctuation">,</span><span class="token string">'salt'</span><span class="token punctuation">:</span> <span class="token string">'15481491442904'</span><span class="token punctuation">,</span><span class="token string">'sign'</span><span class="token punctuation">:</span> <span class="token string">'407948613c2943e6ff32f27e6aa7fcd6'</span><span class="token punctuation">,</span><span class="token string">'ts'</span><span class="token punctuation">:</span> <span class="token string">'1548149144290'</span><span class="token punctuation">,</span><span class="token string">'bv'</span><span class="token punctuation">:</span> <span class="token string">'9deb57d53879cce82ff92bccf83a3e4c'</span><span class="token punctuation">,</span><span class="token string">'doctype'</span><span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span><span class="token string">'version'</span><span class="token punctuation">:</span> <span class="token string">'2.1'</span><span class="token punctuation">,</span><span class="token string">'keyfrom'</span><span class="token punctuation">:</span> <span class="token string">'fanyi.web'</span><span class="token punctuation">,</span><span class="token string">'action'</span><span class="token punctuation">:</span> <span class="token string">'FY_BY_REALTIME'</span><span class="token punctuation">,</span><span class="token string">'typoResult'</span><span class="token punctuation">:</span> <span class="token string">'false'</span><span class="token punctuation">}</span>data <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>        url<span class="token punctuation">,</span>        data<span class="token operator">=</span>data<span class="token punctuation">,</span>        headers<span class="token operator">=</span>headers        <span class="token punctuation">)</span>res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span>html <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#json转为python数据类型</span>rDict <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rDict<span class="token punctuation">[</span><span class="token string">'translateResult'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tgt'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>验证问题后面再弄（<a href="/2019/01/22/spider-07/">爬虫07：requests请求模块2</a>），这里只是改了url</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫01：概述,环境，模块</title>
      <link href="/2019/01/22/spider-01/"/>
      <url>/2019/01/22/spider-01/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/spider/">爬虫•目录</a> <a href="/categories/Spider/">爬虫•类别</a></p><hr><h3 id="获取数据的方式"><a href="#获取数据的方式" class="headerlink" title="获取数据的方式"></a>获取数据的方式</h3><ul><li>自有数据</li><li>第三方购买<br>  数据堂<br>  贵阳大数据交易所</li><li>爬虫爬取数据<br>  市场上没有，价格太高，利用爬虫程序爬取</li></ul><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><p>请求模块，解析模块丰富成熟，scrapy框架</p><blockquote><p>python的多线程由于全局解释器锁的存在，只有对于I/O密集型的相对效果好一点．<br>C/C++ 效率高，但是上手并不那么容易．</p></blockquote><h3 id="爬虫分类"><a href="#爬虫分类" class="headerlink" title="爬虫分类"></a>爬虫分类</h3><ul><li>通用网络爬虫（搜索引擎,<strong>遵守robots协议</strong>）<br>  ex:<a href="https://www.baidu.com/robots.txt" target="_blank" rel="noopener">https://www.baidu.com/robots.txt</a></li><li>聚焦网络爬虫<br>  自己写的爬虫程序，面向需求爬虫<blockquote><p>爬虫程序会对对方服务器造成压力（高并发），反反爬</p></blockquote></li></ul><h3 id="爬取数据的步骤"><a href="#爬取数据的步骤" class="headerlink" title="爬取数据的步骤"></a>爬取数据的步骤</h3><ul><li>step1.确定爬取的URL地址</li><li>step2.通过HTTP/HTTPS协议获取相应的页面</li><li>step3.提取相应中有用的数据<br>  1）所需数据，保存<br>  2）页面中有其他的URL,继续step2</li></ul><h3 id="集成python开发环境"><a href="#集成python开发环境" class="headerlink" title="集成python开发环境"></a>集成python开发环境</h3><h4 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h4><p>安装搜索引擎找一下 它是一个集成的工具　不需要复杂的配置python的环境和包</p><p>Anaconda环境安装模块</p><ul><li>(管理员方式)进入到Anaconda Prompt</li><li>执行安装命令<br>  <code>conda install pymongo</code><br>  <code>conda install pymysql</code></li></ul><h4 id="Spyder"><a href="#Spyder" class="headerlink" title="Spyder"></a>Spyder</h4><p>anaconda内包含编辑器</p><ul><li>快捷键<br>  注释　ctrl+1<br>  运行　F5<blockquote><p>tools&gt;preference 查看</p></blockquote></li></ul><h3 id="Chrome浏览器插件"><a href="#Chrome浏览器插件" class="headerlink" title="Chrome浏览器插件"></a>Chrome浏览器插件</h3><ul><li>Proxy SwitchyOmega</li><li>XPathHelper</li><li>JSONView</li></ul><blockquote><p>他不是必须的</p></blockquote><h3 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h3><ul><li>HTTP/HTTPS<br>  HTTP: 80<br>  HTTPS: 443,HTTP加了安全套节层</li><li>GET POST<br>  GET: 查询参数在URL地址上显示出来<br>  POST: 查询参数和需要提交的数据隐藏在Form表单中，不会在URL地址上都显示．</li><li>URL<br>  统一资源定位符<br>  ex:<a href="https://item.jd.com/37289659363.html#detail" target="_blank" rel="noopener">https://item.jd.com/37289659363.html#detail</a><br>   协议　　   　域名/IP    　　访问资源路径　　锚点　　　<blockquote><p>nslookup <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 获取ip地址</p></blockquote></li><li>User-Agent<br>  记录用户浏览器，操作系统，为了让用户获取更好的页面效果．．．（爬虫伪装User-Agent，多伪装一些，模拟多个浏览器请求）</li></ul><h3 id="爬虫请求模块"><a href="#爬虫请求模块" class="headerlink" title="爬虫请求模块"></a>爬虫请求模块</h3><h4 id="1-模块"><a href="#1-模块" class="headerlink" title="1.模块"></a>1.模块</h4><ul><li>python2: urllib urllib2</li><li>python3: urllib.request（合并）</li></ul><h4 id="2-常用方法"><a href="#2-常用方法" class="headerlink" title="2.常用方法"></a>2.常用方法</h4><ul><li><p>urllib.request.urlopen（’URL地址’）<br>  1.作用：　向网站发起请求并获取响应对象<br>  2.不支持重构User-Agent</p><pre class="line-numbers language-python"><code class="language-python">  <span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request  <span class="token comment" spellcheck="true">#向网站发起请求获取响应对象</span>  url <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/'</span>  res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#获取响应对象的内容</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#encode():字符串转为bytes decode():bytes转为string</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>urllib.request.Request（’url’,headers={}）<br>  1.使用流程</p><ul><li>step1 创建请求对象（Request()）</li><li>step2 发请求获取响应（Urlopen()）</li><li><p>step3 获取相应内容（read().decode(‘utf-8’)）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#定义变量</span>url <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Windows NT <span class="token number">6.1</span><span class="token punctuation">;</span> WOW64<span class="token punctuation">)</span> AppleWebKit<span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">39.0</span><span class="token punctuation">.</span><span class="token number">2171.71</span> Safari<span class="token operator">/</span><span class="token number">537.36</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#step1:创建请求对象</span>req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#step2:获取响应对象</span>res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#step1:获取响应内容</span>html <span class="token operator">=</span> req<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li>响应对象（res）的方法<ul><li>1.read()</li><li>2.getcode()  返回HTTP的响应码<br>  200：成功<br>  4XX：服务器页面出错<br>  5XX：服务器出错</li><li>3.geturl()　　返回实际数据的url地址</li></ul></li></ul><h3 id="URL编码模块-urlllib-parse"><a href="#URL编码模块-urlllib-parse" class="headerlink" title="URL编码模块　urlllib.parse"></a>URL编码模块　urlllib.parse</h3><ul><li><p>1.urlencode({字典})</p><ul><li><p>ex:<code>key = {&#39;wd&#39;:&#39;经济&#39;};urllib.parse.urlencode(key)</code><br>  Out[01]: ‘wd=%E7%BB%8F%E6%B5%8E’　返回值为字符串</p><blockquote><p>通过对查询参数进行编码，和资源路径拼接成字符串</p></blockquote></li><li><p>EX:终端输入内容，得到百度搜索结果，保存本地</p><pre class="line-numbers language-python"><code class="language-python">  <span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request  <span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse  <span class="token comment" spellcheck="true"># 1定义常用变量</span>  baseurl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/s?'</span>  headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">}</span>  key <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'>>>'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">## 编码URL,拼接URL</span>  key <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'wd'</span><span class="token punctuation">:</span>key<span class="token punctuation">}</span><span class="token punctuation">)</span>  url <span class="token operator">=</span> baseurl <span class="token operator">+</span> key  <span class="token comment" spellcheck="true"># 2拼接URL发请求响应</span>  req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>  res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span>  html <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 3保存到本地</span>  <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'baidu.html'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>      f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>2.quote(‘字符串’)</p><ul><li>ex:<code>s = urllib.parse.quote(&#39;经济&#39;)</code></li><li>更改其中两句命令<pre class="line-numbers language-python"><code class="language-python">  baseurl <span class="token operator">=</span> <span class="token string">'http://www.baidu.com/s?wd='</span>  key <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>3.unquote(‘字符串’)</p><ul><li>ex:<code>s = urllib.parse.unquote(&#39;%E7%BB%8F%E6%B5%8E&#39;)</code></li></ul></li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="百度贴吧数据抓取"><a href="#百度贴吧数据抓取" class="headerlink" title="百度贴吧数据抓取"></a>百度贴吧数据抓取</h4><p>要求：输入贴吧名字，起始页，终止页，响应内容保存本地，一个页面保存一个文件</p><blockquote><p>步骤</p><ul><li>step1 寻找URL规律<ul><li>吧名：<a href="http://tieba.baidu.com/f?kw=" target="_blank" rel="noopener">http://tieba.baidu.com/f?kw=</a>　??</li><li>吧页：＆pn=(n-1)*50</li></ul></li><li>step2 获取网页内容</li><li>step3 保存</li></ul></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse<span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">BaiduSpider</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>baseurl <span class="token operator">=</span> <span class="token string">'http://tieba.baidu.com/f?'</span>        self<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36'</span><span class="token punctuation">}</span>    <span class="token keyword">def</span> <span class="token function">getPage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''获取页面函数        '''</span>        req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span>        html <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> html    <span class="token keyword">def</span> <span class="token function">writePage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> html<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''保存数据函数        '''</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">workOn</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''主函数        '''</span>        <span class="token comment" spellcheck="true"># 定义常用变量</span>        name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'贴吧名>>>'</span><span class="token punctuation">)</span>        begin <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'起始页>>>'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        end <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">'终止页>>>'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">## 编码URL,拼接URL</span>        kw <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'kw'</span><span class="token punctuation">:</span>name<span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">## 编码每一页URL,拼接URL</span>        <span class="token keyword">for</span> page <span class="token keyword">in</span> range<span class="token punctuation">(</span>begin<span class="token punctuation">,</span> end<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            pn <span class="token operator">=</span> <span class="token punctuation">(</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span>            url <span class="token operator">=</span> self<span class="token punctuation">.</span>baseurl <span class="token operator">+</span> kw <span class="token operator">+</span> <span class="token string">'&amp;pn'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>pn<span class="token punctuation">)</span>            html <span class="token operator">=</span> self<span class="token punctuation">.</span>getPage<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            filename <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">'吧第%s页.html'</span> <span class="token operator">%</span> page            self<span class="token punctuation">.</span>writePage<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> html<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'爬取成功'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    spdier <span class="token operator">=</span> BaiduSpider<span class="token punctuation">(</span><span class="token punctuation">)</span>    spdier<span class="token punctuation">.</span>workOn<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫spider </tag>
            
            <tag> Anaconda </tag>
            
            <tag> Spyder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学39：抽样分布例题</title>
      <link href="/2019/01/01/stats-39/"/>
      <url>/2019/01/01/stats-39/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="抽样分布例题"><a href="#抽样分布例题" class="headerlink" title="抽样分布例题"></a>抽样分布例题</h1><p>The averagemale drinks 2L of water when active outdoors(with a standard deviation of 0.7L). You are planing a full day nature trip for 50 men and will bring 110L of water. What is the probability you will run out?</p><p>男性在户外活动时平均喝2L水（标准差是0.7L）．你组织一项50人全天户外旅行，准备110L水．这些水不够的概率是多少？</p><p>50人准备110L水，这意味等价于求平均喝水超过110/50＝2.2L的概率．</p><p>50个人作为样本（这是样本容量）它的均值服从正太分布，其中n=50</p><p>无限的抽样，样本均值抽样分布的均值近似等于总体的均值$\mu_{bar{x}} = 2$</p><p>样本均值抽样分布的标准差$\sigma_{\bar{x}} = \frac{\sigma ^2}{\sqrt{n}} = 0.099$</p><p>z分数（距离均值有多少个标准差），然后用z表格计算面积<br>$$2.2-2＝0.2$$<br>$$0.2/0.099＝2.02$$</p><p>水不够的概率就是改样本均值右侧2.02个标准差的概率</p><p><img src="/images/stats/s_39.png" alt="图片"></p><blockquote><p>z表格搜索引擎搜一下有很多．<br>它表示的小于z分数的概率</p></blockquote><p>水不够的概率为　1-0.9783　＝　0.0217</p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 抽样分布例题 </tag>
            
            <tag> z表格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学38：均值标准误差</title>
      <link href="/2019/01/01/stats-38/"/>
      <url>/2019/01/01/stats-38/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="均值标准误差"><a href="#均值标准误差" class="headerlink" title="均值标准误差"></a>均值标准误差</h1><p>已知原概率密度函数的标准差和样本容量，预测样本均值的抽样分布的方差．<br>$$\sigma_{\bar{x}}^2 = \frac{\sigma ^2}{n}$$</p><p>样本均值抽样分布的标准差通常称作 <strong>均值标注差</strong> 也称作均值标准误差<br>$$\sigma_{\bar{x}} = \frac{\sigma ^2}{\sqrt{n}}$$</p><blockquote><p>方差的代码和样本均值的抽样分布代码都在之前写过了，可以试试把他们结合起来验证一下公式的正确性．</p></blockquote><blockquote><p>还是再来一下代码吧．<br>代码是一个讨厌的东西，但是不得不承认它是一个很好的工具．这意味着要让它为你工作要显得比必须花时间调弄它划算．</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 只是在代码最后添加了计算标准差</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'原来分布标准差'</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算样本均值抽样分布标准差'</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token operator">/</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>SIZE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'样本均值抽样分布标准差'</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>random_num<span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> L<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>并不是完美的一样，样本的数量不要设的太小（这里是10000）<br>代码变量名字起的不好，SIZE才是样本容量，相当于公式里面的N</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token keyword">import</span> random<span class="token keyword">import</span> warnings<span class="token keyword">def</span> <span class="token function">daw</span><span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> N<span class="token punctuation">,</span> L<span class="token punctuation">)</span><span class="token punctuation">:</span>    fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span>     ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">)</span>    fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># ax1.grid(True, color='k', linestyle='-.')</span>    ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>ion<span class="token punctuation">(</span><span class="token punctuation">)</span>    mean <span class="token operator">=</span> sum<span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token operator">/</span>len<span class="token punctuation">(</span>L<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> N<span class="token punctuation">:</span>        plt<span class="token punctuation">.</span>pause<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span>        S<span class="token punctuation">,</span> S_mean <span class="token operator">=</span> random_num<span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> i<span class="token punctuation">,</span> L<span class="token punctuation">)</span>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> stats_num<span class="token punctuation">(</span>S_mean<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print('S', S); print(mean); print('x', x); print('y', y)</span>        ax1<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span>        ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">(</span>mean<span class="token punctuation">,</span>mean<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'g-.'</span><span class="token punctuation">)</span>        ax1<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">)</span>     xy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token keyword">for</span> a<span class="token punctuation">,</span> b <span class="token keyword">in</span> zip<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">]</span>    xy <span class="token operator">=</span> sorted<span class="token punctuation">(</span>xy<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> s<span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> a <span class="token keyword">in</span> xy<span class="token punctuation">]</span>    y <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> a <span class="token keyword">in</span> xy<span class="token punctuation">]</span>    ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'r-'</span><span class="token punctuation">)</span>        plt<span class="token punctuation">.</span>ioff<span class="token punctuation">(</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 随机取样</span><span class="token keyword">def</span> <span class="token function">random_num</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> n<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">:</span>    S <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> size<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    S_mean <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>        _s <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">:</span>            _s<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span>        mean <span class="token operator">=</span> sum<span class="token punctuation">(</span>_s<span class="token punctuation">)</span><span class="token operator">/</span>size        _s<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean<span class="token punctuation">)</span>        S<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> _s        S_mean<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean<span class="token punctuation">)</span>    <span class="token keyword">return</span> S<span class="token punctuation">,</span> S_mean<span class="token comment" spellcheck="true">## 统计次数</span><span class="token keyword">def</span> <span class="token function">stats_num</span><span class="token punctuation">(</span>S_mean<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> set<span class="token punctuation">(</span>S_mean<span class="token punctuation">)</span><span class="token punctuation">]</span>    y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">:</span>        y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>S_mean<span class="token punctuation">.</span>count<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token punctuation">,</span> y<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>      <span class="token comment" spellcheck="true">## 总体中数字频率</span>    SIZE <span class="token operator">=</span> <span class="token number">100</span>                  <span class="token comment" spellcheck="true">## 样本容量 </span>    N <span class="token operator">=</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10001</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">## 样本数量</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'原来分布标准差'</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算样本均值抽样分布标准差'</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token operator">/</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>SIZE<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'样本均值抽样分布标准差'</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>random_num<span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> L<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    warnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">'ignore'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#忽略警告</span>    daw<span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> N<span class="token punctuation">,</span> L<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 均值标准误差 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学37：样本均值的抽样分布2</title>
      <link href="/2019/01/01/stats-37/"/>
      <url>/2019/01/01/stats-37/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="样本均值的抽样分布"><a href="#样本均值的抽样分布" class="headerlink" title="样本均值的抽样分布"></a>样本均值的抽样分布</h1><p>在35节的图中，样本选择4中间会有很多个值是取不到的，发现它是一列一列的，那是因为总有值是平均不出来的，可以把样本假设为2就很容易思考出来了，随机选择两个数，他们的平均数就那么几种情况．</p><p>随着样本容量趋于无穷，样本均值的抽样分布趋于正态分布，当然不需要那么多就已经观察到效果．<br>随着样本容量趋于无穷，偏度更接近于0，峰度也更接近于0，标准差是变小的．</p><blockquote><p>样本容量非常非常的大，那么它的均值是基本代替总体均值的．几百万的样本值的均值是对总体均值的很好估计．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 样本均值的抽样分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学36：样本均值的抽样分布</title>
      <link href="/2019/01/01/stats-36/"/>
      <url>/2019/01/01/stats-36/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="样本均值的抽样分布"><a href="#样本均值的抽样分布" class="headerlink" title="样本均值的抽样分布"></a>样本均值的抽样分布</h1><blockquote><p>上一节中图表表示每次实验的样本均值的频率，称为样本均值的抽样分布图．<br>抽样分布表示，它来自于原分布．</p></blockquote><blockquote><p>这一节主要是抽样的模拟．</p></blockquote><p><a href="http://onlinestatbook.com/" target="_blank" rel="noopener">视频中软件来源</a></p><blockquote><p>如果在网站中找不到可以直接通过<a href="http://onlinestatbook.com/2/sampling_distributions/clt_demo.html" target="_blank" rel="noopener">详细位置</a>跳入这个页面，点击左上角<code>run simulation</code>．（博主的浏览器没有插件而且对JAVA一窍不通，所以博主没有体会到．）</p></blockquote><h3 id="偏度"><a href="#偏度" class="headerlink" title="偏度"></a>偏度</h3><p>完美的正态分布，偏度为0；<br>偏度为正意味着右边的尾部较长；<br>偏度为负表示左边的尾部较长．</p><p><img src="/images/stats/s_36_01.png" alt="图片"></p><h3 id="峰度"><a href="#峰度" class="headerlink" title="峰度"></a>峰度</h3><p>如果峰度为正，尾部较肥，峰值比较尖（峰度越大，比实际正态分布越尖）；<br>负峰度，尾部较小，中间平滑．</p><p><img src="/images/stats/s_36_02.png" alt="图片"></p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 中心极限定理 </tag>
            
            <tag> 样本均值的抽样分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学35：中心极限定理</title>
      <link href="/2019/01/01/stats-35/"/>
      <url>/2019/01/01/stats-35/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="中心极限定理"><a href="#中心极限定理" class="headerlink" title="中心极限定理"></a>中心极限定理</h1><p>一组数，[1, 1, 3, 4, 6, 6]（可以理解成把2，5点分别换成了1，6点的实验．），从这组数中取样本，假设样本为4．</p><p>我用python模拟了随机的过程，动画表示样本数100,200,300…10000的变化．随着样本数量的增加，接近正态分布．</p><p><img src="/images/stats/s_35_01.gif" alt="图片"></p><p>下面的动图是更改了样本容量．可以在代码中对应的参数更改，已经封为函数，可以直接更改对应的参数．</p><p><img src="/images/stats/s_35_02.gif" alt="图片"></p><blockquote><p>随着样本容量增加，样本均值的频率图接近正太分布．</p></blockquote><blockquote><p>采用的样本均值的例子，也可以是样本的和，同样成立．</p></blockquote><blockquote><p>隔很多节没有python了，这一节仔细看一下程序，尝试更改程序去观察中心极限定理在说明什么．</p></blockquote><h3 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h3><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token keyword">import</span> random<span class="token keyword">def</span> <span class="token function">daw</span><span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> N<span class="token punctuation">,</span> L<span class="token punctuation">)</span><span class="token punctuation">:</span>    fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span>     ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">)</span>    fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># ax1.grid(True, color='k', linestyle='-.')</span>    ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>ion<span class="token punctuation">(</span><span class="token punctuation">)</span>    mean <span class="token operator">=</span> sum<span class="token punctuation">(</span>L<span class="token punctuation">)</span><span class="token operator">/</span>len<span class="token punctuation">(</span>L<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> N<span class="token punctuation">:</span>        plt<span class="token punctuation">.</span>pause<span class="token punctuation">(</span><span class="token number">0.0001</span><span class="token punctuation">)</span>        S<span class="token punctuation">,</span> S_mean <span class="token operator">=</span> random_num<span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> i<span class="token punctuation">,</span> L<span class="token punctuation">)</span>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> stats_num<span class="token punctuation">(</span>S_mean<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># print('S', S); print(mean); print('x', x); print('y', y)</span>        ax1<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span>        ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">(</span>mean<span class="token punctuation">,</span>mean<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'g-.'</span><span class="token punctuation">)</span>        ax1<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">)</span>     xy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token keyword">for</span> a<span class="token punctuation">,</span> b <span class="token keyword">in</span> zip<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">]</span>    xy <span class="token operator">=</span> sorted<span class="token punctuation">(</span>xy<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> s<span class="token punctuation">:</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> a <span class="token keyword">in</span> xy<span class="token punctuation">]</span>    y <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> a <span class="token keyword">in</span> xy<span class="token punctuation">]</span>    ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'r-'</span><span class="token punctuation">)</span>        plt<span class="token punctuation">.</span>ioff<span class="token punctuation">(</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">## 随机取样</span><span class="token keyword">def</span> <span class="token function">random_num</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> n<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">:</span>    S <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> size<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    S_mean <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>        _s <span class="token operator">=</span> list<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">:</span>            _s<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span>        mean <span class="token operator">=</span> sum<span class="token punctuation">(</span>_s<span class="token punctuation">)</span><span class="token operator">/</span>size        _s<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean<span class="token punctuation">)</span>        S<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> _s        S_mean<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mean<span class="token punctuation">)</span>    <span class="token keyword">return</span> S<span class="token punctuation">,</span> S_mean<span class="token comment" spellcheck="true">## 统计次数</span><span class="token keyword">def</span> <span class="token function">stats_num</span><span class="token punctuation">(</span>S_mean<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> set<span class="token punctuation">(</span>S_mean<span class="token punctuation">)</span><span class="token punctuation">]</span>    y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">:</span>        y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>S_mean<span class="token punctuation">.</span>count<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token punctuation">,</span> y<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>      <span class="token comment" spellcheck="true">## 总体中数字频率</span>    SIZE <span class="token operator">=</span> <span class="token number">100</span>                  <span class="token comment" spellcheck="true">## 样本容量</span>    N <span class="token operator">=</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10001</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">## 样本数量</span>    daw<span class="token punctuation">(</span>SIZE<span class="token punctuation">,</span> N<span class="token punctuation">,</span> L<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Matplotlib </tag>
            
            <tag> 中心极限定理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学29：正态分布介绍</title>
      <link href="/2019/01/01/stats-29/"/>
      <url>/2019/01/01/stats-29/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="正态分布介绍"><a href="#正态分布介绍" class="headerlink" title="正态分布介绍"></a>正态分布介绍</h1><blockquote><p>推论统计几乎完全以正态分布为基础的它的重要性可想而知．像线性规划的残差就是以它为假设，然后也是通过它的基础求解的．</p></blockquote><p>再来熟悉你下的函数，有必要经常看一下,建议自己动手把公式显示你的面前，还要认识它的不同的样子．<br>$$P(X) = \frac{1}{\sigma \sqrt{2\pi}}e^{-\frac{1}{2}\big(\frac{x-\mu}{\sigma} \big)^2}$$<br>也可以是<br>$$P(X) = \frac{1}{\sqrt{2\pi \sigma ^2}}e^{-\frac{(x-\mu)^2}{2\sigma ^2}}$$<br>也可是<br>$$P(X) = \frac{1}{\sqrt{2\pi \sigma ^2 e^{z^2}}}　_{…其中z=\frac{x-\mu}{\sigma}}$$</p><blockquote><p>$P(X) = \frac{1}{\sqrt{2\pi \sigma ^2}} \Big( e^ {\big(\frac{x-\mu}{\sigma} \big)^2} \Big)^{-\frac{1}{2}}$<br>$e^{-\frac{1}{2}a}=\big(e^a\big)^{-\frac{1}{2}}$<br>$z=\frac{x-\mu}{\sigma}$标准$z$分数，它并不是第一次出现．</p></blockquote><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><h4 id="这是一个概率密度函数图形"><a href="#这是一个概率密度函数图形" class="headerlink" title="这是一个概率密度函数图形"></a>这是一个概率密度函数图形</h4><p><img src="/images/stats/s_29_01.png" alt="图片"></p><blockquote><p>下载表格，尝试更改里面的均值和标准差．</p></blockquote><p>看看有哪些结论</p><ul><li>均值$\mu$是它的对称轴．</li><li>标准差$\sigma$表示图形的宽窄，标准差越小，意味者数值越向平均值靠拢，在图像中就会呈现出窄的样子．（可以理解为标准差是同均值的某种平均距离）</li><li>二项分布是有限的，正太分布在整个实轴上都有定义．（尽管延伸出去概率极小，但也是存在的）</li></ul><p>对于正态分布的概率，应该用两点间曲线下方的面积描述．<br>它的计算应该对函数求解积分．但是这个积分过于难求，因此采用数值的方法求解（累积分布函数CDF）．<br>CDF（x）是求面积的关于x的函数，它是概率密度曲线的积分，表示小于x的面积．<br>$$CDF(x)={\int_{-\infty}^{x}P(x)dx}$$</p><blockquote><p>之前我用累积的方法在python中求解过．</p></blockquote><blockquote><p>在Excel中，正态分布函数<code>normdist</code>可以快速的求正态分布密度函数和累积函数<br>$normdist(x,\mu ,\sigma ,TRUE/FALSE)$TRUE表示求累积分布值，FALSE表示求概率密度函数的高值，在表格中使用函数，它会有自动提示．</p></blockquote><h4 id="这是一个累积分布函数图形"><a href="#这是一个累积分布函数图形" class="headerlink" title="这是一个累积分布函数图形"></a>这是一个累积分布函数图形</h4><p><img src="/images/stats/s_29_02.png" alt="图片"></p><blockquote><p>刚刚发现图片插入的不合适，值都和100％重合上了，不利于观察．（实际是没有重合的，表格中的数也是存在近似的）<br>没关系，只要明白$CDF(x)$对应的值是表示小于x的概率，这个图就会看了．</p></blockquote><p>如果要求$a＜x＜b$的概率，只需要求$CDF(a)-CDF(b)$就可以了．</p><blockquote><p>表格中的计算就是这样做的</p></blockquote><h3 id="python中的正态分布"><a href="#python中的正态分布" class="headerlink" title="python中的正态分布"></a>python中的正态分布</h3><p>在python中的科学计算包<code>scipy</code>中，stats.norm.pdf（x），stats.norm.cdf（x）分别表示概率密度函数和累积函数，具体参数这里不做介绍．<br>下面是利用python绘图程序．</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> scipy <span class="token keyword">import</span> exp<span class="token punctuation">,</span> sqrt<span class="token punctuation">,</span> stats<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>mathtext <span class="token keyword">as</span> mathtext<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> stats<span class="token punctuation">.</span>norm<span class="token punctuation">.</span>pdf<span class="token punctuation">(</span>t<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#默认标准正态分布　＼mu=0 \sigma=1</span>z <span class="token operator">=</span> <span class="token number">0.2</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span>fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>ax1<span class="token punctuation">,</span> ax2<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.45</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 绘制标准正态分布</span>x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">40</span><span class="token punctuation">.</span><span class="token punctuation">)</span>sum <span class="token operator">=</span> <span class="token number">0</span>delta <span class="token operator">=</span> <span class="token number">0.001</span>s <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> z<span class="token punctuation">,</span> delta<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    sum <span class="token operator">+=</span> f<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">*</span> delta     <span class="token comment" spellcheck="true"># 累积</span>ax1<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'area is '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>round<span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> shrink<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'z = '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> f<span class="token punctuation">(</span>x2<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 填充</span><span class="token keyword">def</span> <span class="token function">f2</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> stats<span class="token punctuation">.</span>norm<span class="token punctuation">.</span>cdf<span class="token punctuation">(</span>x<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 计算标准正态分布累积</span>y1 <span class="token operator">=</span> f2<span class="token punctuation">(</span>x<span class="token punctuation">)</span>y2 <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span>x3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>y3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> <span class="token string">'b-'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x3<span class="token punctuation">,</span> y3<span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span><span class="token punctuation">[</span>z<span class="token punctuation">,</span> z<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>f2<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'f(z)=f('</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">') is '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>np<span class="token punctuation">.</span>round<span class="token punctuation">(</span>f2<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    xy<span class="token operator">=</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> f2<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xytext<span class="token operator">=</span><span class="token punctuation">(</span>z<span class="token number">-3</span><span class="token punctuation">,</span> f2<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> shrink<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'z is '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span> shrink<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>m <span class="token operator">=</span> r<span class="token string">'$\frac{1}{\sqrt{2\pi\sigma^2}}e^{-\frac{(x-\mu)^2}{2\sigma^2}}$'</span>parser <span class="token operator">=</span> mathtext<span class="token punctuation">.</span>MathTextParser<span class="token punctuation">(</span><span class="token string">'Bitmap'</span><span class="token punctuation">)</span>r<span class="token punctuation">,</span> depth <span class="token operator">=</span> parser<span class="token punctuation">.</span>to_rgba<span class="token punctuation">(</span>m<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'k'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>figimage<span class="token punctuation">(</span>r<span class="token punctuation">.</span>astype<span class="token punctuation">(</span>float<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">255</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">,</span> <span class="token number">580</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>多利用电子表格熟悉图形和数值之间的关系．</p></blockquote><hr><h4 id="本节excel文件下载链接"><a href="#本节excel文件下载链接" class="headerlink" title="本节excel文件下载链接"></a>本节excel文件下载链接</h4><p><a href="http://pl0108rj3.bkt.clouddn.com/stats/excel/stat_29_%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83.xlsx" target="_blank" rel="noopener">中文表格</a><br><a href="https://www.khanacademy.org/downloads" target="_blank" rel="noopener">可汗学院原表格</a></p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> scipy </tag>
            
            <tag> Excel </tag>
            
            <tag> Matplotlib </tag>
            
            <tag> 正态分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学28：正态分布Excel练习</title>
      <link href="/2019/01/01/stats-28/"/>
      <url>/2019/01/01/stats-28/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="正态分布Excel练习"><a href="#正态分布Excel练习" class="headerlink" title="正态分布Excel练习"></a>正态分布Excel练习</h1><blockquote><p>他有很多个名字：正态分布，高斯分布，钟形曲线</p></blockquote><h3 id="正态分布密度函数"><a href="#正态分布密度函数" class="headerlink" title="正态分布密度函数"></a>正态分布密度函数</h3><p>$$P(X) = \frac{1}{\sigma \sqrt{2\pi}}e^{-\frac{1}{2}\big(\frac{x-\mu}{\sigma} \big)^2}$$</p><blockquote><p>标准z分数$\frac{x-\mu}{\sigma}$ <em>离均值的距离除以标准差（离均值有多少个标准差远）</em></p></blockquote><h3 id="二项分布与正态分布的比较"><a href="#二项分布与正态分布的比较" class="headerlink" title="二项分布与正态分布的比较"></a>二项分布与正态分布的比较</h3><table><thead><tr><th style="text-align:left">试验次数</th><th style="text-align:right">10</th></tr></thead><tbody><tr><td style="text-align:left">左移步数平均值</td><td style="text-align:right">5</td></tr><tr><td style="text-align:left">方差</td><td style="text-align:right">2.5</td></tr><tr><td style="text-align:left">标准差</td><td style="text-align:right">1.581</td></tr></tbody></table><table><thead><tr><th style="text-align:right">结束位置</th><th style="text-align:right">左</th><th style="text-align:right">右</th><th style="text-align:right">二项分布</th><th style="text-align:right">正态分布</th></tr></thead><tbody><tr><td style="text-align:right">10</td><td style="text-align:right">0</td><td style="text-align:right">10</td><td style="text-align:right">0.000976563</td><td style="text-align:right">0.001700073</td></tr><tr><td style="text-align:right">8</td><td style="text-align:right">1</td><td style="text-align:right">9</td><td style="text-align:right">0.009765625</td><td style="text-align:right">0.010284844</td></tr><tr><td style="text-align:right">6</td><td style="text-align:right">2</td><td style="text-align:right">8</td><td style="text-align:right">0.043945313</td><td style="text-align:right">0.0417071</td></tr><tr><td style="text-align:right">4</td><td style="text-align:right">3</td><td style="text-align:right">7</td><td style="text-align:right">0.1171875</td><td style="text-align:right">0.113371653</td></tr><tr><td style="text-align:right">2</td><td style="text-align:right">4</td><td style="text-align:right">6</td><td style="text-align:right">0.205078125</td><td style="text-align:right">0.206576621</td></tr><tr><td style="text-align:right">0</td><td style="text-align:right">5</td><td style="text-align:right">5</td><td style="text-align:right">0.24609375</td><td style="text-align:right">0.252313254</td></tr><tr><td style="text-align:right">-2</td><td style="text-align:right">6</td><td style="text-align:right">4</td><td style="text-align:right">0.205078125</td><td style="text-align:right">0.206576621</td></tr><tr><td style="text-align:right">-4</td><td style="text-align:right">7</td><td style="text-align:right">3</td><td style="text-align:right">0.1171875</td><td style="text-align:right">0.113371653</td></tr><tr><td style="text-align:right">-6</td><td style="text-align:right">8</td><td style="text-align:right">2</td><td style="text-align:right">0.043945313</td><td style="text-align:right">0.0417071</td></tr><tr><td style="text-align:right">-8</td><td style="text-align:right">9</td><td style="text-align:right">1</td><td style="text-align:right">0.009765625</td><td style="text-align:right">0.010284844</td></tr><tr><td style="text-align:right">-10</td><td style="text-align:right">10</td><td style="text-align:right">0</td><td style="text-align:right">0.000976563</td><td style="text-align:right">0.001700073</td></tr></tbody></table><blockquote><p>表格中的计算可以去下载表格，点几下你就明白了．建议更改实验次数观察图像变化．</p></blockquote><p><img src="/images/stats/s_28_01.png" alt="图片"></p><blockquote><p>在Excel中，上图是散点图选项中散点图与平滑曲线，它并不是使用折线图的选项绘制的．</p></blockquote><p>之前的文章已经解释了离散变量和连续变量．对于二项分布，它描述的离散情况，对应的概率$P(X=2)=0.0439$（左移两步的概率）离散变量可以一一枚举，而连续变量我们说$P(X=2)$几乎为0，因为很难取到刚刚好的值．在这里我们看到正太分布$P(X=2)$对应的为0.04171（密度函数的值），它其实是我们假设位置在5.5步到6.5步，也就是设宽度为1单位乘以对应的高．所以在图上我标记了一根线段，它的面积为$0.04171\times 1$（实际我们应该求积分的），对于二项分布，它表示是一个条形图的高，我用绿色的框标识了出来．</p><h3 id="收敛情况"><a href="#收敛情况" class="headerlink" title="收敛情况"></a>收敛情况</h3><table><thead><tr><th style="text-align:right">总移步数</th><th style="text-align:right">10</th><th style="text-align:right">20</th><th style="text-align:right">30</th><th style="text-align:right">40</th><th style="text-align:right">50</th><th style="text-align:right">60</th></tr></thead><tbody><tr><td style="text-align:right">右移步数</td><td style="text-align:right">10</td><td style="text-align:right"><em>15</em></td><td style="text-align:right">20</td><td style="text-align:right">25</td><td style="text-align:right">30</td><td style="text-align:right">35</td></tr><tr><td style="text-align:right">左移步数</td><td style="text-align:right">0</td><td style="text-align:right"><em>5</em></td><td style="text-align:right">10</td><td style="text-align:right">15</td><td style="text-align:right">20</td><td style="text-align:right">25</td></tr><tr><td style="text-align:right">二项分布概率</td><td style="text-align:right">0.000976563</td><td style="text-align:right"><em>0.014785767</em></td><td style="text-align:right">0.027981601</td><td style="text-align:right">0.036584738</td><td style="text-align:right">0.041859149</td><td style="text-align:right">0.045029465</td></tr><tr><td style="text-align:right">左移步数平均值</td><td style="text-align:right">5</td><td style="text-align:right"><em>10</em></td><td style="text-align:right">15</td><td style="text-align:right">20</td><td style="text-align:right">25</td><td style="text-align:right">30</td></tr><tr><td style="text-align:right">方差</td><td style="text-align:right">2.5</td><td style="text-align:right"><em>5</em></td><td style="text-align:right">7.5</td><td style="text-align:right">10</td><td style="text-align:right">12.5</td><td style="text-align:right">15</td></tr><tr><td style="text-align:right">正态分布</td><td style="text-align:right">0.001700073</td><td style="text-align:right"><em>0.014644983</em></td><td style="text-align:right">0.027514099</td><td style="text-align:right">0.036144479</td><td style="text-align:right">0.04151075</td><td style="text-align:right">0.044766421    </td></tr><tr><td style="text-align:right">差值</td><td style="text-align:right">0.000723511</td><td style="text-align:right"><em>0.000140784</em></td><td style="text-align:right">0.000467501</td><td style="text-align:right">0.000440259</td><td style="text-align:right">0.000348399</td><td style="text-align:right">0.000263044</td></tr></tbody></table><p>有必要来练习一下正态分布函数的计算：<br>计算表中第二列为例<br>$$P(X＝5) = \frac{1}{\sqrt 5 \sqrt{2\pi}}e^{-\frac{1}{2}\big(\frac{5-10}{\sqrt 5} \big)^2}=0.014644983$$</p><blockquote><p>表格中的计算可以去下载表格，它在同一个excel文件中名为＇收敛＇的表格．</p></blockquote><p><img src="/images/stats/s_28_02.png" alt="图片"></p><p>随着总的移动步数（实验样本的容量）增加，他们的差是趋于0的．</p><blockquote><p>在电子表格中调节最终位置观察图像时，注意不能为奇数，原因是非左即右，步差为偶数．奇数是不收敛的，你可以尝试一下不收敛的图像是什么样子．（收敛其实就是随着变量的变化，结果趋向于某一个值．）</p></blockquote><hr><h4 id="本节excel文件下载链接"><a href="#本节excel文件下载链接" class="headerlink" title="本节excel文件下载链接"></a>本节excel文件下载链接</h4><p><a href="http://pl0108rj3.bkt.clouddn.com/stats/excel/stat_28_%E4%BA%8C%E9%A1%B9%E5%88%86%E5%B8%83Excel%E7%BB%83%E4%B9%A0.xlsx" target="_blank" rel="noopener">中文表格</a><br><a href="https://www.khanacademy.org/downloads" target="_blank" rel="noopener">可汗学院原表格</a></p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> Excel </tag>
            
            <tag> 正态分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学27：大数定律</title>
      <link href="/2019/01/01/stats-27/"/>
      <url>/2019/01/01/stats-27/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="大数定律-Law-of-Large-Numbers"><a href="#大数定律-Law-of-Large-Numbers" class="headerlink" title="大数定律 Law of Large Numbers"></a>大数定律 Law of Large Numbers</h1><blockquote><p>讨论 <strong>随机变量</strong>序列的算术平均值向随机变量各数学期望的算术平均值 <strong>收敛</strong>的定律</p></blockquote><p>设随机变量X,期望值$E(X)$</p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>随机变量的n次观测样本，将所有观测值平均起来，（$\bar X_n$表示该平均值，$X_1,X_2,X_3…$表示观测值）</p><p>$$\bar X_n = \frac{X_1+X_2+X_3+…+X_n}{n}$$<br>大数定律表示样本均值趋近与随机变量的期望值，或者说n趋于无穷，样本均值趋于总体样本．<br>$$\bar X_n \rightarrow E(X) 　　for　 n \rightarrow \infty$$<br>or$$\bar X_n \rightarrow \mu 　　for　 n \rightarrow \infty$$</p><blockquote><p>样本越大，均值越接近期望值．</p></blockquote><h4 id="抛硬币"><a href="#抛硬币" class="headerlink" title="抛硬币"></a>抛硬币</h4><p>100次实验，期望值$E(X)=100\times 0.5=50$<br>样本，第一次实验是55正，第二次是65正．．．．<br>根据大数定律，随着样本数量的增加样本的均值$\bar X_n$收敛于50</p><blockquote><p>赌徒谬论：前100次实验，结果都数字都偏大，那么后面数字就会偏小．</p></blockquote><blockquote><p>每次的实验是独立的，每个样本也是独立的，下一个实验概率仍然是0.5．大数定律是趋于无穷，后面还可以做无穷次实验，并不意味者后面数字就会偏小来补偿</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 大数定律 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学26：泊松过程2</title>
      <link href="/2019/01/01/stats-26/"/>
      <url>/2019/01/01/stats-26/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="泊松过程"><a href="#泊松过程" class="headerlink" title="泊松过程"></a>泊松过程</h1><blockquote><p>测出平均每小时9辆车通过$\lambda=9$</p></blockquote><p>$$P(X=k) = {\lim_{n\to \infty}} \binom{n}{k} \bigg(\frac{\lambda}{n} \bigg)^k \bigg(1-\frac{\lambda}{n} \bigg)^{n-k} = \frac{\lambda ^k}{k!}e^{-\lambda}$$<br>ex:<br>$P(X=2) =\frac{9 ^2}{k!}e^{-9}=0.004998$</p><blockquote><p>固定的平均瞬时速率$\lambda$（或称密度）随机且独立地出现时，这个事件在单位时间（面积或体积）内出现的次数或个数近似地服从泊松分布.</p></blockquote><blockquote><p>一般的说，若$X～B(n,p)$,其中n很大，p很小，因而$np=\lambda$不太大时，X的分布接近于泊松分布.这个事实有时可将较难计算的二项分布转化为泊松分布去计算</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 泊松过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学25：泊松过程1</title>
      <link href="/2019/01/01/stats-25/"/>
      <url>/2019/01/01/stats-25/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="泊松过程"><a href="#泊松过程" class="headerlink" title="泊松过程"></a>泊松过程</h1><p>确定交通道路上任意时刻通过车的数量．先定义一个相关随机变量X（表示一个小时内通过的车辆数）．</p><blockquote><p>假设条件：任意时刻的情况没有差异（没有高峰期之类的，每分每秒都一样），每一时刻是独立（不会受其他时刻的影响）</p></blockquote><p>基于假设估计均值</p><blockquote><p>可以先观察几个小时的车流量，然后平均，来估计总体的均值．那也就期望值．假设期望值的估计值是$\lambda$，已知二项分布（每一小时间区间是否通过车）．</p></blockquote><p>$$E(X) = \lambda = np$$</p><blockquote><p>一小时有60分钟，我们就假设n为60次实验次数，p则是通过K车的概率．单次实验通过车概率为$\frac{\lambda}{60}$</p></blockquote><p>$$E(X=k) = \binom{60}{k}(\frac{\lambda}{60})^k(1-\frac{\lambda}{60})^{(60-k)}$$</p><blockquote><p>但是一分钟可能有多辆车通过，那就改成3600次，但是每一秒有好多车通过，那就让大无穷大．</p></blockquote><h3 id="复习数学"><a href="#复习数学" class="headerlink" title="复习数学"></a>复习数学</h3><p>$${\lim_{x \to +\infty}} (1+ \frac{a}{x}) ^x = e^a$$</p><blockquote><p><em>$\frac{1}{n}=\frac{a}{x}$</em><br>$${\lim_{n \to +\infty}} (1+ \frac{1}{n}) ^{na} = \bigg( {\lim_{n \to +\infty}} \big(1+ \frac{1}{n} \big) ^n \bigg)^a$$<br>$${\lim_{n \to +\infty}} \big(1+ \frac{1}{n} \big) ^n =e$$</p></blockquote><p>$$\frac{x!}{(x-k)!} = x(x-1)(x-2)…(x-k+1)$$<br>$${\lim_{x \to a}} f(x) g(x) = {\lim_{x \to a}} f(x){\lim_{x \to a}} g(x)$$</p><h3 id="推导"><a href="#推导" class="headerlink" title="推导"></a>推导</h3><blockquote><p>$P(X=k) = {\lim_{n\to \infty}} \binom{n}{k} \bigg(\frac{\lambda}{n} \bigg)^k \bigg(1-\frac{\lambda}{n} \bigg)^{n-k}\\<br>　　　　　= {\lim_{n\to \infty}} \frac{n!}{(n-k)!k!} \frac{\lambda ^k}{n^k} \bigg(1-\frac{\lambda}{n} \bigg)^n \bigg(1-\frac{\lambda}{n} \bigg)^{-k}\\<br>　　　　　= {\lim_{n\to \infty}} \frac{n(n-1)(n-2)…(n-k+1)}{n^k} \frac{\lambda ^k}{k!} \bigg(1-\frac{\lambda}{n} \bigg)^n \bigg(1-\frac{\lambda}{n} \bigg)^{-k}\\<br>　　　　　= {\lim_{n\to \infty}} \frac{n(n-1)(n-2)…(n-k+1)}{n^k} 　\frac{\lambda ^k}{k!}　 {\lim_{n\to \infty}} \bigg(1-\frac{\lambda}{n} \bigg)^n \bigg(1-\frac{\lambda}{n} \bigg)^{-k}\\<br>　　　　　= 1 　\frac{\lambda ^k}{k!}　e^{-\lambda}　1<br>$</p></blockquote><p>$$P(X=k) = {\lim_{n\to \infty}} \binom{n}{k} \bigg(\frac{\lambda}{n} \bigg)^k \bigg(1-\frac{\lambda}{n} \bigg)^{n-k} = \frac{\lambda ^k}{k!}e^{-\lambda}$$</p><blockquote><p><em>$n(n-1)(n-2)…(n-k+1)=n^k…$，省略号部分比$n^k$阶数小</em><br>$${\lim_{n\to \infty}} \frac{n(n-1)(n-2)…(n-k+1)}{n^k}=1$$</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 泊松过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学24：二项分布的期望值</title>
      <link href="/2019/01/01/stats-24/"/>
      <url>/2019/01/01/stats-24/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="二项分布的期望值"><a href="#二项分布的期望值" class="headerlink" title="二项分布的期望值"></a>二项分布的期望值</h1><p>假设随机变量X表示n次实验的次数，其中每次成功的概率是P.</p><p>$$E(X) = np$$</p><blockquote><p>在二项分布中，期望值可以看成是最可能得到的那个结果．</p></blockquote><p>假设投篮的命中概率为40％，投10次．<br>那么$E(X) = np = 10 \times 40\% =4$</p><blockquote><p>可以理解为命中概率为40％，那么投10次，可能4次命中．</p></blockquote><h4 id="回顾二项式概率的公式："><a href="#回顾二项式概率的公式：" class="headerlink" title="回顾二项式概率的公式："></a>回顾二项式概率的公式：</h4><p>$$P(X=k) = (_k^n)p^k(1-P)^{n-k}$$</p><h4 id="期望值公式："><a href="#期望值公式：" class="headerlink" title="期望值公式："></a>期望值公式：</h4><p>$$E(X) = \sum_{k=0}^nkP(X=k)=\sum_{k=0}^n(_k^n)kP^k(1-P)^{n-k}$$<br>$　　E(X) =0(_0^n)p^0(1-P)^{n-0}+1(_1^n)p^1(1-P)^{n-1}+…+n(_n^n)p^n(1-P)^{n-n}\\<br>　　　　　=1(_1^n)p^1(1-P)^{n-1}+…+n(_n^n)p^n(1-P)^{n-n} \\<br>　　　　　=\sum _{k=1}^n(_k^n)P^k(1-P)^{n-K}<br>$</p><p><em>代入二项式系数公式</em><br>$$二项式系数　　　(_k^n)=\frac{n!}{k!(n-k)!}$$<br>　　　　　　　　　$E(X) =\sum _{k=1}^n \frac{n!}{k!(n-k)!} k P^k(1-P)^{n-K}\\<br>　　　=\sum _{k=1}^n \frac{n!}{k(k-1)!(n-k)!} k P^k(1-P)^{n-K}\\<br>　　　=\sum _{k=1}^n \frac{n!}{(k-1)!(n-k)!} P^k(1-P)^{n-K}\\<br>　　　=\sum _{k=1}^n \frac{n(n-1)!}{(k-1)!(n-k)!} PP^{k-1}(1-P)^{n-K}\\<br>　　　=np\sum _{k=1}^n \frac{(n-1)!}{(k-1)!(n-k)!} P^{k-1}(1-P)^{n-K}\\<br>$</p><p><em>令$a=k-1,b=n-1$，则$n-k=b-a$</em><br>　　　　　　　　　$E(X) =np\sum _{a=0}^b \frac{(b)!}{a!(b-a)!} P^{a}(1-P)^{b-a}\\<br>　　　=np\sum _{a=0}^b (_a^b) P^{a}(1-P)^{b-a}\\<br>　　　= np<br>$</p><blockquote><p>$\sum _{a=0}^b (_a^b) P^{a}(1-P)^{b-a}$表示一个二项分布的概率和，和应该为1</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 二项分布 </tag>
            
            <tag> 期望值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学23：期望值E(X)</title>
      <link href="/2019/01/01/stats-23/"/>
      <url>/2019/01/01/stats-23/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="期望值"><a href="#期望值" class="headerlink" title="期望值"></a>期望值</h1><blockquote><p>如果你是在B站上看的，这一节课可能会没有字幕，这里介绍的稍微详细一点．</p></blockquote><p><strong>介绍集中趋势的时候，用均值描述是一种常用的方法．</strong><br>给出一个总体，一组数： 3, 3, 3, 4, 5<br>它的平均数是：　$\frac{3+3+3+4+5}{5} = \frac{18}{5} = 3.6$<br>我们可以换一种方式来看，里面有3个3，1个4，1个5：$\frac{3(3)+1(4)+1(5)}{5}$<br>进行一些简单的数字运算：$\frac{1}{5} \times (3\times 3+1\times 4+1\times 5)=\frac{3}{5}\times 3+\frac{1}{5}\times 4+\frac{1}{5}\times 5$<br>　　$60\% \times 3+20\% \times 4+20\% \times 5$<br>上面的式子等价于所有的数字加起来除以5.</p><p><strong>频率</strong><br>观察这个式子，$60\% \times 3+20\% \times 4+20\% \times 5$，这里没有表示每个数字出现的次数，只是它出现的频率：3的频率是$60\%$,4的频率是$20\%$,5的频率是$20\%$.计算是$＝1.8+0.8+1＝3.6$</p><p>知道3，4，5每个数字相对的频率，也就是占总体额百分比，就可以计算除均值．<br>这和随机变量是有关系的．每次进行实验，随机变量就是一个新值．</p><blockquote><p><em>还是抛硬币的例子</em><br>$X=\text{抛硬币6次中正面朝上的次数}$<br>现在把均值，集中趋势，总体，样本同随机变量联系起来．</p></blockquote><p><strong>回忆一下总体和样本的提出</strong><br>要调查全国投票总统的情况，显然这么多人我们是很难每个去调查一遍的，我们可以选择样本，通过样本的情况来估算总体的情况．</p><blockquote><p>有时总体的数量可能是无穷的，之前我们都是研究的有穷的总体，可以计算总体的均值$\mu$．现在要考虑总体无穷的情况，也许你会觉得总体无穷是没有意义的，回想一下随机变量的例子，总体可以看作随机变量的每个实例（也可以说每次随机实验的集合）．实验的次数可以是无限次的，没有谁规定硬币只能抛一千次．</p></blockquote><p>每次实验的结果可以定义成$x_1,x_2,x_3,x_4,…n$，这些是随机事件的特定实例，可以看作是无穷总体的样本．实验可以一直做下去，但是样本只能取有限个（做多少次实验意味着取多少个样本）．</p><blockquote><p>刚刚是为了把总体样本的概念和随机变量联系起来</p></blockquote><h3 id="随机变量的期望值"><a href="#随机变量的期望值" class="headerlink" title="随机变量的期望值"></a>随机变量的期望值</h3><p>随机变量的 <strong>期望值</strong>其实也就是总体样本的 <strong>均值</strong>．（有时也称作 <strong>整体均值</strong>，只是此时整体是无穷的，无法通过所有数字加起来除以总数计算．）不过我们知道这些数字出现的频率，这样就可以计算均值，也是计算随机变量期望值的方式．</p><p><strong>如何知道频率？</strong><br>参照概率分布．</p><blockquote><p>0次出现的频率为0.01563，我还是把excel的值在这里做成表放这里吧，看起来比较方便．<br>对应的概率也就是在总体中相对频率．</p></blockquote><table><thead><tr><th style="text-align:center">K</th><th style="text-align:right">P（make）^k*P（miss）^（m-k）</th><th style="text-align:right">chooseP（X=k）</th><th style="text-align:right">P（X=k）</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:right">0.015625</td><td style="text-align:right">1</td><td style="text-align:right">0.015625</td></tr><tr><td style="text-align:center">1</td><td style="text-align:right">0.015625</td><td style="text-align:right">6</td><td style="text-align:right">0.09375</td></tr><tr><td style="text-align:center">2</td><td style="text-align:right">0.015625</td><td style="text-align:right">15</td><td style="text-align:right">0.234375</td></tr><tr><td style="text-align:center">3</td><td style="text-align:right">0.015625</td><td style="text-align:right">20</td><td style="text-align:right">0.3125</td></tr><tr><td style="text-align:center">4</td><td style="text-align:right">0.015625</td><td style="text-align:right">15</td><td style="text-align:right">0.234375</td></tr><tr><td style="text-align:center">5</td><td style="text-align:right">0.015625</td><td style="text-align:right">6</td><td style="text-align:right">0.09375</td></tr><tr><td style="text-align:center">6</td><td style="text-align:right">0.015625</td><td style="text-align:right">1</td><td style="text-align:right">0.015625</td></tr></tbody></table><h4 id="计算期望值"><a href="#计算期望值" class="headerlink" title="计算期望值"></a>计算期望值</h4><p>$$E(X) = 0\times 1.562\% + 1\times 9.375\%+ 2\times 23.438\%+ 3\times 31.25\%+ 4\times 23.438\%+\\ 5\times 9.375\%+ 6\times 1.563\%\\=3$$</p><blockquote><p>期望值为3，或者说整体均值为3．<br>但是期望值并不一定是最可能的值．</p></blockquote><blockquote><p>再总结一下重点<br>期望值计算等同于总体均值计算．采用这种计算，是由于总体无穷的情况下我们无法获得总数，因此采用权重的方式计算．这和计算均值本质没有区别．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 期望值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Morning Lectures-181229</title>
      <link href="/2018/12/29/morning-lectures/"/>
      <url>/2018/12/29/morning-lectures/</url>
      
        <content type="html"><![CDATA[<h2 id="question-1"><a href="#question-1" class="headerlink" title="question 1"></a>question 1</h2><blockquote><p>什么是Python？使用Python有什么好处？</p></blockquote><blockquote><p>Python是一种编程语言，它有对象、模块、线程、异常处理和自动内存管理。<br>它简洁、简单、方便、容易扩展，有许多自带的数据结构，而且它开源。</p></blockquote><h2 id="question-2"><a href="#question-2" class="headerlink" title="question 2"></a>question 2</h2><blockquote><p>Python都有哪些自带的数据结构？</p></blockquote><blockquote><p>Python自带的数据结构分为可变的和不可变的。可变的有：列表、集合、字典；不可变的有：字符串、元组、数。</p></blockquote><h2 id="question-3"><a href="#question-3" class="headerlink" title="question 3"></a>question 3</h2><blockquote><p>如何将一个数字转换成一个字符串？</p></blockquote><blockquote><p>你可以使用自带函数str()将一个数字转换为字符串。如果你想要八进制或者十六进制数，可以用oct()或hex()。</p></blockquote><h2 id="question-4"><a href="#question-4" class="headerlink" title="question 4"></a>question 4</h2><blockquote><p>代码结果?</p><pre class="line-numbers language-python"><code class="language-python">p <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">a</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> p    p <span class="token operator">=</span> s <span class="token operator">-</span> x    <span class="token keyword">return</span> p<span class="token keyword">def</span> <span class="token function">b</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> p    p <span class="token operator">=</span> <span class="token punctuation">(</span>s <span class="token operator">+</span> x<span class="token punctuation">)</span>  <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">.</span>     <span class="token keyword">return</span> p<span class="token keyword">def</span> <span class="token function">c</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">and</span> b<span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span>c<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>p=0 考察and内容，左边函数返回值为False则不再执行右边函数。</p></blockquote><h2 id="question-5"><a href="#question-5" class="headerlink" title="question 5"></a>question 5</h2><blockquote><p>期权的收益和利润or损失函数<br>看涨期权价格 合约到期价格S,执行价格X,期权价格 C<br>如果S&gt;X 买方收益为S-X-C, 否则收益为0-C<br>代码实现？</p></blockquote><blockquote><p>描述性的思考与模型性的思考</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">profit_fun</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> s <span class="token operator">></span> x<span class="token punctuation">:</span>        <span class="token keyword">return</span> s <span class="token operator">-</span> x <span class="token operator">-</span> c    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">-</span> c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">profit_fun</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>abs<span class="token punctuation">(</span>s <span class="token operator">-</span> x<span class="token punctuation">)</span> <span class="token operator">+</span> s <span class="token operator">-</span> x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><blockquote><p>代码利用数学的抽象方法，读起来会比较抽象，有人觉得这样不利于代码的可读性，我觉得那只是逻辑的问题，你的代码需要别人动脑子，不像是在按事物发展顺序的代码,这样并不意味者可读性差．说了这么多，就是代码的可读性跟你逻辑没有关系</p></blockquote><blockquote><p>代码的可读性好，应该是有注释，但是不要冗余，要有函数类等的文档字符串，变量命名统一规范，书写方式统一规范，服从架构等等，就是一大堆约定好的习惯，而不会限制你的思维．</p></blockquote><h2 id="question-6"><a href="#question-6" class="headerlink" title="question 6"></a>question 6</h2><blockquote><p>| &amp; ^<br>3^3=?</p></blockquote><blockquote><p>3^3 = 0　考察位的运算</p></blockquote><h2 id="question-7"><a href="#question-7" class="headerlink" title="question 7"></a>question 7</h2><blockquote><p>‘01’表示’勇敢’,’10’表示’聪明’,’11’表示？</p></blockquote><blockquote><p>{‘勇敢’, ‘聪明’} 这种方法是常见的编码格式，二进制编码<br>拓展：<br>体重y(数字)  身高x(数字)  性别(不是数字)<br>关系 $$y=\sigma+\theta x+ ?????$$<br>性别 ‘男’=’0’or’1’, ‘女’=’0’or’1’<br>体重y(数字)  常数1   身高x(数字)  男(数字)  女(数字 非男既女，和入常数项)<br>$$y=\theta_0 x_0 + \theta_1 x_1 + \theta_2 x_2$$</p></blockquote><h2 id="question-8"><a href="#question-8" class="headerlink" title="question 8"></a>question 8</h2><blockquote><p>Python是如何被解释的？</p></blockquote><blockquote><p>Python是一种解释性语言，它的源代码可以直接运行。Python解释器会将源代码转换成中间语言，之后再翻译成机器码再执行。</p></blockquote><h2 id="question-9"><a href="#question-9" class="headerlink" title="question 9"></a>question 9</h2><blockquote><p>代码结果</p><pre class="line-numbers language-python"><code class="language-python">list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'e'</span><span class="token punctuation">]</span><span class="token keyword">print</span> list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span> list<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>切片返回的是空列表，而索引会报错</p></blockquote><h2 id="question-10"><a href="#question-10" class="headerlink" title="question 10"></a>question 10</h2><blockquote><p>这两个参数是什么意思：*args，**kwargs？我们为什么要使用它们？</p></blockquote><blockquote><p>如果我们不确定要往函数中传入多少个参数，或者我们想往函数中以列表和元组的形式传参数时，那就使要用<em>args；<br>如果我们不知道要往函数中传入多少个关键词参数，或者想传入字典的值作为关键词参数时，那就要使用**kwargs。<br>args 和 kwargs这两个标识符是约定俗成的用法，你当然还可以用</em>bob和**billy，但是这样就并不太妥。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> BreadCumbs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> question </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学22：二项分布4</title>
      <link href="/2018/12/25/stats-22/"/>
      <url>/2018/12/25/stats-22/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h1><p>这一节是Excel的使用，目的是了解Excel可能是你最好的助手，程序是好东西，但是为什么不使用更简单方便的别人加工好的东西呢．我们的目的是从数据中发现想要的信息，不管是黑猫还是白猫．</p><p>但是对一个软件的使用用文字描述确实有点困难，你可以去看一下视频，或者是找一下Excel的资料．我这里就只给出第一张图绘图的过程截图吧．（基于2016）</p><p>这是投篮的例子，我把次数增加到了30，投中的概率是0.2．在这里会发现和一开始见到的二项分布图像并不一样，哪个是对称的，那是因为对称的两种可能的概率是一样的，而投中和投不中的概率是不一样．如果这张图觉得不明显（数据太多，后面的概率太小了，在图中都到底了，不容易观察），你可以看第二张图（用的是老师上课的例子，投6次，投中概率0.3）．<br><img src="/images/stats/s_22.png" alt="图片"><br><img src="/images/stats/s_22_02.png" alt="图片"></p><p><strong>第一张图的绘图过程</strong></p><blockquote><p>在下面的选择中，你可能根据提醒，需要提前选择两列数据（先随便选择两列吧）</p></blockquote><p><img src="/images/stats/s_22_e01.png" alt="图片"></p><blockquote><p>在图表上右键选择选择<code>select data</code>，进入下图<br>你可以选择编辑更改数据，也可以把它移除重新添加．然后选择<code>ok</code>就可以了．</p></blockquote><p><img src="/images/stats/s_22_e02.png" alt="图片"></p><blockquote><p>直接更改表中数据，图也会跟随数据更新．<br>更多的功能需要去尝试探索，毕竟那是一个软件．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 二项分布 </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学21：二项分布3</title>
      <link href="/2018/12/25/stats-21/"/>
      <url>/2018/12/25/stats-21/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h1><p>来看上一节留下的公式<br>$$P(X=k) = (_k^n)p^k(1-P)^{n-k}$$</p><p>可能已经明白了二项系数$(_k^n)$什么意思，这里说一下为什么是概率是$p^k(1-P)^{n-k}$．<br>可能硬币事件的两种结果让我记住了$\frac{1}{2}$,那是一个比较特殊的情况．如果把事件转换为掷筛子呢？它就不再是$\frac{1}{2}$,$\frac{1}{2}$．</p><blockquote><p>掷筛子有6种可能的结果，怎么会是二项分布？我没有搞混，那可能是被掷硬币这样的事件给惯性思维了，非要寻找和它一样特征的．我们要学会如何转换，把事件转变为我们常见的分布．</p></blockquote><p>如果问题转换为掷筛子，点数为1或者2则甲胜出，点数为3或者4则乙胜出，点数为5或者6则丙胜出，<strong>现在寻找在n次实验中，甲胜出X次的概率</strong>？</p><blockquote><p>只关心甲的概率，只需知道是甲赢了，还是输了，并不关心乙或者丙赢了他．现在就是二项分布了，甲赢（点数为1或2），甲不赢（点数不为1或2，即为3，4，5，6）．则事件发生的概率分别为甲赢$\frac{1}{3}$，甲不赢$\frac{2}{3}$．<br>注意二项分布的特点，每次投掷都是独立的，不受之前实验的影响，每次结果都是甲赢$\frac{1}{3}$，甲不赢$\frac{2}{3}$．</p></blockquote><p>那么求$P(X=0)$,假设投掷了8次：</p><ul><li>通过上一节我们知道系数$(_0^8)$</li><li>甲赢的次数为0，那么这种可能就是全输的概率，就是每次概率是$\frac{2}{3}$，则$p=(\frac{2}{3})^8$</li><li>$P(X=0)=(_0^8) \times (\frac{2}{3})^8$</li></ul><p>$P(X=1)$：</p><ul><li>系数$(_1^8)$</li><li>甲赢的次数为1，那么这种可能就是1次为胜，7次为输的概率.即8次事件中，发生了1次概率是$\frac{1}{3}$事件和$(8-1)$次概率为$\frac{2}{3}$事件，则概率为$p=(\frac{1}{3})^{1} \times (\frac{2}{3})^{8-1}$</li><li>$P(X=1)=(_1^8) \times (\frac{1}{3})^{1} \times (\frac{2}{3})^{8-1}$</li></ul><p>$P(X=2)$：</p><ul><li>系数$(_2^8)$</li><li>发生了2次概率是$\frac{1}{3}$事件和$(8-2)$次概率为$1-\frac{1}{3}$事件（两种结果，总的概率为1），则<br>$p=(\frac{1}{3})^{2} \times (1-\frac{1}{3})^{8-2}$</li><li>$P(X=2)=(_2^8) \times (\frac{1}{3})^{2} \times (1-\frac{1}{3})^{8-2}$</li></ul><p>沿着这个方法走下去，就会发现如何去利用公式了．</p><blockquote><p>可汗公开课里面可能不是这样讲的，但是意思都是一样的．老师是一个投篮的例子．我只是想让你更名明白，不一定需找只有2种结果的事件（篮球不关注几分球也是这个意思），可以转变为发生或不发生（这样就是两种结果了）．我表达的不是很好，不过看完这个例子应该可以明白想表达的意思．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 二项分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学20：二项分布2</title>
      <link href="/2018/12/25/stats-20/"/>
      <url>/2018/12/25/stats-20/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h1><blockquote><p>随机变量是一种映射关系．还是以上一节投掷硬币情况为例<br>$$X=\begin{cases}<br>0&amp; \text{全为正面},\\<br>1&amp; \text{有$1$次为正面},\\<br>2&amp; \text{有$2$次为正面},\\<br>3&amp; \text{有$3$次为正面},\\<br>4&amp; \text{有$4$次为正面},\\<br>5&amp; \text{全不为正面}.<br>\end{cases}$$</p></blockquote><p>把上概率整理如下图表：</p><table><thead><tr><th style="text-align:center">事件</th><th style="text-align:center">值</th><th style="text-align:center">事件</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center">$P(X=0)$</td><td style="text-align:center">$\frac{1}{32}$</td><td style="text-align:center">$P(X=3)$</td><td style="text-align:center">$\frac{5}{16}$</td></tr><tr><td style="text-align:center">$P(X=1)$</td><td style="text-align:center">$\frac{5}{32}$</td><td style="text-align:center">$P(X=4)$</td><td style="text-align:center">$\frac{5}{32}$</td></tr><tr><td style="text-align:center">$P(X=2)$</td><td style="text-align:center">$\frac{5}{16}$</td><td style="text-align:center">$P(X=5)$</td><td style="text-align:center">$\frac{1}{32}$</td></tr></tbody></table><p><img src="/images/stats/s_20_02.png" alt="图片"></p><blockquote><p>如果投掷的次数非常的多，把它们的概率值用曲线描出来，就是一根钟形曲线．<br><strong>在离散中是二项分布，在连续中它是正态分布．</strong></p></blockquote><p><img src="/images/stats/s_20.png" alt="图片"></p><blockquote><p>人们经常对特定事物进行假设（很多时候我们无法知道事物机理），假设很多随机事物在进行，把这些随机事件加起来，就像掷硬币数正面这样（假设为事件的发生符合二项分布或正态分布）．</p></blockquote><p>在绘制第二张图表的代码中，你会发现我定义了一个函数，而不是一个一个枚举出对应的概率值，这说明它是可以被总结出公式的．<br>还记得上一节我在最后的$P(X=5)$求解时，把系数（后面是每次独立发生的概率值）写了$C_5^5$吗？</p><blockquote><p>$C_n^m$表示从$n$个元素中挑选出$m$个元素（无序）的可能．（也可以理解为从$n$次实验中发生$m$次同事件的可能）</p></blockquote><h3 id="二项式系数公式"><a href="#二项式系数公式" class="headerlink" title="二项式系数公式"></a>二项式系数公式</h3><p>$$(_m^n)=C_n^m = \frac{n!}{m!(n-m)!}$$</p><blockquote><p>也可以继续上一节那个分析，$\frac{A_n^m}{A_m^m}$记为$C_n^m$</p></blockquote><p>有了二项式系数其实就是从$n$次实验中发生$m$次同事件的可能种类数，然后它乘一每次事件的概率就是我们求的$P(X=m)$．<br>那么二项式分布$X～B(n,p)$的公式就来了：<br>$$P(k,n,p) = P(X=k) = (_k^n)p^k(1-P)^{n-k}$$</p><h4 id="投掷5次硬币的代码"><a href="#投掷5次硬币的代码" class="headerlink" title="投掷5次硬币的代码"></a>投掷5次硬币的代码</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZerox <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">/</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">/</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">/</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">/</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">32</span><span class="token punctuation">]</span>xticks <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>yticks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'1/32'</span><span class="token punctuation">,</span> <span class="token string">'5/32'</span><span class="token punctuation">,</span> <span class="token string">'10/32'</span><span class="token punctuation">,</span> <span class="token string">'10/32'</span><span class="token punctuation">,</span> <span class="token string">'5/32'</span><span class="token punctuation">,</span> <span class="token string">'1/32'</span><span class="token punctuation">]</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-.'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span>y<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>yticks<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>xticks<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">/</span><span class="token number">16</span><span class="token operator">+</span><span class="token number">0.08</span><span class="token punctuation">)</span> plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> width <span class="token operator">=</span> <span class="token number">0.96</span>ax1<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'m'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span> yerr<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">,</span>error_kw<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'ecolor'</span><span class="token punctuation">:</span> <span class="token string">'0.3'</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">for</span> s<span class="token punctuation">,</span> f<span class="token punctuation">,</span> i  <span class="token keyword">in</span> zip<span class="token punctuation">(</span>yticks<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>    ax1<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>s<span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token number">-0.3</span><span class="token punctuation">,</span> f<span class="token operator">+</span><span class="token number">0.012</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="增加投掷次数的代码"><a href="#增加投掷次数的代码" class="headerlink" title="增加投掷次数的代码"></a>增加投掷次数的代码</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">from</span> math <span class="token keyword">import</span> factorial<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token keyword">def</span> <span class="token function">binomial</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> factorial<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>factorial<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">*</span> factorial<span class="token punctuation">(</span>n <span class="token operator">-</span> k<span class="token punctuation">)</span> <span class="token operator">*</span> pow<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>n <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>n <span class="token operator">+=</span> len<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>y <span class="token operator">=</span> <span class="token punctuation">[</span>binomial<span class="token punctuation">(</span>n<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">for</span> n<span class="token punctuation">,</span> k <span class="token keyword">in</span> zip<span class="token punctuation">(</span>n<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">]</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-.'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span> width <span class="token operator">=</span> <span class="token number">0.96</span>ax1<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'m'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'b--'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 二项分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学19：二项分布1</title>
      <link href="/2018/12/25/stats-19/"/>
      <url>/2018/12/25/stats-19/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h1><p>看一下掷硬币的问题</p><blockquote><p>掷一次硬币正面或者反面发生的概率都是$\frac{1}{2}$</p></blockquote><p>掷五次硬币或者一次掷五个硬币（每个硬币正反 <strong>独立</strong>的，每次硬币独立的，怎么操作都一样．），记出现正面的数量为$X$.<br>$P(X=0)$（出现正面为0次的概率，也就是五次全为反面）？</p><blockquote><p>全为反面只有一种情况，就是第一次投掷为反，第二次为反．．．</p></blockquote><p>$$P(X=0)=\frac{1}{2} \times \frac{1}{2} \times \frac{1}{2} \times \frac{1}{2} \times \frac{1}{2}=\frac{1}{32}$$</p><p>$P(X=1)$（出现正面为1次的概率）？</p><blockquote><p>正面为1次有5种情况，就是第一次投掷为正，其他全为反；第二次为正，其他全为反．．．<br>每中情况都是$\frac{1}{32}$（出现正面的次数和非正面的次数都是$\frac{1}{2}$）</p></blockquote><p>$$P(X=1)=5 \times \frac{1}{32} = \frac{5}{32}$$</p><p>$P(X=2)$（出现正面为2次的概率）？</p><blockquote><p>还要枚举吗？好像有点累<br>分析一下：</p><ul><li>先确定一个正面发生的位置，它有5种（第一次投掷为正，第二次为正．．．），再确定第二个正面发生的位置，第一个记录已经占走了一个位置，还有四个位置选一个为正，有4种．　$5 \times 4$</li><li>刚刚我们先确定了，再确定，多做了排序，也就是同样第二次和第三次为正，但是我们却在刚刚把它记为了两种情况（先找到2位再发现3，和先找到3再发现2）我们要排除我们不必要的排序．　$\frac{5 \times 4}{2}$</li><li>每中情况都是$\frac{1}{32}$</li></ul></blockquote><p>$$P(X=2)=\frac{5 \times 4}{2} \times \frac{1}{32} = \frac{5}{16}$$</p><p>$P(X=3)$？</p><blockquote><ul><li>确定第一个（5个位置选1个），第二个（4个位置选1个），第三个（3个位置选1个）$5 \times 4 \times 3$</li><li>排除不必要的排序（3个的排序为$3 \times 2$）．　$\frac{5 \times 4 \times 3}{3 \times 2}$</li><li>每中情况都是$\frac{1}{32}$</li></ul></blockquote><p>$$P(X=3)=\frac{5 \times 4 \times 3}{3 \times 2} \times \frac{1}{32} = \frac{5}{16}$$</p><p>$P(X=4)$？</p><blockquote><ul><li>$A_5^4 = 5 \times 4 \times 3 \times 2$</li><li>$\frac{A_5^4}{A_4^4} = \frac{5 \times 4 \times 3 \times 2}{4 \times 3 \times 2}$</li><li>$\frac{1}{32}$</li></ul></blockquote><p>$$P(X=4)=\frac{5 \times 4 \times 3 \times 2}{4 \times 3 \times 2} \times \frac{1}{32} = \frac{5}{32}$$</p><p>$P(X=5)$？</p><p>$$P(X=5)=C_5^5 \times \frac{1}{32} = \frac{1}{32}$$</p><blockquote><p>也可以把5次为正理解为0次为反，正反概率相等，那么$P(X=5)＝P(X=0)$</p></blockquote><blockquote><p>二项分布就是重复n次独立的伯努利试验.<br>伯努利实验:在每次试验中只有两种可能的结果，而且两种结果发生与否互相对立，并且相互独立，与其它各次试验结果无关，事件发生与否的概率在每一次独立试验中都保持不变</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 二项分布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学18：概率密度函数</title>
      <link href="/2018/12/25/stats-18/"/>
      <url>/2018/12/25/stats-18/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="概率密度函数"><a href="#概率密度函数" class="headerlink" title="概率密度函数"></a>概率密度函数</h1><blockquote><p>首先我们需知道随机变量所有值发生概率和等于1<br>概率密度函数是对连续随机变量而言的．</p></blockquote><p>对于连续随机变量，我们很难说$P(X=0)$（X为0的概率）是多少，而且这是个很难测的数值，因为这里不是说的0.00001，也不是-0.0000001，就是0．<br>所以对密度函数的概率描述是$P(|X－0.3|&lt;0.1)$才是比较合理的，也就是你要指的是一个值的区间（结果落在这个区间的概率），而不是一个确定的值（这样是没有意义的）．</p><blockquote><p>图中阴影部分有点问题，并没有填充到0，但是概率计算取到了，这个我在代码中对应位置解释了，图就讲究用吧，你明白我的意图就行了．</p></blockquote><p><img src="/images/stats/s_18.png" alt="图片"></p><blockquote><p>图片的密度函数是标准的正态分布函数<br>我们不能说$P(X=0)＝0.4$，而是$P(X \leqslant 0)=0.5$就会比较合理</p></blockquote><blockquote><p>观察密度函数的图，<strong>面积</strong>才是表示密度函数的概率值．而不是x对应y坐标．<br>你也可以用它的累积函数画出对应的线图，在学习正态分布的时候我会把他们画在一起的．（这里没有采用积分，只是自己定义了一个循环累积代替了累积函数．）</p></blockquote><p>假设曲线为$f(x)$，概率是面积，也就是对函数$f(x)$的积分．<br>$$P(0.1&lt;X&lt;0.2) = \int_{0.1} ^{0.2} f(x)d(x)$$<br>其中<br>$$\int_{-\infty} ^{\infty} f(x)d(x)=1$$</p><blockquote><p>看到这个公式，你应该明白了，对于连续随机变量，我们寻找它确定值的发生概率几乎等于0，从图中也可以发现，它只会是一根线段，围不成一个面．</p></blockquote><p>密度函数图示代码：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">from</span> scipy <span class="token keyword">import</span> exp<span class="token punctuation">,</span> sqrt<span class="token punctuation">,</span> stats<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> stats<span class="token punctuation">.</span>norm<span class="token punctuation">.</span>pdf<span class="token punctuation">(</span>t<span class="token punctuation">,</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>xticks <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3.1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>yticks <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.55</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置支持中文</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Microsoft YaHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># ax1.grid(True, color='k', linestyle='-.')</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>yticks<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>xticks<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.45</span><span class="token punctuation">)</span> ax1<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 绘制密度函数</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x <span class="token punctuation">,</span>fun<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 标题的内容实际是一个公式，如果你想尝试用代码写公式，可以参考latex规范．</span>ax1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span>r<span class="token string">'$\frac{1}{\sqrt{2\pi\sigma^2}}e^{-\frac{(x-\mu)^2}{2\sigma^2}}$'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制概率发生区间1</span>z <span class="token operator">=</span> <span class="token number">0.3</span>x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>z<span class="token number">-0.1</span><span class="token punctuation">,</span> z<span class="token operator">+</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span>sum <span class="token operator">=</span> <span class="token number">0</span>delta <span class="token operator">=</span> <span class="token number">0.001</span>s <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>z<span class="token number">-0.1</span><span class="token punctuation">,</span> z<span class="token operator">+</span><span class="token number">0.1</span><span class="token punctuation">,</span> delta<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># 计算累积</span>    sum <span class="token operator">+=</span> fun<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">*</span> delta  ax1<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> fun<span class="token punctuation">(</span>x2<span class="token punctuation">)</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'P(|X-%s|&lt;＝0.1) area is '</span><span class="token operator">%</span>z <span class="token operator">+</span> str<span class="token punctuation">(</span>round<span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.38</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.42</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> shrink<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'z = '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制概率发生区间2</span>z <span class="token operator">=</span> <span class="token number">0</span>x2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># z应该加一个小于等于0.05的数，这是我的疏忽，你发现图上并没有填充到0，那是因为arange不能取到z值．在下面计算的时候我取到了，它的结果是对的</span>sum <span class="token operator">=</span> <span class="token number">0</span>delta <span class="token operator">=</span> <span class="token number">0.0001</span>s <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> z<span class="token operator">+</span>delta<span class="token punctuation">,</span> delta<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    sum <span class="token operator">+=</span> fun<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">*</span> deltaax1<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'P(X&lt;＝%s) area is '</span> <span class="token operator">%</span> z<span class="token operator">+</span> str<span class="token punctuation">(</span>round<span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.35</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2.8</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> shrink<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>annotate<span class="token punctuation">(</span>    <span class="token string">'z = '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">,</span> xy<span class="token operator">=</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> fun<span class="token punctuation">(</span>x2<span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="离散的随机变量概率图"><a href="#离散的随机变量概率图" class="headerlink" title="离散的随机变量概率图"></a>离散的随机变量概率图</h3><blockquote><p>下面是一个离散随机变量的概率分布，但是我们不能说是密度函数，它的值是一个个枚举出来的<br>这是一个掷筛子的概率，但是这是一个处理过的筛子，它的二被改成了六</p></blockquote><p><img src="/images/stats/s_18_02.png" alt="图片"></p><blockquote><p>$\frac{1}{6}+0+\frac{1}{6}+\frac{1}{6}+\frac{1}{6}+\frac{2}{6}=1$</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdx <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>xticks <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>yticks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">,</span> <span class="token string">'1/6'</span><span class="token punctuation">,</span> <span class="token string">'2/6'</span><span class="token punctuation">]</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-.'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">/</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> yticks<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>xticks<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">/</span><span class="token number">6</span><span class="token operator">+</span><span class="token number">0.02</span><span class="token punctuation">)</span> width <span class="token operator">=</span> <span class="token number">0.4</span>ax1<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 密度函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学17：随机变量介绍</title>
      <link href="/2018/12/25/stats-17/"/>
      <url>/2018/12/25/stats-17/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="随机变量-random-variable"><a href="#随机变量-random-variable" class="headerlink" title="随机变量 random variable"></a>随机变量 random variable</h1><blockquote><p>我们大概见过方程，如$x+3=7$，这里的$x$为变量，但是它有确定的值，这就不是随机的．<br>类似的我们可以猜想，随机变量就是值不是确定的呗，并不能却确切的求解．</p></blockquote><p>随机变量：表示随机试验各种结果的实值单值函数．<br>我们可以对随机事件绑定一个变量，然后对于不同事件的发生，用一个数值绑定，也就是可以用量化的方法来表达事件．其实随机变量是一种函数关系，它把一个随机过程映射到实际的数字．</p><blockquote><p>比如天气，明天是否下雨．<br>可以用0表示不下雨，1表示下雨，x则是这件事情．当然你也可以随便定义其他数字，前提是你要记住你的映射关系．<br>只有等到明天过完，我们才知道x的值真正是哪个数字，在这之前，我们这能说x有多大的几率等于几． 这个例子是一个离散随机变量</p></blockquote><h2 id="离散随机变量-discreate"><a href="#离散随机变量-discreate" class="headerlink" title="离散随机变量 discreate"></a>离散随机变量 discreate</h2><p>事件的结果都是可以一个个枚举出来的．</p><h2 id="连续随机变量-continuous"><a href="#连续随机变量-continuous" class="headerlink" title="连续随机变量 continuous"></a>连续随机变量 continuous</h2><p>事件的结果有无限多个可能</p><blockquote><p>x表示明天下雨额英寸数，它可以取无限集合中任意的一个值．我们知道即便是0-1都有无限多个数值．</p></blockquote><blockquote><p>这一节就不配概率的图表和程序了，等到后期学到分布再加入吧．<br>这节课，可汗的公开课还提到了一些概率上的概念，只是为后面讲解做了个铺垫，你可以访问目录中的链接，也可以去搜一下查看公开课内容．</p></blockquote><blockquote><p>这一节如果你明白什么是随机变量，能区分什么是离散的，什么是连续的就可以了．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 随机变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学16：方差的公式</title>
      <link href="/2018/12/25/stats-16/"/>
      <url>/2018/12/25/stats-16/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="方差公式"><a href="#方差公式" class="headerlink" title="方差公式"></a>方差公式</h1><blockquote><p>基于总体方差公式</p></blockquote><p>$$\sigma ^ 2 = \frac{\sum_{i=1}^N x_i^2}{N} - \mu^2$$</p><p>推导<br>　　　　　　　　　　　　　　　　　　$\sigma ^ 2 = \frac{\sum_{i=1}^N (x_i-\mu)^2}{N} \\<br>　= \frac{\sum_{i=1}^N (x_i^2 - 2\mu x_i + \mu^2)}{N} \\<br>　= \frac{\sum_{i=1}^N x_i^2 - 2\mu \sum_{i=1}^N x_i + \mu^2\sum_{i=1}^N 1}{N} \\<br>　= \frac{\sum_{i=1}^N x_i^2 - 2\mu \sum_{i=1}^N x_i + \mu^2N}{N} \\<br>　= \frac{\sum_{i=1}^N x_i^2}{N}-<br>              \frac{2\mu \sum_{i=1}^N x_i}{N}+<br>              \frac{\mu^2N}{N} \\<br>　= \frac{\sum_{i=1}^N x_i^2}{N}-<br>              2\mu^2+<br>              \mu^2 \\<br>　= \frac{\sum_{i=1}^N x_i^2}{N} - \mu^2<br>$</p><blockquote><p>公式可以帮助你更快的计算，当然你有了python和excel，将会不屑这些，不过我觉得有必要去推一下，毕竟你是玩这个领域东西的人．</p></blockquote><blockquote><p>看到目录你可能会震惊，什么是诸方差，完全没有听过，那并不是在说诸方差这个名词，它是诸多方差公式的意思．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 方差公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学15：标准差</title>
      <link href="/2018/12/25/stats-15/"/>
      <url>/2018/12/25/stats-15/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="标准差"><a href="#标准差" class="headerlink" title="标准差"></a>标准差</h1><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><table><thead><tr><th style="text-align:right">concept</th><th style="text-align:center">population</th><th style="text-align:center">sample</th></tr></thead><tbody><tr><td style="text-align:right">均值mean</td><td style="text-align:center">$\mu = \frac{\sum_{i=1}^N x_i}{N}$</td><td style="text-align:center">$\bar x = \frac{\sum_{i=1}^n x_i}{n}$</td></tr><tr><td style="text-align:right">方差variance</td><td style="text-align:center">$\sigma ^ 2 = \frac{\sum_{i=1}^N (x_i-\mu)^2}{N}$</td><td style="text-align:center">$S ^ 2 = \frac{\sum_{i=1}^n (x_i-\bar x)^2}{n-1}$</td></tr><tr><td style="text-align:right">标准差standard deviation</td><td style="text-align:center">$\sigma = \sqrt{\sigma ^ 2}=\sqrt{\frac{\sum_{i=1}^N (x_i-\mu)^2}{N}}$</td><td style="text-align:center">$S = \sqrt{S ^ 2}=\sqrt{\frac{\sum_{i=1}^n (x_i-\bar x)^2}{n-1}}$</td></tr></tbody></table><h3 id="标准差-1"><a href="#标准差-1" class="headerlink" title="标准差"></a>标准差</h3><blockquote><p>为什么要引入标准差呢？<br>还记得量纲吗，方差的单位并不是数据的单位，我们需要对它开方，这样刚刚好得到的标准差和我们的数据单位是一样的．</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>std_pop <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># ddof:方差分母为n-ddof</span>std_sam <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>data<span class="token punctuation">,</span> ddof<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 假设这部分数据只是样本，不是全部</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_pop<span class="token punctuation">,</span> std_sam<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>代码采用科学计算工具<code>numpy</code>，python的基础计算过程只需要在方差那一篇的文章中代码稍微改一下就可以．记住对于样本数据，要更改分母．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> numpy </tag>
            
            <tag> 标准差 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学14：样本方差</title>
      <link href="/2018/12/25/stats-14/"/>
      <url>/2018/12/25/stats-14/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="样本方差"><a href="#样本方差" class="headerlink" title="样本方差"></a>样本方差</h1><p>在面临数据量大的时候，计算方差可能是一个比较困难的事情，这样我们可以考虑抽取一部分样本，计算它的方差来估计总体的离均值情况．</p><blockquote><p>还记得推论统计学所关心的东西在哪儿吗？<br>对样本进行描述性统计然后推断出总体的情况．</p></blockquote><h4 id="样本方差计算"><a href="#样本方差计算" class="headerlink" title="样本方差计算"></a>样本方差计算</h4><p>$$S_n ^ 2 = \frac{\sum_{i=1}^n (x_i-\bar x)^2}{n}$$</p><blockquote><p>$S_n^2$ 表示样本方差，$\sigma ^ 2$ 表示总体方差<br>这里之所以用$S_n^2$ ,而不是采用$S^2$ ,这里有一个直观的解释：用样本估计总体的方差通常会低估总体的方差．而且样本越大，估计的效果可能会更好．下面有一个更好的公式，它才是$S^2$</p></blockquote><p>解释一下低估的问题：<br>当你样本取得有所偏倚（随机的嘛），也就是说样本的值普遍的偏小或偏大，这样样本中的数到样本的均值的距离均值肯定会小于总体的（你的数据更集中在小或大的部分嘛），即便刚刚好样本取得是完美的，也只是估计的很完美，不会高估的．如果你还不能够理解，可以去画一个数轴尝试着理解．</p><h4 id="更好的公式"><a href="#更好的公式" class="headerlink" title="更好的公式"></a>更好的公式</h4><p>总体方差的无偏估计，你也可以称为无偏样本方差<br>$$S ^ 2 = S_{n-1} ^ 2 = \frac{\sum_{i=1}^n (x_i-\bar x)^2}{n-1}$$</p><blockquote><p>新的公式中，只是把分母换掉了比原先小的数，这样这个值就变大了．后期会有程序验证．这里先好好理解一下那个直观的解释，当然或许你有自己更好的理解．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 方差 </tag>
            
            <tag> 样本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学13：总体方差</title>
      <link href="/2018/12/25/stats-13/"/>
      <url>/2018/12/25/stats-13/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="总体方差"><a href="#总体方差" class="headerlink" title="总体方差"></a>总体方差</h1><h2 id="离中趋势衡量"><a href="#离中趋势衡量" class="headerlink" title="离中趋势衡量"></a>离中趋势衡量</h2><p>均值，中位数，众数，这些都是用来衡量集中趋势的（或者说是用一个数表示所有的数值，这样损失了很多信息），但是我们并不知道集中的数字是接近集中趋势，还是远离集中趋势．因此引入离中趋势衡量．</p><blockquote><p>有两组数据$l_1$={2, 2, 3, 3}，$l_2$={0, 0, 5, 5}，它们拥有相等的平均数 2.5<br>对于集合$l_1$，每个数值距离它们的$\mu$都比较靠近,而对于$l_2$,每个数对于$\mu$值的距离相对来说都比较远（或者说它们相对于均值比较分散）．<br>那么怎么区分这种数据的特征呢？方差$\sigma ^ 2$</p></blockquote><h2 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h2><p>每个数与均值之间的距离的平方的平均数．<br>好吧有点绕，我们一点一点理解<br>为了方便计算每个数与均值之间的距离，不便于每个差求绝对值，我们可以采用平方来代替，它肯定是正数．<br>然后我们对所有的距离组成的数字求平均数来代表距离的这组数（一个值描述数据集），而距离就是来表示我们想知道的离中趋势</p><blockquote><p>方差同样也是为了方便处理数据的人造结构，在不写出数据全部的情况下，通过一个值来对数据集有更好的了解</p></blockquote><h5 id="方差的计算公式："><a href="#方差的计算公式：" class="headerlink" title="方差的计算公式："></a>方差的计算公式：</h5><p>$$\sigma ^ 2 = \frac{\sum_{i=1}^N (x_i-\mu)^2}{N}$$</p><blockquote><p>对于提到的两组数据，他们对应的方差依次为0.25，6.25．直观上你会发现后者的离均值相对与第一组数据大很多．这说明他们的数都距 <strong>离均值</strong>（方差）相对远，也就是比较分散．</p></blockquote><h2 id="python计算代码"><a href="#python计算代码" class="headerlink" title="python计算代码"></a>python计算代码</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">mean_fun</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''求均值函数    '''</span>    l <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> val<span class="token punctuation">]</span>    <span class="token keyword">return</span> sum<span class="token punctuation">(</span>l<span class="token punctuation">)</span> <span class="token operator">/</span> float<span class="token punctuation">(</span>len<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">var_fun</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''计算方差函数    '''</span>    mean <span class="token operator">=</span> mean_fun<span class="token punctuation">(</span>val<span class="token punctuation">)</span>    l <span class="token operator">=</span> <span class="token punctuation">[</span>pow<span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">-</span> mean<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> val<span class="token punctuation">]</span>    <span class="token keyword">return</span> mean_fun<span class="token punctuation">(</span>l<span class="token punctuation">)</span>L_1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>L_2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>var_1 <span class="token operator">=</span> var_fun<span class="token punctuation">(</span>L_1<span class="token punctuation">)</span>var_2 <span class="token operator">=</span> var_fun<span class="token punctuation">(</span>L_2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>var_1<span class="token punctuation">,</span> var_2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>你也可以采用第三方包来快速的求解，不过我觉得还是有必要先学会求解的过程．<br>代码中<code>float()</code>是为了在python2中一样可以得出正确的结果，python2的<code>/int</code>表示整除</p></blockquote><blockquote><p>代码利用了封装函数和列表推导式，读起来会比较抽象，有人觉得这样不利于代码的可读性，我觉得那只是逻辑的问题，你的代码需要别人动脑子，不像是在按事物发展顺序的代码,这样并不意味者可读性差．说了这么多，就是代码的可读性跟你逻辑没有关系</p></blockquote><blockquote><p>代码的可读性好，应该是有注释，但是不要冗余，要有函数类等的文档字符串，变量命名统一规范，书写方式统一规范，服从架构等等，就是一大堆约定好的习惯，而不会限制你的思维．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> （来信请注明文章标题，如果附带链接就更方便了）<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 方差 </tag>
            
            <tag> 离中趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学12：样本和总体</title>
      <link href="/2018/12/25/stats-12/"/>
      <url>/2018/12/25/stats-12/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="样本和总体"><a href="#样本和总体" class="headerlink" title="样本和总体"></a>样本和总体</h1><p>如果要求你去调查全国男性的身高，每个人的，这显然是很难做到的，即便做到了，寻找它们的中位数平均数也是一个大工程．<br>实际中我们常常会 <strong>随机</strong> 的选取一部分数据作为研究对象，来代表整个总体．<br>我们计算它的平均数来代替总体的平均数</p><blockquote><p>随机，要随机取样．因为你不希望样本全来自篮球队员．你可以回忆以下高中生物中的五点取样．<br>收集的数据越多，越具有代表性．</p></blockquote><blockquote><p>符号<br>$\mu = Population  Mean$  代表总体平均数<br>$\bar x = Sample  Mean$  代表样本平均数</p></blockquote><h2 id="sample"><a href="#sample" class="headerlink" title="sample"></a>sample</h2><p>对于样本中的数据，我们对它的标记为$x_1,x_2,x_3,…,x_n$<br>样本的平均数计算公式为：<br>$$\bar x = \frac{\sum_{i=1}^n x_i}{n} = \frac{x_1 + x_2 + x_3 + … + x_n}{n}$$</p><blockquote><p>$\sum$是一个求和符号</p></blockquote><h2 id="population"><a href="#population" class="headerlink" title="population"></a>population</h2><p>总体的平均数计算公式为：<br>$$\mu = \frac{\sum_{i=1}^N x_i}{N}$$</p><blockquote><p>$N$表示总体总量，$n$表示样本总量</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 样本和总体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学11：集中趋势</title>
      <link href="/2018/12/25/stats-11/"/>
      <url>/2018/12/25/stats-11/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="集中趋势"><a href="#集中趋势" class="headerlink" title="集中趋势"></a>集中趋势</h1><blockquote><p>从这一节才真正的进入统计学的核心，一切围绕数据进行</p></blockquote><p>集中趋势(central Tendency)/average:算术平均数(我常说的平均数指的算术平均数mean,几何平均数，调和平均数),中位数，众数(mode)，它们是描述集中趋势的方法．</p><blockquote><p>它们的计算你可以去看前面的对应内容</p></blockquote><p>这些公式并不像一个力与加速度的方程式，有着某种宇宙间的奥秘，只是人类创造出来的，用来方便我们大脑更好的处理数据</p><blockquote><p>what? why?<br>既然是人造出来的，为什么要弄出那么多的公式出来．．．<br>或许在1，1，2，4，4这组数据中你没有发现什么．<br>但是当你看到这样一组数据呢？　3，3，3，3，3，100　它的平均数是115/6，这个值没有任何参考价值，至少它不能代表整体的集中趋势．(在统计学中像100这样的异常值被成为离群值)<br>在新的数据中，中位数和众数都是3，如果这些是某个地区的房价，我相信你不会用平均数来表示这个地区的房价水平．</p></blockquote><blockquote><p>立群值并没有一个具体的定义，它都是一看，对，是他是他就是他－离群值<br>有时间离群值的产生是因为测量错误等</p></blockquote><h2 id="统计学分类"><a href="#统计学分类" class="headerlink" title="统计学分类"></a>统计学分类</h2><h3 id="描述性统计学-descriptive"><a href="#描述性统计学-descriptive" class="headerlink" title="描述性统计学　descriptive"></a>描述性统计学　descriptive</h3><p>假设有一大堆数据，却希望在不告诉别人所有数据的情况下介绍这些数据的情况</p><blockquote><p>你可以找到一些指示性的数字来代表所有的数据，而无需将所有的数据都说一次</p></blockquote><h3 id="推论统计学-inferential"><a href="#推论统计学-inferential" class="headerlink" title="推论统计学 inferential"></a>推论统计学 inferential</h3><p>推论统计学运用数据来对事物做结论</p><blockquote><p>假设你从总体中得到一些样本(统计学中经常提到样本和总体)，<br>我们只需要对样本进行一些数学计算，便有可能推断出总体这个整体的情况</p></blockquote><blockquote><p>下一节我们再进行描述性统计学的内容，每一节一点点小东西，就像随手看一个笑话，这样显得不那么疲劳． </p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 集中趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学10：箱线图2</title>
      <link href="/2018/12/25/stats-10/"/>
      <url>/2018/12/25/stats-10/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="箱线图2"><a href="#箱线图2" class="headerlink" title="箱线图2"></a>箱线图2</h1><h5 id="须"><a href="#须" class="headerlink" title="须"></a>须</h5><p>须是显示所有数据的散布情况，左侧断线为最小值，右侧为最大值，我们可以很快的得出极差</p><h5 id="中位数"><a href="#中位数" class="headerlink" title="中位数"></a>中位数</h5><p>中间的线是中位数，在上节你会发现里面还有一个方点，那是平均数所在位置<br>盒图告诉我们一半的数据量小于中位数</p><blockquote><p>中位数可以用来作为集中趋势的测量标准</p></blockquote><h5 id="盒"><a href="#盒" class="headerlink" title="盒"></a>盒</h5><p>盒的两端是二分区域的各自中位数，即盒左端为小于主中位数数据的中位数，盒右端为大于主中位数数据的中位数．</p><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 箱线图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学09：箱线图1</title>
      <link href="/2018/12/25/stats-09/"/>
      <url>/2018/12/25/stats-09/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="箱线图1"><a href="#箱线图1" class="headerlink" title="箱线图1"></a>箱线图1</h1><p>从下到上五条线分别表示最小值、下四分位数、中位数、上四分位数和最大值.</p><blockquote><p>你可以通过它很快的发现数据批中的异常值，判断数据批的偏态和尾重，比较几批数据的形状．</p></blockquote><h4 id="顾客到餐厅的距离数据"><a href="#顾客到餐厅的距离数据" class="headerlink" title="顾客到餐厅的距离数据"></a>顾客到餐厅的距离数据</h4><p>通过这些数据绘制一张图，用来反映顾客的分布和距离的中位数．</p><p>14, 6, 3, 2, 4, 15, 11, 8, 1, 7, 2, 1, 3, 4, 10, 22, 20</p><blockquote><p>？<br>显然这个跟时间无关或者并没有想要某写变量之间的关系，那么线图是不合适的．<br>条形图是用来将事物归类的，看每一类数据的情况，也不是我们想要．<br>而饼图是看个部分的占比．<br>茎叶图可以帮助了解分布情况，但是无法很好的处理中位数距离和散布情况(我说过上节中配的图并不是正经的茎叶图，显然画它有些麻烦，数据下的那个表格形状才是真正的茎叶图，绘制起来并不复杂)．茎叶图可以发现中位数的大概位置在哪里，并不能直接看出来．</p></blockquote><blockquote><p>关注中位数和散布情况时，我们可以选择盒须图(箱线图，箱体图)．</p></blockquote><p><img src="/images/stats/s_09.png" alt="图片"></p><h4 id="绘制箱线图的过程"><a href="#绘制箱线图的过程" class="headerlink" title="绘制箱线图的过程"></a>绘制箱线图的过程</h4><blockquote><p>按照四分位划分，它可以显示出数据中位数在哪</p></blockquote><h5 id="step1-将数据进行排序"><a href="#step1-将数据进行排序" class="headerlink" title="step1.将数据进行排序"></a>step1.将数据进行排序</h5><p>1, 1, 2, 2, 3, 3, 4, 4, 6, 7, 8, 10, 11, 14, 15, 20, 22<br>median: 6</p><blockquote><p>中位数找到之后，数据被它分为两部分，再在这两部分中分别找到它们对应的中位数<br>这样就被三个数分为四个区间(从左至右，成为第a个n分区级)</p></blockquote><h5 id="step2-寻找四分位数"><a href="#step2-寻找四分位数" class="headerlink" title="step2.寻找四分位数"></a>step2.寻找四分位数</h5><p>(2+3)/2=2.5  　　madian:6　　 (11+14)/2=12.5</p><blockquote><p>这里计算采用去掉median的方法划分，你也可以把它分别包括在两个区域计算下一次的中位数</p></blockquote><h4 id="利用pyhton绘制箱线图"><a href="#利用pyhton绘制箱线图" class="headerlink" title="利用pyhton绘制箱线图"></a>利用<code>pyhton</code>绘制箱线图</h4><p>先看一下参数 <a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.boxplot.html" target="_blank" rel="noopener">matplotlib官网介绍</a></p><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> notch<span class="token operator">=</span>None<span class="token punctuation">,</span> sym<span class="token operator">=</span>None<span class="token punctuation">,</span> vert<span class="token operator">=</span>None<span class="token punctuation">,</span> whis<span class="token operator">=</span>None<span class="token punctuation">,</span> positions<span class="token operator">=</span>None<span class="token punctuation">,</span> widths<span class="token operator">=</span>None<span class="token punctuation">,</span> patch_artist<span class="token operator">=</span>None<span class="token punctuation">,</span> meanline<span class="token operator">=</span>None<span class="token punctuation">,</span> showmeans<span class="token operator">=</span>None<span class="token punctuation">,</span> showcaps<span class="token operator">=</span>None<span class="token punctuation">,</span> showbox<span class="token operator">=</span>None<span class="token punctuation">,</span> showfliers<span class="token operator">=</span>None<span class="token punctuation">,</span> boxprops<span class="token operator">=</span>None<span class="token punctuation">,</span> labels<span class="token operator">=</span>None<span class="token punctuation">,</span> flierprops<span class="token operator">=</span>None<span class="token punctuation">,</span> medianprops<span class="token operator">=</span>None<span class="token punctuation">,</span> meanprops<span class="token operator">=</span>None<span class="token punctuation">,</span> capprops<span class="token operator">=</span>None<span class="token punctuation">,</span> whiskerprops<span class="token operator">=</span>None<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>为了让你觉得代码不那么繁琐，这里是一个简单的实现</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'distance'</span><span class="token punctuation">:</span>data<span class="token punctuation">}</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>    patch_artist<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    showmeans<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果你并不满足上面代码的丰富，可以在下面的代码中发现一点新的东西</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'distance'</span><span class="token punctuation">:</span>data<span class="token punctuation">}</span><span class="token punctuation">)</span>yticks <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置支持中文</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Microsoft YaHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FF9966'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># ax1.grid(True, color='k', linestyle='-.')</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>yticks<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span> df<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>patch_artist<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> showmeans<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里并不重点说明程序的内容，应该更多的认识图表，利用统计学知识了解你的数据，程序的学习将会放在<code>目录</code>中<code>Machine Learning</code>，你会发现那里并不会仅仅放一些算法的内容，也有基础的工具(python)使用.</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 箱线图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学08：茎叶图</title>
      <link href="/2018/12/25/stats-08/"/>
      <url>/2018/12/25/stats-08/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="茎叶图"><a href="#茎叶图" class="headerlink" title="茎叶图"></a>茎叶图</h1><p>将数的大小基本不变或变化不大的位作为一个主干（茎），将变化大的位的数作为分枝（叶），列在主干的后面，这样就可以清楚地看到每个主干后面的几个数，每个数具体是多少。</p><blockquote><p>它可以直观的表现出数据的分布情况，而且把每个数字都准确的记录下来(没有原始数据信息的损失)，快速的计算均值，中位数，众数．</p></blockquote><h4 id="队员得分的数据"><a href="#队员得分的数据" class="headerlink" title="队员得分的数据"></a>队员得分的数据</h4><p>0, 0, 2, 4, 7, 7, 9, 11, 11, 13, 18, 20, 22, 22, 23, 25, 26, 26, 26, 28, 29, 31, 33, 35, 36, 41</p><blockquote><p><code>茎叶图</code><br>0 | 0 0 2 4 7 7 9<br>1 | 1 1 3 8<br>2 | 0 2 2 3 5 6 6 6 8 9<br>3 | 1 3 5 6<br>4 | 1</p></blockquote><p><img src="/images/stats/s_08.png" alt="图片"></p><blockquote><p>茎叶图的好处是可以很快的得出每个区间的数量，以及很快的看出数据集中在哪里．</p></blockquote><blockquote><p>这里并不是一个正经的茎叶图，我利用<code>stem</code>画出了我的想法，你也可以绘制你自己的茎叶图．在这里你会发现2-3数据比较密集，对的，这说明数据集中在20多(中位数可能分布在这附近)，也可以通过水平相邻的等高点的分布很快发现众数等等，其实可视化重要的是一眼能看出不同数据之间的差异和关系，可以发现它的特性，而不需要取具体的计算．</p></blockquote><h4 id="利用pyhton绘图"><a href="#利用pyhton绘图" class="headerlink" title="利用pyhton绘图"></a>利用<code>pyhton</code>绘图</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZerodata <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span>    <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">]</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>        a <span class="token operator">+=</span> <span class="token number">1</span>     <span class="token keyword">elif</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">:</span>        b <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">elif</span> i <span class="token operator">&lt;</span> <span class="token number">30</span><span class="token punctuation">:</span>        c <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">elif</span> i <span class="token operator">&lt;</span> <span class="token number">40</span><span class="token punctuation">:</span>        d <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">elif</span> i <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">:</span>        f <span class="token operator">+=</span> <span class="token number">1</span>    y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>x<span class="token punctuation">[</span>a<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.7</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>x<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2.7</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>x<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3.7</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span>x<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token operator">+</span>f<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4.7</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span>xticks <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>yticks <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FFDAB9'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FFDAB9'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># ax1.grid(True, color='k', linestyle='-.')</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>xticks<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>yticks<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">4.5</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">for</span> axis <span class="token keyword">in</span> ax1<span class="token punctuation">.</span>axis<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    axis<span class="token punctuation">.</span>major_ticks<span class="token punctuation">.</span>set_tick_out<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 标签全部在外部</span>markerline<span class="token punctuation">,</span> stemlines<span class="token punctuation">,</span> baselines <span class="token operator">=</span> plt<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'c-.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span>baselines<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>markerline<span class="token punctuation">,</span> stemlines<span class="token punctuation">,</span> baselines <span class="token operator">=</span> plt<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>x<span class="token punctuation">[</span>a<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>a<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'g-.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span>baselines<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>markerline<span class="token punctuation">,</span> stemlines<span class="token punctuation">,</span> baselines <span class="token operator">=</span> plt<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>x<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'b-.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span>baselines<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>markerline<span class="token punctuation">,</span> stemlines<span class="token punctuation">,</span> baselines <span class="token operator">=</span> plt<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>x<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'r-.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span>baselines<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>markerline<span class="token punctuation">,</span> stemlines<span class="token punctuation">,</span> baselines <span class="token operator">=</span> plt<span class="token punctuation">.</span>stem<span class="token punctuation">(</span>x<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token operator">+</span>f<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">:</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token operator">+</span>f<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'m-.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>setp<span class="token punctuation">(</span>baselines<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'r-'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>统计的内容中会经常用到matplotlib,如果你对它感兴趣，可以关注后期的<code>Machine Learning</code>中<a href="/contents/machine_learning/matplotlib.html">matplotlib</a>内容.<br>当然，那里的例子不像这样的繁琐，并且会要你想要的一些参数的说明</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)<br>你也可以在下方的留言板留下你宝贵的意见．</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 茎叶图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学07：误导人的线形图</title>
      <link href="/2018/12/25/stats-07/"/>
      <url>/2018/12/25/stats-07/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="误导人的线形图"><a href="#误导人的线形图" class="headerlink" title="误导人的线形图"></a>误导人的线形图</h1><h4 id="消费者偏好数据"><a href="#消费者偏好数据" class="headerlink" title="消费者偏好数据"></a>消费者偏好数据</h4><p>表中给出受访者中偏爱美味可乐(激动汽水，没有偏好)的人数百分比</p><table><thead><tr><th style="text-align:right">years</th><th style="text-align:right">Prefer Yummy Cola</th><th style="text-align:right">Prefer Thril Soda</th><th style="text-align:right">No preference</th></tr></thead><tbody><tr><td style="text-align:right">2006</td><td style="text-align:right">80%</td><td style="text-align:right">12%</td><td style="text-align:right">8%</td></tr><tr><td style="text-align:right">2007</td><td style="text-align:right">76%</td><td style="text-align:right">19%</td><td style="text-align:right">5%</td></tr><tr><td style="text-align:right">2008</td><td style="text-align:right">77%</td><td style="text-align:right">19%</td><td style="text-align:right">4%</td></tr><tr><td style="text-align:right">2009</td><td style="text-align:right">73%</td><td style="text-align:right">20%</td><td style="text-align:right">7%</td></tr><tr><td style="text-align:right">2010</td><td style="text-align:right">73%</td><td style="text-align:right">21%</td><td style="text-align:right">6%</td></tr><tr><td style="text-align:right">2011</td><td style="text-align:right">68%</td><td style="text-align:right">25%</td><td style="text-align:right">7%</td></tr></tbody></table><p><img src="/images/stats/s_07.png" alt="图片"></p><blockquote><p>从图中我们看到，里面的数据是正确的(和表中是对应的)<br>喜爱美味可乐的人比例在下降，喜爱激动汽水人数占比在增加<br>但是我们并不能给出变化幅度的结论，而且即使喜爱美味可乐的人占比下降，其实喜爱激动汽水的人数占比还是远远跟不上的，至少按照这样还是一个长远的过程．</p></blockquote><blockquote><p>我觉得我们需要一个正确的绘图来表达两个的对比<br>他们需要相同的坐标中比较</p></blockquote><p><img src="/images/stats/s_07_02.png" alt="图片"></p><h4 id="利用pyhton绘制线性图"><a href="#利用pyhton绘制线性图" class="headerlink" title="利用pyhton绘制线性图"></a>利用<code>pyhton</code>绘制线性图</h4><h5 id="误导人的线形图程序"><a href="#误导人的线形图程序" class="headerlink" title="误导人的线形图程序"></a>误导人的线形图程序</h5><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token comment" spellcheck="true"># 设置图窗口1</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FFDAB9'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FFDAB9'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 设置窗口2</span>ax2 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FFDAB9'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax2<span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 创建数据</span>prefer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Prefer Yummy Cola'</span><span class="token punctuation">,</span> <span class="token string">'Prefer Thril Soda'</span><span class="token punctuation">,</span> <span class="token string">'No preference'</span><span class="token punctuation">]</span>years <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2006'</span><span class="token punctuation">,</span> <span class="token string">'2007'</span><span class="token punctuation">,</span> <span class="token string">'2008'</span><span class="token punctuation">,</span> <span class="token string">'2009'</span><span class="token punctuation">,</span> <span class="token string">'2010'</span><span class="token punctuation">,</span> <span class="token string">'2011'</span><span class="token punctuation">]</span>years_x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>years<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>prefer_cola <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">]</span>prefer_soda <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span>y_cola <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>y_soda <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 画图</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>years_x<span class="token punctuation">,</span> prefer_cola<span class="token punctuation">,</span> <span class="token string">'r-o'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>years_x<span class="token punctuation">,</span> years<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>y_cola<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span>prefer<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>years_x<span class="token punctuation">,</span> prefer_soda<span class="token punctuation">,</span> <span class="token string">'g-o'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>years_x<span class="token punctuation">,</span> years<span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>y_soda<span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span>prefer<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="正确的线形绘图程序"><a href="#正确的线形绘图程序" class="headerlink" title="正确的线形绘图程序"></a>正确的线形绘图程序</h5><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>axisartist<span class="token punctuation">.</span>axislines <span class="token keyword">import</span> SubplotZero<span class="token comment" spellcheck="true"># 设置图窗口1</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">120</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#FFDAB9'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'c'</span><span class="token punctuation">)</span> ax1 <span class="token operator">=</span> SubplotZero<span class="token punctuation">(</span>fig<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> axisbg<span class="token operator">=</span><span class="token string">'#FFDAB9'</span><span class="token punctuation">)</span>fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>ax1<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">'-'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>axis<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_visible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 创建数据</span>prefer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Prefer Yummy Cola'</span><span class="token punctuation">,</span> <span class="token string">'Prefer Thril Soda'</span><span class="token punctuation">,</span> <span class="token string">'No preference'</span><span class="token punctuation">]</span>years <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'2006'</span><span class="token punctuation">,</span> <span class="token string">'2007'</span><span class="token punctuation">,</span> <span class="token string">'2008'</span><span class="token punctuation">,</span> <span class="token string">'2009'</span><span class="token punctuation">,</span> <span class="token string">'2010'</span><span class="token punctuation">,</span> <span class="token string">'2011'</span><span class="token punctuation">]</span>years_x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>years<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>prefer_cola <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">]</span>prefer_soda <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span>y_cola <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 画图</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>years_x<span class="token punctuation">,</span> prefer_cola<span class="token punctuation">,</span> <span class="token string">'r-o'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>years_x<span class="token punctuation">,</span> prefer_soda<span class="token punctuation">,</span> <span class="token string">'g-o'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>years_x<span class="token punctuation">,</span> years<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span>y_cola<span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Prefer Yummy Cola and Prefer Thril Soda'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>由于博文标题在图片上的颜色影响，代码中添加了背景的设置，如果觉得过于繁琐，可以参照前几节的matplotlib命令，或者参考后期的<code>Machine Learning</code>中<a href="/contents/machine_learning/matplotlib.html">matplotlib</a>内容.</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 误导人的线形图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学06：饼图</title>
      <link href="/2018/12/25/stats-06/"/>
      <url>/2018/12/25/stats-06/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h1><p>饼图也叫圆图，当然你最常听到的应该是饼图．<br>就像它的名字，一个饼被分成多份，每一份的大小代表其所对应的数据类型占据总数据的比列<br>可以通过它直观的发现每个特征占据总量的对比情况</p><h4 id="一家集团的现金流出表部分内容"><a href="#一家集团的现金流出表部分内容" class="headerlink" title="一家集团的现金流出表部分内容"></a>一家集团的现金流出表部分内容</h4><table><thead><tr><th style="text-align:right">项目</th><th style="text-align:right">2011</th><th style="text-align:right">2012</th><th style="text-align:right">2013</th><th style="text-align:right">2014</th><th style="text-align:right">2015</th></tr></thead><tbody><tr><td style="text-align:right">经营活动现金流出(亿元)</td><td style="text-align:right">33.43</td><td style="text-align:right">34.49</td><td style="text-align:right">46.49</td><td style="text-align:right">54.18</td><td style="text-align:right">57.51</td></tr><tr><td style="text-align:right">投资活动现金流出(亿元)</td><td style="text-align:right">3.02</td><td style="text-align:right">5.97</td><td style="text-align:right">1.55</td><td style="text-align:right">2.38</td><td style="text-align:right">52.11</td></tr><tr><td style="text-align:right">筹资活动现金流出(亿元)</td><td style="text-align:right">2.30</td><td style="text-align:right">6.09</td><td style="text-align:right">6.60</td><td style="text-align:right">6.16</td><td style="text-align:right">4.62</td></tr></tbody></table><p><img src="/images/stats/s_06.png" alt="图片"></p><blockquote><p>从饼图中我们可以很直观的看到现金的去向，有70%-90%的现金用于经营活动，而且逐年比例增高，投资活动、筹资活动的现金流比较小。</p></blockquote><blockquote><p>它的每一份的面积和它所代表的数据属性占总属性的百分比是等价的</p></blockquote><h4 id="利用pyhton绘制线性图"><a href="#利用pyhton绘制线性图" class="headerlink" title="利用pyhton绘制线性图"></a>利用<code>pyhton</code>绘制线性图</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> cmlabels <span class="token operator">=</span> <span class="token string">'Business'</span><span class="token punctuation">,</span> <span class="token string">'Investment'</span><span class="token punctuation">,</span> <span class="token string">'Financing'</span>money <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">33.43</span><span class="token punctuation">,</span> <span class="token number">3.02</span><span class="token punctuation">,</span> <span class="token number">2.03</span><span class="token punctuation">]</span>explode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span> fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置颜色，也可以不设置(colors不传值，会采用默认值)</span>colors <span class="token operator">=</span> cm<span class="token punctuation">.</span>rainbow<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>len<span class="token punctuation">(</span>labels<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>len<span class="token punctuation">(</span>labels<span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>money<span class="token punctuation">,</span> explode<span class="token operator">=</span>explode<span class="token punctuation">,</span> labels<span class="token operator">=</span>labels<span class="token punctuation">,</span> autopct<span class="token operator">=</span><span class="token string">"%1.1f%%"</span><span class="token punctuation">,</span>       shadow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> startangle<span class="token operator">=</span><span class="token number">180</span><span class="token punctuation">,</span> colors<span class="token operator">=</span>colors<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token string">'equal'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Cash Outflows of 2011'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>程序中并没有像图片中的效果，图片是我在校期间的报表分析作业，它是通过<code>excel</code>绘制的，当时我还不认识计算机语言．<br>你也可以通过<code>excel</code>绘制，它可能会通过很快的方法达到你想要的结果．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 饼图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学05：线形图</title>
      <link href="/2018/12/25/stats-05/"/>
      <url>/2018/12/25/stats-05/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="线形图"><a href="#线形图" class="headerlink" title="线形图"></a>线形图</h1><h4 id="一家投资公司有如下12个月的特定股票业绩数据如下表"><a href="#一家投资公司有如下12个月的特定股票业绩数据如下表" class="headerlink" title="一家投资公司有如下12个月的特定股票业绩数据如下表"></a>一家投资公司有如下12个月的特定股票业绩数据如下表</h4><p>这一年间，股价是上涨？下跌？还是不变？</p><table><thead><tr><th style="text-align:right">July</th><th style="text-align:right">August</th><th style="text-align:right">September</th><th style="text-align:right">October</th><th style="text-align:right">November</th><th style="text-align:right">December</th></tr></thead><tbody><tr><td style="text-align:right">10.1</td><td style="text-align:right">11.1</td><td style="text-align:right">10.2</td><td style="text-align:right">12</td><td style="text-align:right">12.7</td><td style="text-align:right">12.1</td></tr></tbody></table><table><thead><tr><th style="text-align:right">January</th><th style="text-align:right">February</th><th style="text-align:right">March</th><th style="text-align:right">April</th><th style="text-align:right">May</th><th style="text-align:right">June</th></tr></thead><tbody><tr><td style="text-align:right">13.2</td><td style="text-align:right">13.7</td><td style="text-align:right">16.9</td><td style="text-align:right">15.3</td><td style="text-align:right">15.9</td><td style="text-align:right">16.7</td></tr></tbody></table><blockquote><p>线性图可以用于随时间变化的事物</p></blockquote><p><img src="/images/stats/s_05.png" alt="图片"></p><blockquote><p>从图中很容易发现这每个月之间股价有涨有跌，对于问题，这一年整体趋势是涨的</p></blockquote><h4 id="利用pyhton绘制线性图"><a href="#利用pyhton绘制线性图" class="headerlink" title="利用pyhton绘制线性图"></a>利用<code>pyhton</code>绘制线性图</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> scipy <span class="token keyword">import</span> optimize<span class="token keyword">def</span> <span class="token function">line_fun</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> theate<span class="token punctuation">,</span> beta<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> theate <span class="token operator">*</span> x <span class="token operator">+</span> betastock_name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'July'</span><span class="token punctuation">,</span> <span class="token string">'August'</span><span class="token punctuation">,</span> <span class="token string">'September'</span><span class="token punctuation">,</span> <span class="token string">'October'</span><span class="token punctuation">,</span> <span class="token string">'November'</span><span class="token punctuation">,</span> <span class="token string">'December'</span><span class="token punctuation">,</span>         <span class="token string">'January'</span><span class="token punctuation">,</span> <span class="token string">'February'</span><span class="token punctuation">,</span> <span class="token string">'March'</span><span class="token punctuation">,</span> <span class="token string">'April'</span><span class="token punctuation">,</span> <span class="token string">'May'</span><span class="token punctuation">,</span> <span class="token string">'June'</span><span class="token punctuation">]</span>stock_num <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>stock_name<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>price <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10.1</span><span class="token punctuation">,</span> <span class="token number">11.1</span><span class="token punctuation">,</span> <span class="token number">10.2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12.7</span><span class="token punctuation">,</span> <span class="token number">12.1</span><span class="token punctuation">,</span> <span class="token number">13.2</span><span class="token punctuation">,</span> <span class="token number">13.7</span><span class="token punctuation">,</span> <span class="token number">16.9</span><span class="token punctuation">,</span> <span class="token number">15.3</span><span class="token punctuation">,</span> <span class="token number">15.9</span><span class="token punctuation">,</span> <span class="token number">16.7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>price_y <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 线性拟合</span>theate<span class="token punctuation">,</span> beta <span class="token operator">=</span> optimize<span class="token punctuation">.</span>curve_fit<span class="token punctuation">(</span>line_fun<span class="token punctuation">,</span> stock_num<span class="token punctuation">,</span> price<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>y <span class="token operator">=</span> line_fun<span class="token punctuation">(</span>stock_num<span class="token punctuation">,</span> theate<span class="token punctuation">,</span> beta<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>style<span class="token punctuation">.</span>use<span class="token punctuation">(</span><span class="token string">'ggplot'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>stock_num<span class="token punctuation">,</span> price<span class="token punctuation">,</span> <span class="token string">'b-o'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>stock_num<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'r-.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>stock_num<span class="token punctuation">,</span> stock_name<span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span>price_y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'price of stock share, July 2010-June 2011'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'months'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">"price($)"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> scipy </tag>
            
            <tag> 线形图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学04：条形图</title>
      <link href="/2018/12/25/stats-04/"/>
      <url>/2018/12/25/stats-04/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="条形图-bar"><a href="#条形图-bar" class="headerlink" title="条形图 bar"></a>条形图 bar</h1><h4 id="学生期中成绩和期末成绩如下表"><a href="#学生期中成绩和期末成绩如下表" class="headerlink" title="学生期中成绩和期末成绩如下表"></a>学生期中成绩和期末成绩如下表</h4><table><thead><tr><th>name</th><th style="text-align:right">Jasmine</th><th style="text-align:right">Jeff</th><th style="text-align:right">Nevin</th><th style="text-align:right">Alejandra</th><th style="text-align:right">Marta</th></tr></thead><tbody><tr><td>MidtermExam</td><td style="text-align:right">73</td><td style="text-align:right">87</td><td style="text-align:right">84</td><td style="text-align:right">81</td><td style="text-align:right">95</td></tr><tr><td>FinalExam</td><td style="text-align:right">78</td><td style="text-align:right">85</td><td style="text-align:right">87</td><td style="text-align:right">95</td><td style="text-align:right">90</td></tr></tbody></table><p>从表中，我们并不能直接(数据量大的情况下更为明显)的观察出不同成绩的对比．<br>因此依据表中数据，利用<code>matplotlib</code>绘制了条形图，如下图：<br><img src="/images/stats/s_04.png" alt="图片"></p><blockquote><p>从图中很容易发现Alejandra进步最大;Marta的期末成绩虽然很高,但是相对于期中成绩并没有发挥的很好;Jeff,Nevin的成绩相对比较稳定;Jasmine的成绩稳健增长(当然两个数据很难得出这样的答案，这里只是举例)等等．</p></blockquote><blockquote><p>把数据通过可视化的方法呈现出来，可以让我们更直观的观察一些在数字上没有直接发现的东西．</p></blockquote><p><code>以下代码是绘制条形图的命令</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltname <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Jasmine'</span><span class="token punctuation">,</span> <span class="token string">'Jeff'</span><span class="token punctuation">,</span> <span class="token string">'Nevin'</span><span class="token punctuation">,</span> <span class="token string">'Alejandra'</span><span class="token punctuation">,</span> <span class="token string">'Marta'</span><span class="token punctuation">]</span>midterm_exam <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">)</span>final_exam <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>index <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>len<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>bar_width <span class="token operator">=</span> <span class="token number">0.35</span>opacity <span class="token operator">=</span> <span class="token number">0.6</span>error_config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'ecolor'</span><span class="token punctuation">:</span> <span class="token string">'0.3'</span><span class="token punctuation">}</span>rects1 <span class="token operator">=</span> ax<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>index <span class="token operator">+</span> bar_width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> midterm_exam<span class="token punctuation">,</span> bar_width<span class="token punctuation">,</span>                color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span>opacity<span class="token punctuation">,</span> yerr<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>                error_kw<span class="token operator">=</span>error_config<span class="token punctuation">,</span>                label<span class="token operator">=</span><span class="token string">'midterm_exam'</span><span class="token punctuation">)</span>rects2 <span class="token operator">=</span> ax<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> bar_width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> final_exam<span class="token punctuation">,</span> bar_width<span class="token punctuation">,</span>                color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span>opacity<span class="token punctuation">,</span> yerr<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>                error_kw<span class="token operator">=</span>error_config<span class="token punctuation">,</span>                label<span class="token operator">=</span><span class="token string">'final_exam'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'Score(%)'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'Scores on Midterm and Final Exams'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> bar_width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xticklabels<span class="token punctuation">(</span>name<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>fontsize<span class="token operator">=</span><span class="token string">'x-small'</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token string">'upper left'</span><span class="token punctuation">,</span> scatterpoints<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 条形图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学03：象形统计图</title>
      <link href="/2018/12/25/stats-03/"/>
      <url>/2018/12/25/stats-03/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="象形统计图-pictograph"><a href="#象形统计图-pictograph" class="headerlink" title="象形统计图 pictograph"></a>象形统计图 pictograph</h1><blockquote><p>表现统计数字大小和变动的各种图形总称</p></blockquote><blockquote><p>特点：形象，直观，数据比例很清楚</p></blockquote><blockquote><p>人眼是个高带宽的巨量信号输入并行处理器，具有超强的模式识别能力，对可视符号的感知速度对数字或文本快多个数量级．</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 象形统计图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学02：极差 中程数</title>
      <link href="/2018/12/25/stats-02/"/>
      <url>/2018/12/25/stats-02/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="极差-range"><a href="#极差-range" class="headerlink" title="极差 range"></a>极差 range</h1><p>最小值于最大值之差</p><blockquote><p>数值越小越紧密</p></blockquote><p>一组数：65,81,73,58,94,79,67,93,82<br>range: 94-65 = 29</p><pre><code>L = [65,81,73,58,94,79,67,93,82]range = max(L) - min(L)</code></pre><h1 id="中程数-midrange"><a href="#中程数-midrange" class="headerlink" title="中程数 midrange"></a>中程数 midrange</h1><p>最小值和最大值的算术平均数</p><blockquote><p>考虑集中趋势的又一种方式</p></blockquote><pre><code>midrange = (max(L) + min(L)) / 2</code></pre><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 极差 </tag>
            
            <tag> 中程数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计学01：均值 中位数 众数</title>
      <link href="/2018/12/25/stats-01/"/>
      <url>/2018/12/25/stats-01/</url>
      
        <content type="html"><![CDATA[<p><a href="/contents/math/statistical.html">统计学•目录</a> <a href="/categories/Statistical/">统计学•类别</a>  <a href="/contents/math/">math</a></p><hr><h1 id="平均数-mean"><a href="#平均数-mean" class="headerlink" title="平均数 mean"></a>平均数 mean</h1><p>一组数：23　29　20　32　23　21　33　25<br>mean: (23+29+20+32+23+21+33+25)/8 = 25.75</p><pre><code>L = [23, 29, 20, 32, 23, 21, 33, 25]mean = sum(L) / 8</code></pre><h1 id="中位数-median"><a href="#中位数-median" class="headerlink" title="中位数 median"></a>中位数 median</h1><p>比它小和比它大的数的数量同样多，如果总的数量为偶数，取中间两个的平均值<br>首先将上面的数排序：20, 21, 23, 23, 25, 29, 32, 33　<br>median: (23+25)/2 = 24</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">quick</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''排序函数    '''</span>    <span class="token keyword">if</span> len<span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> value    mark <span class="token operator">=</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    smaller <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> value <span class="token keyword">if</span> x <span class="token operator">&lt;</span> mark<span class="token punctuation">]</span>    equal <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> value <span class="token keyword">if</span> x <span class="token operator">==</span> mark<span class="token punctuation">]</span>    bigger <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> value <span class="token keyword">if</span> x <span class="token operator">></span> mark<span class="token punctuation">]</span>    <span class="token keyword">return</span> quick<span class="token punctuation">(</span>smaller<span class="token punctuation">)</span> <span class="token operator">+</span> equal <span class="token operator">+</span> quick<span class="token punctuation">(</span>bigger<span class="token punctuation">)</span>L <span class="token operator">=</span> quick<span class="token punctuation">(</span>L<span class="token punctuation">)</span>index <span class="token operator">=</span> len<span class="token punctuation">(</span>L<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span><span class="token keyword">if</span> <span class="token operator">not</span> index<span class="token punctuation">:</span>    mdeian <span class="token operator">=</span> L<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token keyword">else</span><span class="token punctuation">:</span>    mdeian <span class="token operator">=</span> <span class="token punctuation">(</span>L<span class="token punctuation">[</span>index<span class="token number">-1</span><span class="token punctuation">]</span> <span class="token operator">+</span> L<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span>mdeian<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 你也可以用下面的函数方法排序</span><span class="token keyword">def</span> <span class="token function">insert</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>len<span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        pos <span class="token operator">=</span> i        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span>i<span class="token number">-1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> value<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> temp<span class="token punctuation">:</span>                value<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">[</span>j<span class="token punctuation">]</span>                pos <span class="token operator">=</span> j            <span class="token keyword">else</span><span class="token punctuation">:</span>                pos <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span>                <span class="token keyword">break</span>        value<span class="token punctuation">[</span>pos<span class="token punctuation">]</span> <span class="token operator">=</span> temp    <span class="token keyword">return</span> value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="众数-mode"><a href="#众数-mode" class="headerlink" title="众数 mode"></a>众数 mode</h1><p>正如它的名字，出现次数最多的数字就是众数</p><blockquote><p>众数可以为多个</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">mode_fun</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>    l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>     d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>     mode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 把数字和对应的数学存入字典</span>        <span class="token keyword">if</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> d<span class="token punctuation">:</span>             d<span class="token punctuation">[</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>         <span class="token keyword">else</span><span class="token punctuation">:</span>             d<span class="token punctuation">[</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> d<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># item返回元组 </span>        l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>v<span class="token punctuation">)</span>     <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> d<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> v <span class="token operator">==</span> max<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>            mode<span class="token punctuation">.</span>append<span class="token punctuation">(</span>k<span class="token punctuation">)</span>    <span class="token keyword">return</span> modemode_fun<span class="token punctuation">(</span>L<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>也可以直接通过<code>import numpy, scipy</code>很快的得出答案</p></blockquote><hr><p>博主个人能力有限，错误在所难免．<br>如发现错误请不要吝啬，发邮件给博主更正内容，在此提前鸣谢．<br>Email: <a href="mailto:JentChang@163.com" target="_blank" rel="noopener">JentChang@163.com</a> (来信请注明文章标题，如果附带链接就更方便了)</p>]]></content>
      
      
      <categories>
          
          <category> Statistical </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Statistical </tag>
            
            <tag> Math </tag>
            
            <tag> 均值 </tag>
            
            <tag> 中位数 </tag>
            
            <tag> 众数 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
